package NLemmerProto;

message TFlexie {
    required bytes Text = 1;
};

message TScheme {
    required TFlexie Flex = 1;
    required int32 GrammarId = 2;
    required int32 BlockId = 3;
    optional int32 Frequency = 4 [default = 0];
};

message TBlock {
    optional TFlexie Flex = 1;
    required int32 GrammarRefIndex = 2;
    optional int32 Frequency = 3 [default = 0];
    required bool HasNext = 4;
};

message TPattern {
    required uint32 Bitmask = 1;
    optional int32 Frequency = 2 [default = 0];
    optional uint32 DiaMask = 3;
};

message TRef {
    required int32 Id = 1;
    required bool HasNext = 2;
};

message TTrie {
    required bytes Binary = 1;
};

message TLemmerDict {
    repeated string Grammars = 1;
    repeated TRef GrammarRefs = 2;
    repeated TTrie FlexTries = 3;
    required TTrie PatternsTrie = 4;
    repeated TScheme Schemes = 5;
    repeated TBlock Blocks = 6;
    repeated TPattern Patterns = 7;

    repeated TRef MatchedPatterns = 10;
    optional int32 DefaultGrammarRefIndex = 11;
    optional string Fingerprint = 12;
}
