import "kernel/indexann/protos/data.proto";

package NMango;

message TDateTags {
    optional uint64 ModTime = 1;
    optional uint64 CreationTime = 2;
}

enum TNetworkType {
    WEB = 1;
    TWITTER = 2;
    LIVEJOURNAL = 3;
    LENTA_FEED = 4;
    YARU = 5;
    GENERIC = 6;
    LIVEINTERNET = 7;
    MAILRU = 8;
    DIARY = 9;
    FACEBOOK = 10;
    VK = 11;
    GOOGLEPLUS = 12;
}

enum TQuoteExtractionType {
    TWEET = 1;
    BLOG_LINK_TEXT = 2;
    BLOG_NEAR_LINK_TEXT = 5;
    HTML_FIRST_PARAGRAPH = 7;
    HTML_BEST_PARAGRAPH = 8;
    BLOG_FROM_REPOST = 9;
    BLOG_ORIGINAL_FROM_REPOST = 10;
    RETWEET = 11;
    WEB_LIKE = 12;
    WEB_UNLIKE = 13;
}

message TIndexFactor {
    required int32 Id = 1;
    required double Value = 2;
}

message TResource {
    enum TResourceType {
        ARTICLE = 1;
        VIDEO = 2;
        AUDIO = 3;
        FILE = 4;
        UNKNOWN = 5;
    }

    enum TSearchStatus {
        SS_OK = 1;
        SS_SPAM = 2;                 // target spam
        SS_DEPRECATED = 3;           // considered as deprecated forever, such resource will never be redownloaded
        SS_SPAM_ON_SEARCH = 4;       // offline-search
        SS_DEPRECATED_ON_SEARCH = 5; // offline search
        SS_DOWNLOAD_ERROR = 6;       // allows to redownload it
        SS_HAS_POPULAR_INNER_LINKS = 7; //can't replace any inner link by popular morda
    }

    message TDocSeoSpamFactors {
        optional bool FromSpamOwner = 1;
        optional bool FromCommercialOwner = 2;
        optional float IncomingSeoLinks = 3;
        optional bool FromNewsSource = 4;
    }
    message TTreeData {
        optional uint64 LastAttempt = 1;
        optional uint32 NumAttempts = 2;
        optional uint32 MimeType = 3;
    }

    required string Id = 1;
    required string Url = 2;
    required TResourceType ResourceType = 3;
    optional int64 DocID = 4;
    optional TSearchStatus SearchStatus = 8 [default = SS_OK];
    optional TDocSeoSpamFactors SeoSpamFactors = 9;
    optional bool IsMorda = 10;
    optional bool IsFinal = 11;
    optional TTreeData TreeData = 12;
    optional float NewsAuthorityBoost = 13;
}

message TAuthorSearchAttributes {
    required string Id = 1;
    required double Authority = 2;
    required TNetworkType NetworkType = 3;
    optional bool IsMassfollower = 4;
    optional bool IsTranslator = 5;
    optional uint32 PPBFeedID = 6;
    optional string Language = 7;
    optional bool IsSpammer = 8;
    optional double AuthorityNotNormalized = 9;
    optional bool IsInaccessible = 10;
    optional uint64 CreatedTime = 11;
    optional uint64 TwitterId = 12;
        // hr author name ("Alexey Venediktov" for @aavst)
    optional string Name = 13;
}

message TQuoteData {
    required uint64 CreationTime = 1;
    optional string Text = 2;
    optional TQuoteExtractionType ExtractionType = 3;
    optional string SourceUrl = 4;
    repeated string ExpandedFrom = 5;
    optional uint64 ExtractionTime = 6;
    optional string Title = 7;
    optional bool IsAnnotation = 10;
    optional bool IsDuplicateText = 11;
    optional bool IsCreatedBySharing = 12;
    optional bool IsExtractedByExperimentalExtractor = 13;
    // The original url from the original post (with no normalization/canonization applied).
    optional string OriginalResourceId = 14;
    optional uint32 RepostCount = 15;
    optional float TopicCorrespondence = 16 [default = 1.0];
    repeated uint32 OutcomingLinksHashes = 17;
    repeated uint32 Languages = 18;
    // is true if quote contains trash content and should not be considered (actual for annotations)
    optional bool IsTrash = 19;
    optional bool IsFromDeletedPost = 21;
    repeated string OutcomingLinks = 22; // only for debug
    optional string OriginalSourceUrl = 23; // the URL of "original" post, if it exists (e.g., if it's a retweet)
    repeated string Hashtags = 24;

    optional double MaxAuthorityAmongReposts = 25;
    optional double SumAuthorityAmongReposts = 26;
}

message TAuthStatrankData {
    optional float StatrankValue = 1;
    optional bytes AuthorCombinator = 2;
}

message TIndexQuote {
    required TAuthorSearchAttributes AuthorSearchAttributes = 1;
    required TQuoteData Data = 2;
    // the following fields has no meaning in TQuoteData and so they are here
    optional uint32 Count = 3;
    optional string UncanonizedResourceId = 4;
    optional bool IsOrangeExported = 5 [default = false];
    optional TAuthStatrankData AuthStatrankData = 6;
    optional bool IsBiased = 7;
}

message TIndexQuotes {
    required TResource Resource = 1;
    repeated TIndexQuote Quotes = 2;
    repeated TIndexFactor Factors = 3;
    optional string VideoSnipAttrs = 4;
}

message TMangoIndexedData {
    optional NIndexAnn.TIndexAnnSiteData Annotations = 1;
    optional bytes Erf = 2;
    optional bytes PackedDocAttrs = 4;
    repeated fixed64 UrlHashes = 5;
    optional uint32 Result = 6;
}
