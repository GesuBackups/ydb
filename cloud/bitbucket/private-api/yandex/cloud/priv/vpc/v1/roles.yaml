role_groups:
  vpc:
    name: VPC roles

roles:
  vpc.viewer:
    groups: [vpc]
    name: 'Пользователь VPC с правами только на чтение'
    description: 'Роль на чтение объектов сети'
    visibility: public
    includedRoles:
      - vpc.gateways.viewer.pseudo
    permissions:
      - vpc.quotas.get
      - iam.folders.get
      - resource-manager.folders.get
      - vpc.networks.{list,get}
      - vpc.subnets.{list,get}
      - vpc.routeTables.{list,get}
      - vpc.addresses.{get,list}
      - vpc.securityGroups.{list,get}
      - "{vpc,compute}.operations.{get,list}" # replace after migration to new backend
      - vpc.subnets.listUsedAddresses

  vpc.user:
    groups: [vpc]
    name: 'Пользователь VPC'
    description: 'Роль на чтение и использование объектов сети'
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.networks.use
      - vpc.subnets.use
      - vpc.routeTables.use
      - vpc.addresses.use
      - vpc.securityGroups.use

  vpc.securityGroups.user.pseudo:
    pseudorole: true
    groups: [vpc]
    name: 'Псевдороль для пользователя групп безопасности VPC'
    description: ''
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.securityGroups.use
      - compute.instances.assignSecurityGroup

  vpc.securityGroups.user:
    groups: [vpc]
    name: 'Пользователь групп безопасности VPC'
    description: ''
    visibility: public
    includedRoles:
      - vpc.securityGroups.user.pseudo
    permissions: []

  vpc.securityGroups.editor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: 'Псевдороль для администратора групп безопасности VPC'
    description: ''
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.useIpv6
      - vpc.securityGroups.create
      - vpc.securityGroups.delete
      - vpc.securityGroups.update
      - vpc.securityGroups.updateMeta
      - vpc.securityGroups.updateRuleMeta
      - vpc.securityGroups.createDefaultSecurityGroup
      - vpc.securityGroups.deleteDefaultSecurityGroup
      - vpc.networks.{createSecurityGroup,deleteSecurityGroup,updateSecurityGroup}
      - vpc.networks.security.{addEgressRule,deleteEgressRule,addIngressRule,deleteIngressRule}
      - vpc.subnets.listUsedAddresses

  vpc.securityGroups.admin:
    groups: [vpc]
    name: "Администратор групп безопасности VPC"
    description: ''
    visibility: public
    includedRoles:
      - vpc.securityGroups.editor.pseudo
    permissions: []

  vpc.gateways.viewer.pseudo:
    groups: [vpc]
    name: "VPC Gateways viewer pseudo"
    description: ''
    pseudorole: true
    visibility: public
    permissions:
     - vpc.gateways.get

  vpc.gateways.editor.pseudo:
    groups: [vpc]
    name: "VPC Gateways editor pseudo"
    description: ''
    pseudorole: true
    visibility: public
    includedRoles:
      - vpc.gateways.viewer.pseudo
    permissions:
     - vpc.gateways.create
     - vpc.gateways.update
     - vpc.gateways.delete

  vpc.gateways.user.pseudo:
    groups: [vpc]
    name: "VPC Gateways user pseudo"
    description: ''
    pseudorole: true
    visibility: public
    includedRoles:
      - vpc.gateways.viewer.pseudo
    permissions:
      - vpc.gateways.use

  vpc.gateways.viewer:
    groups: [vpc]
    name: "VPC Gateways viewer"
    description: ''
    visibility: public
    includedRoles:
      - vpc.gateways.viewer.pseudo

  vpc.gateways.editor:
    groups: [vpc]
    name: "VPC Gateways editor"
    description: ''
    visibility: public
    includedRoles:
      - vpc.gateways.editor.pseudo

  vpc.gateways.user:
    groups: [vpc]
    name: "VPC Gateways user"
    description: ''
    visibility: public
    includedRoles:
      - vpc.gateways.user.pseudo

  vpc.admin:
    groups: [vpc]
    name: "Сетевой администратор"
    description: ''
    visibility: public
    includedRoles:
      - vpc.privateAdmin
      - vpc.publicAdmin
      - vpc.securityGroups.admin
    permissions: []

  vpc.privateAdmin:
    groups: [vpc]
    name: "Сетевой администратор виртуальной сети"
    description: ''
    visibility: public
    includedRoles:
      - vpc.privateEditor.pseudo
    permissions: []

  vpc.bridgeAdmin:
    groups: [vpc]
    name: "Администратор ВМ, соединяющих несколько VPC"
    description: "Используйте при необходимости организовать связность между сетями посредством мультиинтерфейсных ВМ"
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - "vpc.networks.bridge"
      - "vpc.subnets.use"

  vpc.publicAdmin:
    groups: [vpc]
    name: "Сетевой администратор внешнего доступа"
    description: ''
    visibility: public
    includedRoles:
      - vpc.publicEditor.pseudo
      - vpc.gateways.editor.pseudo
    permissions: []

  vpc.privateEditor.pseudo:
    pseudorole: true
    groups: [vpc]
    visibility: public
    name: ''
    description: ''
    includedRoles:
      - vpc.viewer
      - vpc.networks.editor.pseudo
      - vpc.subnets.editor.pseudo
      - vpc.routeTables.editor.pseudo
      - vpc.addresses.privateEditor.pseudo
    permissions: []

  vpc.publicEditor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: "Сетевой администратор внешнего доступа (pseudo)"
    description: ''
    visibility: public
    includedRoles:
      - vpc.viewer
      - vpc.addresses.publicEditor.pseudo
    permissions:
      - vpc.networks.bridge
      - vpc.networks.configureExternalAccess
      - vpc.subnets.useEgressNat
      - vpc.subnets.update
      - vpc.routeTables.use

  vpc.addresses.privateEditor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: "VPC internal addresses editor (pseudo)"
    description: ''
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.addresses.createInternal

  vpc.addresses.publicEditor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: "VPC external addresses editor (pseudo)"
    description: ''
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.addresses.{delete,update,createExternal}

  vpc.networks.editor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: "VPC network editor pseudorole"
    description: "Псевдороль с правами на создание и редактирование сетей"
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.networks.createDefaultSecurityGroup
      - vpc.networks.create
      - vpc.networks.delete
      - vpc.networks.update

  vpc.subnets.editor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: "VPC subnets editor pseudorole"
    description: "Псевдороль с правами на создание и редактирование подсетей"
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.subnets.{create,delete,update,assignDhcpOptions}
      - vpc.networks.createSubnet
      - vpc.routeTables.use
      - vpc.subnets.listUsedAddresses

  vpc.routeTables.editor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: "VPC routeTables editor pseudorole"
    description: "Псевдороль с правами на создание и редактирование таблиц маршрутиации"
    visibility: public
    includedRoles:
      - vpc.viewer
    permissions:
      - vpc.routeTables.{create,delete,update}
      - vpc.networks.createRouteTable

  vpc.support:
    groups: [vpc, support]
    name: Support VPC
    visibility: internal
    description: Role for support engineers
    permissions:
    # copy of vpc.viewer
    - vpc.quotas.get
    - vpc.addresses.{get,list}
    - vpc.networks.{get,list}
    - vpc.routeTables.{get,list}
    - vpc.subnets.{get,list}
    - vpc.securityGroups.{get,list}

    # specific for support
    - vpc.featureFlags.{get,list,listForScope,getWhiteList,editWhiteList,getBlackList,editBlackList,editTagsList}
    - vpc.featureFlagOperations.list
    - vpc.quotas.updateLimit
    - vpc.subnets.listUsedAddresses
    - vpc.fipBuckets.{get,list}
    - vpcInternal.fipBuckets.{get,list} # TODO(yesworld): Remove me.

    # permissions to manage addresses
    - vpc.addresses.{createExternal,createInternal,createSpecific,createYandexOnly,use,update,delete}
    - compute.networkInterfaces.{get,list,attach,detach}

  internal.vpc.featureFlags.admin:
    groups: [vpc, support]
    name: Feature flags admin
    visibility: internal
    description: All read & write feature flags operation
    permissions:
      - vpc.featureFlags.{create,delete,switch,list,listForScope,getWhiteList,editWhiteList,getBlackList,editBlackList,editTagsList}

  vpc.supportAdmin:
    groups: [vpc, support]
    name: Support VPC Admin
    visibility: internal
    description: Privileged operations for support engineers
    includedRoles:
      - vpc.support
      - internal.vpc.featureFlags.admin
    permissions:
      - vpcInternal.networks.manageDnsRecords # TODO(yesworld): Remove me.
      - vpc.networks.manageDnsRecords
      - vpc.addresses.useCustomFipBucket
      - vpc.addresses.useHints
      - vpc.securityGroups.createDefaultSecurityGroup
      - vpc.securityGroups.deleteDefaultSecurityGroup

  vpc.onCall:
    groups: [vpc, support]
    name: VPC on-call
    visibility: internal
    description: Privileged operations for on-call engineers
    includedRoles:
      - vpc.support
      - internal.vpc.control.onCall
      - internal.vpc.node.onCall
      - internal.vpc.featureFlags.admin
    permissions:
      - iam.folders.get # because may not have these two from anywhere else
      - resource-manager.folders.get

      - vpcInternal.fipBuckets.{create,delete,update} # TODO(yesworld): Remove me.
      - vpc.fipBuckets.{create,delete,update}

  internal.vpc.address.yandexOnlyAdmin:
    groups: [vpc]
    name: 'Yandex-Only addresses admin'
    description: 'Администратор yandex-only адресов'
    visibility: internal
    permissions:
      - vpc.addresses.createExternal
      - vpc.addresses.createSpecific
      - vpc.addresses.useCustomFipBucket
      - vpc.addresses.useHints
      - vpc.useIpv6
      - vpc.addresses.createYandexOnly

  internal.vpcagent:
    groups: [vpc]
    name: ''
    visibility: internal
    description: (Внутренняя) Агент vpc-api, доступ к данным в фолдерах пользователей
    includedRoles:
      - internal.hc-ctrl.editor.pseudo
      - internal.lb-ctrl.editor.pseudo
      - internal.hcaas.agent.pseudo
      - internal.hcaas.editor.pseudo
      - internal.vpc.control.editor.pseudo
    permissions:
      - iam.clouds.get
      - iam.folders.get
      - resource-manager.folders.get
      - dns.internal.updateVpcResource # permission to update dns resources

  internal.vpc.backoffice.viewer:
    groups: [vpc]
    name: Backffice viewer
    visibility: internal
    description: (Внутренняя) Дополнительные доступы для backffice, не покрытые обычными ролями
    permissions:
      - computeInternal.instances.get
      - vpc.subnets.listUsedAddresses

  internal.vpc.monops.user:
    groups: [vpc]
    name: Monops Web User
    visibility: internal
    description: (Внутренняя) Доступы, которые должны быть у пользователей monops, чтобы получать доступ к Web-админке
    permissions:
      - vpcInternal.monops.use

  internal.vpc.monops.viewer.pseudo:
    groups: [vpc]
    name: 'Monops Viewer pseudo role'
    visibility: internal
    pseudorole: true
    description: (Внутренняя) Базовая роль для internal.vpc.monops.{viewer,viewerServiceAccount}
    permissions:
      # Compute resource permissions
      - "{compute,computeInternal}.instances.get"
      - compute.instanceGroups.get
      # Public VPC resource permissions
      - vpc.{networks,subnets,routeTables,addresses,securityGroups}.get
      - vpc.{networkOperations,subnetOperations,routeTableOperations,addressOperations,securityGroupOperations}.list
      - vpc.subnets.listUsedAddresses
      # Internal VPC resource permissions
      - vpc.featureFlags.get
      - vpc.featureFlagOperations.list
      - vpc.featureFlags.listForScope
      # Public YLB resource permissions
      - ylb.{networkLoadBalancers,targetGroups}.get
      - ylb.{networkLoadBalancerOperations,targetGroupOperations}.list

  internal.vpc.monops.viewer:
    groups: [vpc]
    name: Monops User Role Scope
    visibility: internal
    description: (Внутренняя) Роль для ограничений scope пользовательских аккаунтов (не должна назначаться непосредственно пользователям)
    includedRoles:
      - internal.vpc.monops.viewer.pseudo

  internal.vpc.monops.viewerServiceAccount:
    groups: [vpc]
    name: Monops Service Account Role
    visibility: internal
    description: (Внутренняя) Доступы для сервисного аккаунта сервисов Monops/Dataplane Workbench без использования bypass-авторизации
    includedRoles:
      - internal.vpc.monops.viewer.pseudo

  internal.vpc.node:
    groups: [vpc]
    name: VPC-Node Role
    visibility: internal
    description: (Внутренняя) Роль vpc-node
    permissions:
      - vpc.ports.{get,batchGet}
      - vpcctrl.locations.{register,unregister,listObjectIdentifiers,list}
      - vpcctrl.microOperations.{add,update}

  internal.vpc.node.onCall:
    groups: [vpc]
    name: VPC-Node onCall Role
    visibility: internal
    description: onCall роль для просмотра портов в vpc-node (для дежурных)
    permissions:
      - vpcnode.ports.{list,get}

  internal.vpc.node.onCallAdmin:
    groups: [vpc]
    name: VPC-Node onCallAdmin
    visibility: internal
    description: Админская роль для доступа в vpc-node (для дежурных)
    permissions:
      - vpcnode.ports.{list,get,reload,create,delete,update}

  internal.vpc.control:
    groups: [vpc]
    name: VPC-Control Role
    visibility: internal
    description: (Внутренняя) Роль vpc-control
    permissions:
      - vpcnode.ports.{list,get,reload,create,delete,update}

  internal.vpc.control.onCall:
    groups: [vpc]
    name: VPC-Control onCall
    visibility: internal
    description: onCall роль для доступа в vpc-control (для дежурных)
    permissions:
      - vpcctrl.microOperations.{get,retry,cancel}

  internal.vpc.control.onCallAdmin:
    groups: [vpc]
    name: VPC-Control onCallAdmin
    visibility: internal
    description: Админская роль для доступа в vpc-control (для дежурных)
    permissions:
      - vpcctrl.ports.{create,delete,update,forcedelete}
      - vpcctrl.microOperations.{get,retry,cancel}

  internal.vpc.control.editor.pseudo:
    pseudorole: true
    groups: [vpc]
    name: VPC-Control Editor Pseudo Role
    visibility: internal
    description: Псевдороль для доступа в vpc-control
    permissions:
      - vpcctrl.ports.{create,delete,update}
      - vpcctrl.microOperations.{get,retry}

  internal.vpc.compute.agent:
    groups: [vpc]
    name: VPC-Compute Role
    visibility: internal
    description: (Внутренняя) Роль для compute-node (для походов в vpc-node)
    permissions:
      - vpcnode.ports.{get,update}

  internal.vpc.accounting.viewer:
    name: VPC Accounting Role
    groups: [vpc]
    visibility: internal
    description: Роль для доступа к vpc accounting
    permissions:
      - vpc.resources.stream

  internal.vpc.slf.subnetCreator:
    groups: [vpc]
    name: SLF Subnet Creator Role
    visibility: internal
    description: (Внутренняя) Роль для SLF (для создания специальных сабнетов)
    permissions:
    - vpc.internal.slfSubnets.create

  internal.vpc.slf.instanceCreator:
    groups: [vpc]
    name: SLF Instance Creator Role
    visibility: internal
    description: (Внутренняя) Роль для SLF (для запуска Engine с detached интерфейсами)
    permissions:
    - vpc.internal.slfInterfaces.createDetached

  internal.vpc.slf.interfaceReplugger:
    groups: [vpc]
    name: SLF InterfaceRplugger Role
    visibility: internal
    description: (Внутренняя) Роль для SLF (для переключения сетевых интерфейсов)
    permissions:
    - vpc.internal.slfInterfaces.replug
