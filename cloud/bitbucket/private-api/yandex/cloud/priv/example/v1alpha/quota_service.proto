syntax = "proto3";

package yandex.cloud.priv.example.v1alpha;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

import "yandex/cloud/api/tools/options.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/example/v1alpha;example";

service QuotaService {

  rpc Get (GetQuotaRequest) returns (Quota) {
    option (google.api.http) = { get: "/example/v1alpha/quota/{cloud_id}" };
  }

  rpc Update (UpdateQuotaRequest) returns (Quota) {
    option (google.api.http) = { patch: "/example/v1alpha/quota/{cloud_id}" };
    option (yandex.cloud.api.tools.method).lint_skip.http_query_parameters = true;
  }

  rpc UpdateMetric (UpdateQuotaMetricRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { patch: "/example/v1alpha/quota/{cloud_id}/metric" };
    option (yandex.cloud.api.tools.method).lint_skip.http_query_parameters = true;
  }

  rpc GetDefault (GetQuotaDefaultRequest) returns (GetQuotaDefaultResponse) {
    option (google.api.http) = { get: "/example/v1alpha/quota:default" };
  }

  rpc UpdateDefault (UpdateQuotaDefaultRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = { patch: "/example/v1alpha/quota:default" };
    option (yandex.cloud.api.tools.method).lint_skip.http_query_parameters = true;
  }
}

message GetQuotaRequest {
  string cloud_id = 1;
}

message UpdateQuotaRequest {
  string cloud_id = 1;
  repeated MetricLimit metrics = 2; // merge semantic
}

message UpdateQuotaMetricRequest {
  string cloud_id = 1;
  MetricLimit metric = 2;
}

message GetQuotaDefaultRequest {
}

message GetQuotaDefaultResponse {
  repeated MetricLimit metrics = 1;
}

message UpdateQuotaDefaultRequest {
  repeated MetricLimit metrics = 1; // merge semantic
}

message MetricLimit {
  string name = 1;
  int64 limit = 2;
}

message Quota {
  string cloud_id = 1;
  repeated QuotaMetric metrics = 2;
}

message QuotaMetric {
  string name = 1;
  int64 value = 2;
  int64 limit = 3;
}
