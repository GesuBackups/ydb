syntax = "proto3";

package yandex.cloud.priv.example.v1alpha;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/example/v1alpha/simple.proto";
import "yandex/cloud/priv/operation/operation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/example/v1alpha;example";

service SimpleService {
  rpc Get (GetSimpleRequest) returns (Simple) {
    option (google.api.http) = { get: "/example/v1alpha/simples/{simple_id}" };
  }

  rpc BatchGet (BatchGetSimplesRequest) returns (BatchGetSimplesResponse) {
    option (google.api.http) = { post: "/example/v1alpha/simples:batchGet" body: "*" };
    option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
  }

  rpc List (ListSimplesRequest) returns (ListSimplesResponse) {
    option (google.api.http) = { get: "/example/v1alpha/simples" };
  }

  rpc Create (CreateSimpleRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/example/v1alpha/simples" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateSimpleMetadata"
      response: "Simple"
    };
  }

  rpc Update (UpdateSimpleRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/example/v1alpha/simples/{simple_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateSimpleMetadata"
      response: "Simple"
    };
  }

  rpc Delete (DeleteSimpleRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/example/v1alpha/simples/{simple_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteSimpleMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc Move (MoveSimpleRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/example/v1alpha/simples/{simple_id}:move"};
    option (yandex.cloud.api.operation) = {
      metadata: "MoveSimpleMetadata"
      response: "Simple"
    };
    option (yandex.cloud.api.tools.method).lint_skip.http_query_parameters = true;
  }

  rpc ListOperations (ListSimpleOperationsRequest) returns (ListSimpleOperationsResponse) {
    option (google.api.http) = { get: "/example/v1alpha/simples/{simple_id}/operations" };
  }

  rpc Start (StartSimpleRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/example/v1alpha/simples/{simple_id}:start"};
    option (yandex.cloud.api.operation) = {
      metadata: "StartSimpleMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetSimpleRequest {
  string simple_id = 1;
}

message BatchGetSimplesRequest {
  string folder_id = 1;
  repeated string simple_ids = 2;
}

// In the same order as the request.
message BatchGetSimplesResponse {
  repeated Simple simples = 1;
}

message ListSimplesRequest {
  string folder_id = 1;
  int64 page_size = 2;
  string page_token = 3;
  string filter = 4;
  string order_by = 5;
}

message ListSimplesResponse {
  repeated Simple simples = 1;
  string next_page_token = 2;
}

message CreateSimpleRequest {
  string folder_id = 1;
  string name = 2;
}

message CreateSimpleMetadata {
  string simple_id = 1; // entity id returned imidiatly and returned for user synchronious
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp modified_at = 3;
  string created_by = 4;
}

message UpdateSimpleRequest {
  string simple_id = 1;
  // Required. A mask specifying which fields in UpdateSimpleRequest
  // The field mask must always be specified; this prevents any future fields in
  // UpdateSimpleRequest from being erased accidentally by clients that do not know
  // about them.
  google.protobuf.FieldMask update_mask = 2;

  string name = 3;
  string description = 4;
  int64 size = 5;
}

message UpdateSimpleMetadata {
  string simple_id = 1;
  google.protobuf.Timestamp modified_at = 2;
  string progress_message = 3;
  double progress = 4;
}

message DeleteSimpleRequest {
  string simple_id = 1;
}

message DeleteSimpleMetadata {
  string simple_id = 2;
}

message MoveSimpleRequest {
  string simple_id = 1;
  string destination_folder_id = 2;
}

message MoveSimpleMetadata {
  string simple_id = 1;
  string source_folder_id = 2;
  string destination_folder_id = 3;
}

message StartSimpleRequest {
  string simple_id = 1;
}

message StartSimpleMetadata {
  string simple_id = 2;
}

message ListSimpleOperationsRequest {
  string simple_id = 1;
  int64 page_size = 3;
  string page_token = 4;
}

message ListSimpleOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
