syntax = "proto3";

package yandex.cloud.priv.monitoring.v3;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/monitoring/v3;monitoring";
option java_package = "ru.yandex.cloud.priv.monitoring.v3";
option java_multiple_files = true;

import "google/api/annotations.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/monitoring/v3/alert_template.proto";

// A set of methods for managing Alert template resources.
service AlertTemplateService {

    // Create an alert template
    rpc Create(CreateAlertTemplateRequest) returns (operation.Operation) {
        option (google.api.http) = {post: "/monitoring/v3/alertTemplates" body: "*"};
        option (yandex.cloud.api.operation) = {
            metadata: "CreateAlertTemplateMetadata"
            response: "AlertTemplate"
        };
    }

    // Read alert template.
    rpc Read(ReadAlertTemplateRequest) returns (AlertTemplate) {
        option (google.api.http) = {get: "/monitoring/v3/alertTemplates/{template_id}/versions/{template_version_tag}"};
    }

    // Publish alert template version.
    rpc Publish(PublishAlertTemplateRequest) returns (operation.Operation) {
        option (google.api.http) = {post: "/monitoring/v3/alertTemplates/{template_id}/versions/{template_version_tag}/publish" body: "*"};
        option (yandex.cloud.api.operation) = {
            metadata: "PublishAlertTemplateMetadata"
            response: "AlertTemplate"
        };
    }

    // Remove alert template publication.
    rpc Unpublish(UnpublishAlertTemplateRequest) returns (operation.Operation) {
        option (google.api.http) = {post: "/monitoring/v3/alertTemplates/{template_id}/unpublish" body: "*"};
        option (yandex.cloud.api.operation) = {
            metadata: "UnpublishAlertTemplateMetadata"
            response: "google.protobuf.Empty"
        };
    }

    // Deploy alert template. Updates all related alerts.
    rpc Deploy(DeployAlertTemplateRequest) returns (operation.Operation) {
        option (google.api.http) = {post: "/monitoring/v3/alertTemplates/{template_id}/versions/{template_version_tag}/deploy" body: "*"};
        option (yandex.cloud.api.operation) = {
            metadata: "DeployAlertTemplateMetadata"
            response: "google.protobuf.Empty"
        };
    }

    // List published alert template versions.
    rpc List(ListAlertTemplateRequest) returns (ListAlertTemplateResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alertTemplates" };
    }

    // List specified alert template versions.
    rpc ListVersions(ListAlertTemplateVersionsRequest) returns (ListAlertTemplateVersionsResponse) {
        option (google.api.http) = { get: "/monitoring/v3/alertTemplates/{template_id}/versions" };
    }
}

message DeployAlertTemplateMetadata {
}

message UnpublishAlertTemplateMetadata {
    // Template Id
    string alert_template_id = 1;
}

message PublishAlertTemplateMetadata {
    // Template Id
    string alert_template_id = 1;
}

message CreateAlertTemplateMetadata {
    // Template Id
    string alert_template_id = 1;
}

message CreateAlertTemplateRequest {
    // Required. Template
    AlertTemplate alert_template = 1;

    // Required. Service provider id for request authorization.
    string service_provider_id = 2;
}

message ReadAlertTemplateRequest {
    // Required. Template Id
    string template_id = 1;

    // Optional. Template version tag. If empty returns last version
    string template_version_tag = 2;
}

message PublishAlertTemplateRequest {
    // Required. Template Id
    string template_id = 1;

    // Required. Template version tag
    string template_version_tag = 2;

    // Required. Service provider id for request authorization.
    string service_provider_id = 3;
}

message UnpublishAlertTemplateRequest {
    // Required. Template Id
    string template_id = 1;

    // Required. Service provider id for request authorization.
    string service_provider_id = 2;
}

message DeployAlertTemplateRequest {
    enum TemplateDeployPolicy {
        TEMPLATE_DEPLOY_POLICY_UNSPECIFIED = 0;

        // Automatically update all alerts of specified template and update last template version.
        AUTO = 1;

        // Update last template version without updating alerts.
        MANUAL = 2;
    }

    // Required. Template Id
    string template_id = 1;

    // Required. Template version tag
    string template_version_tag = 2;

    // Required. Service provider id for request authorization.
    string service_provider_id = 3;

    // Required. Deploy policy
    TemplateDeployPolicy template_deploy_policy = 4;
}

message ListAlertTemplateRequest {
    // Optional. Service provider ID.
    string service_provider_id = 1;

    // The maximum number of results per page to return. If the number of available
    // results is larger than [page_size],
    // the service returns a [ListAlertTemplateResponse.next_page_token]
    // that can be used to get the next page of results in subsequent list requests.
    int64 page_size = 2;

    // Page token. To get the next page of results, set [page_token] to the
    // [ListAlertTemplateResponse.next_page_token] returned by a previous list request.
    string page_token = 3;

    // Optional. Name filter.
    string name_filter = 4;

    // Optional. Status filter.
    repeated AlertTemplateStatus alert_template_statuses_filter = 5;
}

message ListAlertTemplateResponse {
    // List of templates.
    repeated AlertTemplate alert_templates = 1;

    // This token allows you to get the next page of results for list requests. If the number of results
    // is larger than [ListAlertTemplateRequest.page_size], use
    // the [next_page_token] as the value
    // for the [ListAlertTemplateRequest.page_token] query parameter
    // in the next list request. Each subsequent list request will have its own
    // [next_page_token] to continue paging through the results.
    string next_page_token = 2;
}

message ListAlertTemplateVersionsRequest {
    // Required. Template Id.
    string template_id = 1;

    // The maximum number of results per page to return. If the number of available
    // results is larger than [page_size],
    // the service returns a [ListAlertTemplateVersionsResponse.next_page_token]
    // that can be used to get the next page of results in subsequent list requests.
    int64 page_size = 2;

    // Page token. To get the next page of results, set [page_token] to the
    // [ListAlertTemplateVersionsResponse.next_page_token] returned by a previous list request.
    string page_token = 3;
}

message ListAlertTemplateVersionsResponse {
    // List of templates.
    repeated AlertTemplate alert_templates = 1;

    // This token allows you to get the next page of results for list requests. If the number of results
    // is larger than [ListAlertTemplateVersionsRequest.page_size], use
    // the [next_page_token] as the value
    // for the [ListAlertTemplateVersionsRequest.page_token] query parameter
    // in the next list request. Each subsequent list request will have its own
    // [next_page_token] to continue paging through the results.
    string next_page_token = 2;
}
