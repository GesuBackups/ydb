syntax = "proto3";

package yandex.cloud.priv.monitoring.v3;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/monitoring/v3/service.proto";
import "yandex/cloud/priv/monitoring/v3/shard_settings.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/monitoring/v3;monitoring";

// A set of methods for managing Service resources.
service ServiceService {
  // Returns the specified Service resource.
  //
  // To get the list of available Service resources, make a [List] request.
  rpc Get (GetServiceRequest) returns (Service) {
    option (google.api.http) = {get: "/monitoring/v3/services/{service_id}"};
  }

  // Retrieves the list of Service resources.
  rpc List (ListServicesRequest) returns (ListServicesResponse) {
    option (google.api.http) = {get: "/monitoring/v3/services"};
  }

  // Creates a service.
  rpc Create (CreateServiceRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/monitoring/v3/services" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "CreateServiceMetadata"
      response: "Service"
    };
  }

  // Updates the specified service.
  rpc Update (UpdateServiceRequest) returns (operation.Operation) {
    option (google.api.http) = {patch: "/monitoring/v3/services/{service_id}" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateServiceMetadata"
      response: "Service"
    };
  }

  // Deletes the specified service.
  rpc Delete (DeleteServiceRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/monitoring/v3/services/{service_id}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteServiceMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Lists operations for the specified service.
  rpc ListOperations (ListServiceOperationsRequest) returns (ListServiceOperationsResponse) {
    option (google.api.http) = {get: "/monitoring/v3/services/{service_id}/operations"};
  }
}

message GetServiceRequest {
  // ID of the folder to get service from.
  string folder_id = 1;

  // ID of the Service resource to return.
  string service_id = 2;
}

message ListServicesRequest {
  // ID of the folder to list services in.
  string folder_id = 1;

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListServicesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2;

  // Page token. To get the next page of results, set [page_token] to the
  // [ListServicesResponse.next_page_token] returned by a previous list request.
  string page_token = 3;

  // A filter expression that filters resources listed in the response.
  // Currently you can use filtering only on the [Service.id] or [Service.name] field.
  string filter = 4;
}

message ListServicesResponse {
  // List of Service resources.
  repeated Service services = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListServicesRequest.page_size], use
  // the [next_page_token] as the value
  // for the [ListServicesRequest.page_token] query parameter
  // in the next list request. Each subsequent list request will have its own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateServiceRequest {
  // ID of the folder to create service in.
  string folder_id = 1;

  // ID of the service.
  string service_id = 2;

  // Description of the service.
  string description = 3;

  // Resource labels as `key:value` pairs.
  map<string, string> labels = 4;

  // Service label name.
  string label_name = 5;

  // Shard settings.
  ShardSettings shard_settings = 6;

  // Metric name label.
  string metric_name_label = 7;
}

message CreateServiceMetadata {
  // ID of the service.
  string service_id = 1;
}

message UpdateServiceRequest {
  // ID of the folder.
  string folder_id = 1;

  // ID of the Service resource to update.
  string service_id = 2;

  // Field mask that specifies which fields of the Service resource are going to be updated.
  google.protobuf.FieldMask update_mask = 3;

  // Description of the service.
  string description = 4;

  // Resource labels as `key:value` pairs.
  map<string, string> labels = 5;

  // Service label name.
  string label_name = 6;

  // Shard settings.
  ShardSettings shard_settings = 7;

  // Metric name label.
  string metric_name_label = 8;
}

message UpdateServiceMetadata {
  // ID of the service that is being updated.
  string service_id = 1;
}

message DeleteServiceRequest {
  // ID of the folder.
  string folder_id = 1;

  // ID of the service to delete.
  string service_id = 2;
}

message DeleteServiceMetadata {
  // ID of the service that is being deleted.
  string service_id = 1;
}

message ListServiceOperationsRequest {
  // ID of the folder to list operations for.
  string folder_id = 1;

  // ID of the service to list operations for.
  string service_id = 2;

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListServiceOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 3;

  // Page token. To get the next page of results, set [page_token] to the
  // [ListServiceOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 4;
}

message ListServiceOperationsResponse {
  // List of operations for the specified service.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListServiceOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListServiceOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}
