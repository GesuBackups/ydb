syntax = "proto3";

package yandex.cloud.priv.monitoring.v2;

import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/monitoring/v2/metric_type.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/monitoring/v2;monitoring";
option java_outer_classname = "PMMS";

// A set of methods for managing metric metadata.
service MetricsMetaService {
    // Retrieves the list of metrics.
    rpc ListMetrics (ListMetricsRequest) returns (ListMetricsResponse);

    // Retrieves the list of metric names.
    rpc ListMetricNames (ListMetricNamesRequest) returns (ListMetricNamesResponse);

    // Retrieves the list of label keys.
    rpc ListLabelKeys (ListLabelKeysRequest) returns (ListLabelKeysResponse);

    // Retries the list of values for a given label key.
    rpc ListLabelValues (ListLabelValuesRequest) returns (ListLabelValuesResponse);
}

message ListMetricsRequest {
    // ID of the folder that the metric belongs to.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // Metric selectors.
    string selectors = 2;

    // Maximum number of metrics in response.
    // 0 means default page size = 30, maximum page size = 10000.
    int64 page_size = 3;

    // Page token. To get the next page of results, set [page_token] to the
    // [ListMetricsResponse.next_page_token] returned by a previous list request.
    string page_token = 4;
}

message ListMetricsResponse {
    message MetricMeta {
        // Name of the metric.
        string name = 1;

        // Metric labels as `key:value` pairs.
        map<string, string> labels = 2;

        // Type of the metric.
        MetricType type = 3;
   }

    // List of metrics.
    repeated MetricMeta metrics = 1;

    // This token allows you to get the next page of results for list requests.
    string next_page_token = 2;
}

message ListMetricNamesRequest {
    // ID of the folder that the metric belongs to.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // Metric selectors.
    string selectors = 2;

    // Substring name filter text.
    string name_filter = 3;

    // Maximum number of metrics in response.
    // 0 means default page size = 30, maximum page size = 10000.
    int64 page_size = 4;

    // Page token. To get the next page of results, set [page_token] to the
    // [ListMetricsResponse.next_page_token] returned by a previous list request.
    string page_token = 5;
}

message ListMetricNamesResponse {
    // List of metric names.
    repeated string names = 1;

    // This token allows you to get the next page of results for list requests.
    string next_page_token = 2;
}

message ListLabelKeysRequest {
    // ID of the folder that the metric belongs to.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // Metric selectors.
    string selectors = 2;
}

message ListLabelKeysResponse {
    // Found label keys.
    repeated string keys = 1;
}

message ListLabelValuesRequest {
    // ID of the folder that the metric belongs to.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // For which label key perform values lookup.
    string label_key = 2 [(required) = true];

    // Metric selectors.
    string selectors = 3;

    // Substring value filter text.
    string value_filter = 4;
    // Maximum number of metrics in response.
    // 0 means default page size = 30, maximum page size = 10000.
    int64 page_size = 5;

    // Page token. To get the next page of results, set [page_token] to the
    // [ListMetricsResponse.next_page_token] returned by a previous list request.
    string page_token = 6;
}

message ListLabelValuesResponse {
    // List of values by given label key.
    repeated string values = 1;

   // Metrics count given by selectors.
   int64 metrics_count = 2;

    // Flag determining that there are has some metrics without the given label.
    bool absent = 3;

    // This token allows you to get the next page of results for list requests.
    string next_page_token = 4;
}
