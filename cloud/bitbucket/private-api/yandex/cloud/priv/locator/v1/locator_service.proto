syntax = "proto3";

package yandex.cloud.priv.locator.v1;

import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/sensitive.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/locator/v1;locator";

service LocatorService {
  rpc GetLocation (LocationRequest) returns (LocationResponse) {
  }
}

message CellInfo {
  int64 mobile_country_code = 1 [(value) = "1-999"];
  int64 mobile_network_code = 2 [(value) = ">0"];
  int64 cell_id = 3 [(value) = ">0"];
  int64 location_area_code = 4 [(value) = ">0"];
  int64 signal_strength = 5 [(value) = "<0"];
}

message WifiInfo {
  string bssid = 1 [(required) = true, (pattern) = "[0-9a-fA-F]{12}"];
  int64 signal_strength = 2 [(value) = "<0"];
}

message LocationRequest {
  string folder_id = 1 [(length) = "<=50"];
  repeated CellInfo cell_towers = 2 [(sensitive) = true, (sensitive_type) = SENSITIVE_REMOVE];
  repeated WifiInfo wifi_access_points = 3 [(sensitive) = true, (sensitive_type) = SENSITIVE_REMOVE];
  string ip = 4 [(sensitive) = true];
  string uuid = 5 [(pattern) = "[A-Za-z0-9._-]", (length) = "<=64"];
}

message Location {
  double latitude = 1;
  double longitude = 2;
  double precision = 3;
}

message LocationNotFound {
  string message = 1;
}

message LocationResponse {
  oneof response {
    Location location = 1 [(sensitive) = true, (sensitive_type) = SENSITIVE_REMOVE];
    LocationNotFound location_not_found = 2;
  }
}
