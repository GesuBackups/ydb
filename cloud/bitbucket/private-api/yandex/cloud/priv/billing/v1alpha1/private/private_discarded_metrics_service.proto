syntax = "proto3";

package yandex.cloud.priv.billing.v1alpha1;

import "google/api/annotations.proto";
import "yandex/cloud/priv/billing/v1alpha1/light_metric.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/billing/v1alpha1/private;billing";

service PrivateDiscardedMetricsService {
  rpc GetDiscardedMetrics (ListDiscardedMetricsRequest) returns (DiscardedMetricListResponse) {
    option (google.api.http) = { get: "/billing/v1alpha1/private/discardedMetrics"};
  }
}

message ListDiscardedMetricsRequest {
  enum Reason {
    REASON_UNSPECIFIED = 0;
    MIN_PROCESSED = 1;
    GRACE_PERIOD = 2;
    INVALID_TAGS = 3;
    BILLING_ACCOUNT_RESOLVING = 4;
    SKU_RESOLVING = 5;
    FINISH_GT_MSG_WRITE_TS = 6;
    NEGATIVE_QUANTITY = 7;
  }
  string source_name = 1 [(required) = true];
  int64 start_time = 2 [(value) = ">=0"];
  int64 end_time = 3;
  Reason reason = 4;
  string schema = 5;
}


message DiscardedMetricResponse {
  string source_name = 1;
  int64 uploaded_at = 2;
  string reason = 3;
  string schema = 4;
  string metric_id = 5;
  string source_id = 6;
  int64 end_time = 7;
  int64 message_write_ts = 8;
  LightMetric metric = 9;
  string hostname = 10;
}

message DiscardedMetricListResponse {
  repeated DiscardedMetricResponse discarded_metrics = 1 [(size) = "<=1000"]; // No paginating. Up to 1000 metrics per response.
  bool is_truncated = 2;
  int64 total_count = 3;
}
