syntax = "proto3";

package yandex.cloud.priv.loadtesting.v2;

import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/compute/v1/instance_service.proto";
import "yandex/cloud/priv/loadtesting/v2/agent_instance.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/sensitive.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/loadtesting/v2;loadtesting";

service AgentInstanceService {
  rpc Get (GetAgentInstanceRequest) returns (GetAgentInstanceResponse);
  rpc List (ListAgentInstancesRequest) returns (AgentInstancesList) {};
  rpc Create (CreateAgentInstanceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateAgentInstanceMetadata"
      response: "AgentInstancesList"};
  };
  rpc Delete (DeleteAgentInstanceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteAgentInstanceMetadata"
      response: "google.protobuf.Empty"
    };
  };
  rpc Restart (RestartAgentInstanceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "RestartAgentInstanceMetadata"
      response: "AgentInstance"
    };
  };
  rpc Stop (StopAgentInstanceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "StopAgentInstanceMetadata"
      response: "AgentInstance"
    };
  };
  rpc Start (StartAgentInstanceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "StartAgentInstanceMetadata"
      response: "AgentInstance"
    };
  };
  rpc UpgradeImage (UpgradeImageAgentInstanceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpgradeImageAgentInstanceMetadata"
      response: "AgentInstance"
    };
  };
  rpc ListOperations (ListAgentInstancesOperationsRequest) returns (ListAgentInstancesOperationsResponse);
}

message GetAgentInstanceRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
}

message GetAgentInstanceResponse {
  AgentInstance agent_instance = 1;
}

message ListAgentInstancesRequest {
  string folder_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
  int64 page_size = 2 [(yandex.cloud.priv.value) = "0-1000"];
  string page_token = 3 [(yandex.cloud.priv.length) = "<=100"];
  string filter = 4 [(yandex.cloud.priv.length) = "<=1000"];
}

message AgentInstancesList {
  string folder_id = 1;
  repeated AgentInstance agent_instances = 2;
  string next_page_token = 3;
}

message CreateAgentInstanceRequest {
  string folder_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
  string name = 2 [(yandex.cloud.priv.pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
  string description = 3 [(yandex.cloud.priv.length) = "<=256"];
  map<string, string> labels = 4 [(yandex.cloud.priv.size) = "<=64", (yandex.cloud.priv.length) = "<=63",
    (yandex.cloud.priv.pattern) = "[-_0-9a-z]*", (yandex.cloud.priv.map_key).length = "1-63",
    (yandex.cloud.priv.map_key).pattern = "[a-z][-_0-9a-z]*"];

  string preset_id = 5 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
  string service_account_id = 6 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=256"];

  // Instance cpu/memory/disk resources are managed by ResourcePreset,
  // all the rest fields are taken from CreateInstanceRequest
  string zone_id = 7 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
  repeated compute.v1.NetworkInterfaceSpec network_interface_specs = 8 [(size)=">0"];
  map<string, string> metadata = 9 [(sensitive) = true, (sensitive_type) = SENSITIVE_CRC];
}

message CreateAgentInstanceMetadata {
  string agent_instance_id = 1;
}

message DeleteAgentInstanceRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
}

message DeleteAgentInstanceMetadata {
  string agent_instance_id = 1;
}

message RestartAgentInstanceRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
}

message RestartAgentInstanceMetadata {
  string agent_instance_id = 1;
}

message StopAgentInstanceRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
}

message StopAgentInstanceMetadata {
  string agent_instance_id = 1;
}

message StartAgentInstanceRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
}

message StartAgentInstanceMetadata {
  string agent_instance_id = 1;
}

message UpgradeImageAgentInstanceRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
}

message UpgradeImageAgentInstanceMetadata {
  string agent_instance_id = 1;
}

message ListAgentInstancesOperationsRequest {
  string agent_instance_id = 1 [(yandex.cloud.priv.required) = true, (yandex.cloud.priv.length) = "<=50"];
  int64 page_size = 2 [(yandex.cloud.priv.value) = "0-1000"];
  string page_token = 3 [(yandex.cloud.priv.length) = "<=100"];
}

message ListAgentInstancesOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
