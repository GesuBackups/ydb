syntax = "proto3";

package yandex.cloud.priv.cic.v1.inner.agent.device.firewall;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cic/v1/inner/agent/device/firewall;cic";
option java_outer_classname = "PCIADF";


message Firewall {
  message Filter {
    message Term {
      message Condition {
        message Address {
          string name = 1;
        }
        message PrefixList {
          string name = 1;
        }

        repeated Address source_address = 1;
        repeated Address destination_address = 2;
        repeated PrefixList source_prefix_list = 3;
        repeated PrefixList destination_prefix_list = 4;
        repeated int64 ttl = 5;
        repeated string protocol = 6;
        repeated string icmp_type = 7;
        repeated int64 source_port = 8;
        repeated int64 destination_port = 9;
        repeated int64 port = 10;
        repeated int64 source_port_except = 11;
        repeated int64 destination_port_except = 12;
      }
      message Then {
        enum NextAction {
          NEXT_ACTION_UNSPECIFIED = 0;
          NEXT_ACTION_NEXT_TERM = 1;
        }
        
        string policer = 1;
        oneof designation {
          bool accept = 2;
          bool discard = 3;
          NextAction next_action = 4;
        }
        string count = 5;
      }

      string name = 1;
      Condition condition = 2;
      Then then = 3;
    }

    string name = 1;
    bool physical_interface_filter = 2;
    repeated Term term  = 3;
  }

  message Family {
      map <string, Filter> filters = 1;
  }

  message Policer {
    message IfExceeding {
      oneof bandwidth {
        int64 bandwidth_limit = 1;
        int64 bandwidth_percent = 2;
      }
      int64 burst_size = 3;
    }
    message IfExceedingPps {
      oneof pps {
        int64 pps_limit  = 1;
      }
      int64 packet_burst = 3;      
    }
    
    string name = 1;
    oneof exceeding {
      IfExceeding if_exceeding = 2;
      IfExceedingPps if_exceeding_pps = 3;
    }
    bool shared_policer = 4;
  }

  map<string, Family> families = 1;
  map<string, Policer> policers = 2;
}
