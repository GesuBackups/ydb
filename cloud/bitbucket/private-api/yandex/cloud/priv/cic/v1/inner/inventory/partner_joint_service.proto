syntax = "proto3";

package yandex.cloud.priv.cic.v1.inner.inventory;

import "yandex/cloud/api/operation.proto";

import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

import "yandex/cloud/priv/cic/v1/inner/inventory/partner_joint.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cic/v1/inner/inventory;cic";
option java_outer_classname = "CICPJS";

service PartnerJointService {

  rpc Get (GetPartnerJointRequest) returns (PartnerJoint);

  rpc List (ListPartnerJointRequest) returns (ListPartnerJointResponse);

  rpc Create (PartnerJoint) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreatePartnerJointMetadata"
      response: "PartnerJoint"
    };
  }

  rpc Update (PartnerJoint) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdatePartnerJointMetadata"
      response: "PartnerJoint"
    };
  }

  rpc Delete (DeletePartnerJointRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeletePartnerJointMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc ListOperations (ListPartnerJointOperationsRequest) returns (ListPartnerJointOperationsResponse);

}

message GetPartnerJointRequest {
  string partner_joint_id = 1 [(required) = true, (length) = "<=50"];
}

message ListPartnerJointRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2;
  string page_token = 3;
  string filter = 4;
}

message ListPartnerJointResponse {
  repeated PartnerJoint partner_joints = 1;
  string next_page_token = 2;
}

message CreatePartnerJointMetadata {
  string partner_joint_id = 1;
}

message UpdatePartnerJointMetadata {
  string partner_joint_id = 1;
}

message DeletePartnerJointRequest {
  string partner_joint_id = 1 [(required) = true, (length) = "<=50"];
}

message DeletePartnerJointMetadata {
  string partner_joint_id = 1;
}

message ListPartnerJointOperationsRequest {
  string partner_joint_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2;
  string page_token = 3;
}

message ListPartnerJointOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
