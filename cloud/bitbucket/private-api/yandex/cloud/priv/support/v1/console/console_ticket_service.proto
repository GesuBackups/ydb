syntax = "proto3";

package yandex.cloud.priv.support.v1;

import "google/api/annotations.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/support/v1/ticket.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/support/v1/console;support";

service ConsoleTicketService {
  rpc Get (GetTicketRequest) returns (Ticket) {
    option (google.api.http) = {get: "/support/v1/console/tickets/{ticket_id}"};
  };

  rpc List (ListTicketRequest) returns (ListTicketsResponse) {
    option (google.api.http) = {get: "/support/v1/console/tickets"};
  };

  rpc GetAttachment (GetTicketAttachmentRequest) returns (GetTicketAttachmentResponse) {
    option (google.api.http) = {get: "/support/v1/console/tickets/{ticket_id}/attachment/{attachment_id}"};
  };

  rpc Create (CreateTicketRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/support/v1/console/tickets"};
    option (yandex.cloud.api.operation) = {
      metadata: "CreateTicketMetadata"
      response: "Ticket"
    };
    option (yandex.cloud.api.tools.method).lint_skip.http_query_parameters = true;
  };

  rpc Close (CloseTicketRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/support/v1/console/tickets/{ticket_id}:close"};
    option (yandex.cloud.api.operation) = {
      metadata: "CloseTicketMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc CreateComment (CreateCommentRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/support/v1/console/tickets/{ticket_id}/comments"};
    option (yandex.cloud.api.operation) = {
      metadata: "CreateCommentMetadata"
      response: "Comment"
    };
    option (yandex.cloud.api.tools.method).lint_skip.http_query_parameters = true;
  };

  rpc UnreadCount (UnreadCountRequest) returns (UnreadCountResponse) {
    option (google.api.http) = {post: "/support/v1/console/tickets/unreadCount"};
  };

}

message GetTicketRequest {
  string ticket_id = 1;
}

message GetTicketAttachmentRequest {
  string ticket_id = 1;
  string attachment_id = 2;
}

message GetTicketAttachmentResponse {
  string url = 1;
}

message ListTicketRequest {
  string cloud_id = 1;
  repeated string cloud_ids = 2;
  Ticket.State state = 3;
  string next_page_token = 4;
}

message CreateTicketRequest {
  string cloud_id = 1;
  string summary = 2;
  string description = 3;
  Ticket.Type type = 4;
  repeated string attachment_ids = 5;
  Ticket.AccessType access_type = 6;
}

message CreateTicketMetadata {
  string ticket_id = 1;
}

message CreateCommentMetadata {
  string ticket_id = 1;
}

message CloseTicketRequest {
  string ticket_id = 1;
}

message CloseTicketMetadata {
  string ticket_id = 1;
}

message CreateCommentRequest {
  string ticket_id = 1;
  string text = 2;
  repeated string attachment_ids = 3;
}

message ListTicketsResponse {
  repeated Ticket tickets = 1;
  string next_page_token = 2;
}

message UnreadCountRequest {
}

message UnreadCountResponse {
  int64 count = 1;
}
