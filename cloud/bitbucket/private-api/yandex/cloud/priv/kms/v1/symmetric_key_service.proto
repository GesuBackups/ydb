syntax = "proto3";

package yandex.cloud.priv.kms.v1;

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/access/access.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/kms/v1/symmetric_key.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/kms/v1;kms";
option java_outer_classname = "PSKS";


service SymmetricKeyService {

  // --- control plane

  rpc Create (CreateSymmetricKeyRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateSymmetricKeyMetadata"
      response: "SymmetricKey"
    };
  }

  rpc CreateWithId (CreateWithIdSymmetricKeyRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateSymmetricKeyMetadata"
      response: "SymmetricKey"
    };
  }

  rpc Get (GetSymmetricKeyRequest) returns (SymmetricKey);

  rpc List (ListSymmetricKeysRequest) returns (ListSymmetricKeysResponse);

  rpc ListVersions (ListSymmetricKeyVersionsRequest) returns (ListSymmetricKeyVersionsResponse);

  rpc Update (UpdateSymmetricKeyRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateSymmetricKeyMetadata"
      response: "SymmetricKey"
    };
  }

  // delete the key and schedule all its version for destruction
  rpc Delete (DeleteSymmetricKeyRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteSymmetricKeyMetadata"
      response: "SymmetricKey"
    };
  }

  // cancel previously scheduled key deletion
  rpc CancelDelete (CancelDeleteSymmetricKeyRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CancelDeleteSymmetricKeyMetadata"
      response: "SymmetricKey"
    };
  }

  rpc SetPrimaryVersion (SetPrimarySymmetricKeyVersionRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "SetPrimarySymmetricKeyVersionMetadata"
      response: "SymmetricKey"
    };
  }

  rpc ScheduleVersionDestruction (ScheduleSymmetricKeyVersionDestructionRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "ScheduleSymmetricKeyVersionDestructionMetadata"
      response: "SymmetricKeyVersion"
    };
  }

  rpc CancelVersionDestruction (CancelSymmetricKeyVersionDestructionRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CancelSymmetricKeyVersionDestructionMetadata"
      response: "SymmetricKeyVersion"
    };
  }

  // rotates given key: create new key version and make it primary
  rpc Rotate (RotateSymmetricKeyRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "RotateSymmetricKeyMetadata"
      response: "SymmetricKey"
    };
  }

  // Lists operations for the specified symmetric key.
  rpc ListOperations (ListSymmetricKeyOperationsRequest) returns (ListSymmetricKeyOperationsResponse);

  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse);

  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
      option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
      option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}


message CreateSymmetricKeyRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string name = 2 [(length) = "<=100"];
  string description = 3 [(length) = "<=1024"];
  map<string, string> labels = 4 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  SymmetricAlgorithm default_algorithm = 5;
  google.protobuf.Duration rotation_period = 6;
  bool deletion_protection = 7;
}

message CreateWithIdSymmetricKeyRequest {
  string id = 1 [(length) = "<=50"];
  string folder_id = 2 [(required) = true, (length) = "<=50"];
  string name = 3 [(length) = "<=100"];
  string description = 4 [(length) = "<=1024"];
  map<string, string> labels = 5 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  SymmetricAlgorithm default_algorithm = 6;
  google.protobuf.Duration rotation_period = 7;
  bool deletion_protection = 8;
}

message CreateSymmetricKeyMetadata {
  string key_id = 1;
  string primary_version_id = 2;
}

message GetSymmetricKeyRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
}

message ListSymmetricKeysRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "<=1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4;
  string order_by = 5;
}

message ListSymmetricKeysResponse {
  repeated SymmetricKey keys = 1;
  string next_page_token = 2;
}

message ListSymmetricKeyVersionsRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "<=1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4;
  string order_by = 5;
}

message ListSymmetricKeyVersionsResponse {
  repeated SymmetricKeyVersion key_versions = 1;
  string next_page_token = 2;
}

message UpdateSymmetricKeyRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
  google.protobuf.FieldMask update_mask = 2 [(required) = true];

  string name = 3 [(length) = "<=100"];
  string description = 4 [(length) = "<=1024"];
  SymmetricKey.Status status = 5; // Only setting ACTIVE / INACTIVE statuses supported by this method
  map<string, string> labels = 6 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  SymmetricAlgorithm default_algorithm = 7;
  google.protobuf.Duration rotation_period = 8; // period between two automatic rotations
  bool deletion_protection = 9;
}

message UpdateSymmetricKeyMetadata {
  string key_id = 1;
}

message DeleteSymmetricKeyRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteSymmetricKeyMetadata {
  string key_id = 1;
}

message CancelDeleteSymmetricKeyRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
}

message CancelDeleteSymmetricKeyMetadata {
  string key_id = 1;
}

message SetPrimarySymmetricKeyVersionRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
  string version_id = 2 [(required) = true, (length) = "<=50"];
}

message SetPrimarySymmetricKeyVersionMetadata {
  string key_id = 1;
  string version_id = 2;
}

message RotateSymmetricKeyRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
}

message RotateSymmetricKeyMetadata {
  string key_id = 1;
  string new_primary_version_id = 2;
}

message ScheduleSymmetricKeyVersionDestructionRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
  string version_id = 2 [(required) = true, (length) = "<=50"];
  // The version will be destroyed after pending period has passed. Pending period defaults to 7 days
  google.protobuf.Duration pending_period = 3;
}

message ScheduleSymmetricKeyVersionDestructionMetadata {
  string key_id = 1;
  string version_id = 2;
  google.protobuf.Timestamp destroy_at = 3;
}

message CancelSymmetricKeyVersionDestructionRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
  string version_id = 2 [(required) = true, (length) = "<=50"];
}

message CancelSymmetricKeyVersionDestructionMetadata {
  string key_id = 1;
  string version_id = 2;
}


message ListSymmetricKeyOperationsRequest {
  string key_id = 1 [(required) = true, (length) = "<=50"];
  // Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListSymmetricKeyOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
