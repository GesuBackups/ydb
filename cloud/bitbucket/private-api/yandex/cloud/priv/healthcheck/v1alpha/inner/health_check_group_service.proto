syntax = "proto3";

package yandex.cloud.priv.healthcheck.v1alpha.inner;

import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/healthcheck/v1alpha/inner/health_check_group.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/healthcheck/v1alpha/inner;healthcheck";
option java_outer_classname = "PHCGIS";

service HealthCheckGroupService {
  rpc Get (GetHealthCheckGroupRequest) returns (HealthCheckGroup) {}

  rpc Upsert (UpsertHealthCheckGroupRequest) returns (UpsertHealthCheckGroupResponse) {}
  rpc Delete (DeleteHealthCheckGroupRequest) returns (DeleteHealthCheckGroupResponse) {}
  rpc UpsertForcedStatuses (UpsertForcedStatusesRequest) returns (UpsertForcedStatusesResponse) {}

  rpc GetHealth (HealthRequest) returns (HealthResponse) {}
  rpc StreamHealth (HealthRequest) returns (stream HealthCheckResult) {}
}

message GetHealthCheckGroupRequest {
  string health_check_group_id = 1 [(length) = "<=50"];
}

message UpsertHealthCheckGroupRequest {
  string health_check_group_id = 1 [(length) = "<=50"];
  repeated HealthCheckGroup.Target targets = 2; // Note that empty list is allowed.
  repeated HealthCheck health_checks = 3 [(size) = ">=1"];

  string folder_id = 4;

  HealthCheckGroup.Owner owner = 5;
}

message UpsertHealthCheckGroupResponse {}

message DeleteHealthCheckGroupRequest {
  string health_check_group_id = 1 [(length) = "<=50"];
}

message DeleteHealthCheckGroupResponse {}

message UpsertForcedStatusesRequest {
  string health_check_group_id = 1 [(length) = "<=50"];
  repeated HealthCheckGroup.Target targets = 2; // Note that empty list is allowed.
}

message UpsertForcedStatusesResponse {}

message HealthRequest {
  string health_check_group_id = 1 [(length) = "<=50"];
}

message HealthResponse {
  repeated HealthCheckResult health_check_result = 1;
}
