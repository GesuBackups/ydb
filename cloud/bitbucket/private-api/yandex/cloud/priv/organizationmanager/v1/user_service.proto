syntax = "proto3";

package yandex.cloud.priv.organizationmanager.v1;

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/oauth/claims.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/organizationmanager/v1;organizationmanager";
option java_outer_classname = "POUS";

service UserService {
  // List organization active members.
  rpc ListMembers (ListMembersRequest) returns (ListMembersResponse);

  // Delete user membership.
  rpc DeleteMembership (DeleteMembershipRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteMembershipMetadata"
      response: "DeleteMembershipResponse"
    };
  }
}

message ListMembersRequest {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListMembersResponse {
  repeated OrganizationUser users = 1;
  string next_page_token = 2;
  message OrganizationUser {
    // OpenID standard claims with additional Yandex.Organization claims
    yandex.cloud.priv.oauth.SubjectClaims subject_claims = 1;
  }
}

message DeleteMembershipRequest {
  // ID of the organization to delete membership.
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  // ID of the subject that is being deleted from organization.
  // By default equals to authenticated subject.
  string subject_id = 2 [(length) = "<=50"];
}

message DeleteMembershipMetadata {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  string subject_id = 2 [(required) = true, (length) = "<=50"];
}

message DeleteMembershipResponse {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  string subject_id = 2 [(required) = true, (length) = "<=50"];
}
