syntax = "proto3";

package yandex.cloud.priv.organizationmanager.v1;

import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/access/access.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/organizationmanager/v1/group.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/organizationmanager/v1;organizationmanager";
option java_outer_classname = "POGRS";

service GroupService {
  rpc Get (GetGroupRequest) returns (Group);

  rpc List (ListGroupsRequest) returns (ListGroupsResponse);

  rpc Create (CreateGroupRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateGroupMetadata"
      response: "Group"
    };
  }

  rpc Update (UpdateGroupRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateGroupMetadata"
      response: "Group"
    };
  }

  rpc Delete (DeleteGroupRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteGroupMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc ListOperations (ListGroupOperationsRequest) returns (ListGroupOperationsResponse);

  // group members

  rpc ListMembers (ListGroupMembersRequest) returns (ListGroupMembersResponse);

  rpc UpdateMembers (UpdateGroupMembersRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateGroupMembersMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // access bindings

  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse);

  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetGroupRequest {
  string group_id = 1 [(required) = true, (length) = "<=50"];
}

message ListGroupsRequest {
  string organization_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
}

message ListGroupsResponse {
  repeated Group groups = 1;
  string next_page_token = 2;
}

message CreateGroupRequest {
  string id = 1 [(length) = "<=50"];
  string organization_id = 2 [(required) = true, (length) = "<=50"];
  string name = 3 [(required) = true, (pattern) = "[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 4 [(length) = "<=256"];
}

message CreateGroupMetadata {
  string group_id = 1;
}

message UpdateGroupRequest {
  string group_id = 1 [(required) = true, (length) = "<=50"];
  google.protobuf.FieldMask update_mask = 2;

  string name = 3 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 4 [(length) = "<=256"];
}

message UpdateGroupMetadata {
  string group_id = 1;
}

message DeleteGroupRequest {
  string group_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteGroupMetadata {
  string group_id = 1;
}

message ListGroupOperationsRequest {
  string group_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListGroupOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}

message ListGroupMembersRequest {
  string group_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListGroupMembersResponse {
  repeated GroupMember members = 1;
  string next_page_token = 2;
}

message GroupMember {
  // Id of a subject or a group is returned.
  string subject_id = 1;
  string subject_type = 2;
}

message UpdateGroupMembersRequest {
  string group_id = 1 [(required) = true, (length) = "<=50"];
  repeated MemberDelta member_deltas = 2 [(size) = "1-1000"];
}

message UpdateGroupMembersMetadata {
  string group_id = 1;
}

message MemberDelta {
  MemberAction action = 1 [(required) = true];
  // Id of a subject or a group is accepted.
  string subject_id = 2 [(required) = true, (length) = "<=50"];

  enum MemberAction {
    MEMBER_ACTION_UNSPECIFIED = 0;
    ADD = 1;
    REMOVE = 2;
  }
}
