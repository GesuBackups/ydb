syntax = "proto3";

package yandex.cloud.priv.ai.platform.v1;

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/ai/platform/v1/resource.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/ai/platform/v1;platform";
option java_outer_classname = "MRS";

service ResourceService {
  rpc Create (CreateResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateResourceMetadata"
      response: "Resource"
    };
  }

  rpc ImportExternal (ImportExternalResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "ImportExternalResourceMetadata"
      response: "Resource"
    };
  }

  rpc Move (MoveResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "MoveResourceMetadata"
      response: "Resource"
    };
  }

  rpc Delete (DeleteResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteResourceMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc Get (GetResourceRequest) returns (Resource);

  rpc GetContentUri (GetContentUriRequest) returns (GetContentUriResponse);

  rpc List (ListResourcesRequest) returns (ListResourcesResponse);

  rpc ListOperations (ListResourceOperationsRequest) returns (ListResourceOperationsResponse);
}

message CreateResourceRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  //path for directory must end with '/'
  string path = 2 [(required) = true];
  Resource.Type type = 3 [(required) = true];
}


message CreateResourceMetadata {
  string path = 1;
  string content_uri = 2;
}

message ImportExternalResourceRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string path = 2 [(required) = true];
  string content_uri = 3;
}

message ImportExternalResourceMetadata {
  string resource_id = 1;
}

message MoveResourceRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  //path for directory must end with '/'
  string from_path = 2 [(required) = true];
  string to_path = 3 [(required) = true];
}

message MoveResourceMetadata {
}

message DeleteResourceRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string path = 2 [(required) = true];
}

message DeleteResourceMetadata {
}

message GetResourceRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string path = 2 [(required) = true];
}

message GetContentUriRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string path = 2 [(required) = true];
}

message GetContentUriResponse {
  string content_uri = 1;
}

message ListResourcesRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListResourcesResponse {
  repeated Resource resources = 1;
  string next_page_token = 2;
}

message ListResourceOperationsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string path = 2 [(required) = true];
  int64 page_size = 3 [(value) = "0-1000"];
  string page_token = 4 [(length) = "<=100"];
}

message ListResourceOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
