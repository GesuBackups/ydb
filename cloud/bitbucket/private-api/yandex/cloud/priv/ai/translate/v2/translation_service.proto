syntax = "proto3";

package yandex.cloud.priv.ai.translate.v2;

import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/ai/translate/v2/translation.proto";
import "yandex/cloud/priv/sensitive.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/ai/translate/v2;translate";

service TranslationService {
  rpc Translate (TranslateRequest) returns (TranslateResponse) {
  }
  rpc DetectLanguage (DetectLanguageRequest) returns (DetectLanguageResponse) {
  }
  rpc ListLanguages (ListLanguagesRequest) returns (ListLanguagesResponse) {
  }
}

message TranslateRequest {
  enum Format {
    FORMAT_UNSPECIFIED = 0;
    PLAIN_TEXT = 1;
    HTML = 2;
  }

  string source_language_code = 1 [(length) = "<=3"];
  string target_language_code = 2 [(required) = true, (length) = "<=3"];
  Format format = 3;
  repeated string texts = 4 [(sensitive) = true,(size) = ">0"];
  string folder_id = 5 [(length) = "<=50"];
  string model = 6 [(length) = "<=50"];

  TranslateGlossaryConfig glossary_config = 7;
  bool speller = 8;
}

message TranslateGlossaryConfig {
  oneof glossary_source {
    option (exactly_one) = true;
    GlossaryData glossary_data = 1;
  }
}

message GlossaryData {
  repeated GlossaryPair glossary_pairs = 1 [(size) = "1-50"];
}

message GlossaryPair {
  string source_text = 1 [(sensitive) = true, (required) = true];
  string translated_text = 2 [(sensitive) = true, (required) = true];
  bool exact = 3;
}

message TranslateResponse {
  repeated TranslatedText translations = 1;
}

message DetectLanguageRequest {
  string text = 1 [(required) = true, (length) = "<=1000", (sensitive) = true];
  repeated string language_code_hints = 2 [(size) = "<=10", (length) = "<=3"];
  string folder_id = 3 [(length) = "<=50"];
}

message DetectLanguageResponse {
  string language_code = 1;
}

message ListLanguagesRequest {
  string folder_id = 1 [(length) = "<=50"];
}

message ListLanguagesResponse {
  repeated Language languages = 1;
}
