syntax = "proto3";

package yandex.cloud.priv.datatransfer.v1.legacyendpoint;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datatransfer/v1/legacyendpoint;tm_server_legacyendpoint";

import "yandex/cloud/priv/datatransfer/v1/endpoint/common.proto";
import "yandex/cloud/priv/datatransfer/v1/endpoint/mongo.proto";
import "yandex/cloud/priv/sensitive.proto";

message MongoSource {
    // Hosts names of replica set
    repeated string hosts = 1;
    // Port
    // 
    // Port to use for connection to MongoDB.
    int64 port = 2;
    // Replica set
    string replica_set = 3;
    // Authentication source
    // 
    // Database name associated with the credentials.
    string auth_source = 4;
    // Username
    // 
    // User for database access.
    string user = 5;
    // Password
    // 
    // Password for database access.
    string raw_password = 6 [(sensitive) = true];
    // Collections
    // 
    // The list of collections to be transferred.
    repeated endpoint.MongoCollection collections = 8;
    // Exclude collections
    // 
    // The list of excluded collections from transfer.
    repeated endpoint.MongoCollection excluded_collections = 9;
    // Read from secondaries
    bool secondary_preferred_mode = 10;
    // PEM Certificate
    // 
    // Certificate for database connection.
    string pem_file_content = 11;
}
message ManagedMongoSource {
    // Cluster ID
    string cluster_id = 1;
    // Replica set
    string replica_set = 3;
    // Authentication source
    // 
    // Database name associated with the credentials.
    string auth_source = 4;
    // Username
    // 
    // User for database access.
    string user = 5;
    // Password
    // 
    // Password for database access.
    string raw_password = 6 [(sensitive) = true];
    // Include collections
    // 
    // The list of collections to be transferred.
    repeated endpoint.MongoCollection collections = 8;
    // Excluded collections
    // 
    // The list of excluded collections from transfer.
    repeated endpoint.MongoCollection excluded_collections = 9;
    // Read from secondaries
    bool secondary_preferred_mode = 10;
}
message MongoTarget {
    // Hosts names of replica set
    repeated string hosts = 1;
    // Port
    // 
    // Port to use for connection to MongoDB.
    int64 port = 2;
    // Replica set
    string replica_set = 3;
    // Authentication source
    // 
    // Database name associated with the credentials.
    string auth_source = 4;
    // Username
    // 
    // User for database access.
    string user = 5;
    // Password
    // 
    // Password for database access.
    string raw_password = 6 [(sensitive) = true];
    // PEM Certificate
    // 
    // Certificate for database connection.
    string pem_file_content = 8;
    // Cleanup policy
    // 
    // Cleanup policy for activate, reactivate and reupload processes. Default is
    // truncate.
    endpoint.CleanupPolicy cleanup_policy = 9;
}
message ManagedMongoTarget {
    // Cluster ID
    string cluster_id = 1;
    // Replica set
    string replica_set = 3;
    // Authentication source
    // 
    // Database name associated with the credentials.
    string auth_source = 4;
    // Username
    // 
    // User for database access.
    string user = 5;
    // Password
    // 
    // Password for database access.
    string raw_password = 6 [(sensitive) = true];
    // Cleanup policy
    // 
    // Cleanup policy for activate, reactivate and reupload processes. Default is
    // truncate.
    endpoint.CleanupPolicy cleanup_policy = 8;
}
