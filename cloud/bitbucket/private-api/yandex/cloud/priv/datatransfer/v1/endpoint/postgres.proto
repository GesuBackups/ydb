syntax = "proto3";

package yandex.cloud.priv.datatransfer.v1.endpoint;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datatransfer/v1/endpoint;tm_server_endpoint";

import "yandex/cloud/priv/datatransfer/v1/endpoint/common.proto";

message PostgresDumpSteps {
    // Sequences
    // 
    // CREATE SEQUENCE ...
    bool sequence = 3;
    // Owned sequences
    // 
    // CREATE SEQUENCE ... OWNED BY ...
    bool sequence_owned_by = 4;
    // Tables
    // 
    // CREATE TABLE ...
    bool table = 1;
    // Primary keys
    // 
    // ALTER TABLE ... ADD PRIMARY KEY ...
    bool primary_key = 12;
    // Foreign keys
    // 
    // ALTER TABLE ... ADD FOREIGN KEY ...
    bool fk_constraint = 9;
    // Default values
    // 
    // ALTER TABLE ... ALTER COLUMN ... SET DEFAULT ...
    bool default_values = 7;
    // Constraints
    // 
    // ALTER TABLE ... ADD CONSTRAINT ...
    bool constraint = 8;
    // Indexes
    // 
    // CREATE INDEX ...
    bool index = 10;
    // Views
    // 
    // CREATE VIEW ...
    bool view = 2;
    // Functions
    // 
    // CREATE FUNCTION ...
    bool function = 11;
    // Triggers
    // 
    // CREATE TRIGGER ...
    bool trigger = 14;
    // Types
    // 
    // CREATE TYPE ...
    bool type = 6;
    // Rules
    // 
    // CREATE RULE ...
    bool rule = 5;
    // Collations
    // 
    // CREATE COLLATION ...
    bool collation = 13;
    // Policies
    // 
    // CREATE POLICY ...
    bool policy = 15;
    // Casts
    // 
    // CREATE CAST ...
    bool cast = 16;
}
message PostgresObjectTransferSettings {
    // Sequences
    // 
    // CREATE SEQUENCE ...
    ObjectTransferStage sequence = 1;
    // Owned sequences
    // 
    // CREATE SEQUENCE ... OWNED BY ...
    ObjectTransferStage sequence_owned_by = 2;
    // Tables
    // 
    // CREATE TABLE ...
    ObjectTransferStage table = 3;
    // Primary keys
    // 
    // ALTER TABLE ... ADD PRIMARY KEY ...
    ObjectTransferStage primary_key = 4;
    // Foreign keys
    // 
    // ALTER TABLE ... ADD FOREIGN KEY ...
    ObjectTransferStage fk_constraint = 5;
    // Default values
    // 
    // ALTER TABLE ... ALTER COLUMN ... SET DEFAULT ...
    ObjectTransferStage default_values = 6;
    // Constraints
    // 
    // ALTER TABLE ... ADD CONSTRAINT ...
    ObjectTransferStage constraint = 7;
    // Indexes
    // 
    // CREATE INDEX ...
    ObjectTransferStage index = 8;
    // Views
    // 
    // CREATE VIEW ...
    ObjectTransferStage view = 9;
    // Functions
    // 
    // CREATE FUNCTION ...
    ObjectTransferStage function = 10;
    // Triggers
    // 
    // CREATE TRIGGER ...
    ObjectTransferStage trigger = 11;
    // Types
    // 
    // CREATE TYPE ...
    ObjectTransferStage type = 12;
    // Rules
    // 
    // CREATE RULE ...
    ObjectTransferStage rule = 13;
    // Collations
    // 
    // CREATE COLLATION ...
    ObjectTransferStage collation = 14;
    // Policies
    // 
    // CREATE POLICY ...
    ObjectTransferStage policy = 15;
    // Casts
    // 
    // CREATE CAST ...
    ObjectTransferStage cast = 16;
    // Materialized views
    // 
    // CREATE MATERIALIZED VIEW ...
    ObjectTransferStage materialized_view = 17;
}
message OnPremisePostgres {
    // IP or FQDN of the host
    // 
    // IP or FQDN database host for making connection with source data base.
    string host = 1;
    repeated string hosts = 5;
    // Database port
    // 
    // Will be used if the cluster ID is not specified. Default: 6432.
    int64 port = 2;
    // CA certificate
    // 
    // X.509 certificate of the certificate authority which issued the PostgreSQL
    // server's certificate, in PEM format. When CA certificate is specified TLS is
    // used to connect to the PostgreSQL server.
    string ca_certificate = 3;
    // TLS mode
    // 
    // TLS settings for server connection. Disabled by default.
    TLSMode tls_mode = 6;
    // Network interface for endpoint
    // 
    // Default: public IPv4.
    string subnet_id = 4;
}
message PostgresConnection {
    oneof connection {
        // Managed cluster
        // 
        // Yandex.Cloud Managed PostgreSQL cluster ID
        string mdb_cluster_id = 1;
        // On-premise
        // 
        // Connection options for on-premise PostgreSQL
        OnPremisePostgres on_premise = 2;
    }
}
message PostgresSource {
    // Connection settings
    // 
    // Database connection settings
    PostgresConnection connection = 1;
    // Security groups
    repeated string security_groups = 14;
    // Database name
    string database = 2;
    // Username
    // 
    // User for database access.
    string user = 3;
    // Password
    // 
    // Password for database access.
    Secret password = 4;
    // Included tables
    // 
    // If none or empty list is presented, all tables are replicated. Full table name
    // with schema. Can contain schema_name.* patterns.
    repeated string include_tables = 5;
    // Excluded tables
    // 
    // If none or empty list is presented, all tables are replicated. Full table name
    // with schema. Can contain schema_name.* patterns.
    repeated string exclude_tables = 6;
    // Maximum WAL size for the replication slot
    // 
    // Maximum WAL size held by the replication slot. Exceeding this limit will result
    // in a replication failure and deletion of the replication slot. Unlimited by
    // default.
    int64 slot_byte_lag_limit = 8;
    // Database schema for service tables
    // 
    // Default: public. Here created technical tables (__consumer_keeper,
    // __data_transfer_mole_finder).
    string service_schema = 9;
    // Combine inherited tables
    // 
    // Allow to combine pg_inherits catalogue into one table.
    bool collapse_inherit_table = 10;
    // Schema migration on transfer activation
    // 
    // Choose schema parts, which will be created on the start of transfer process.
    PostgresDumpSteps pre_steps = 11;
    // Schema migration on transfer deactivation
    // 
    // Choose schema parts, which will be created on the end of transfer process.
    PostgresDumpSteps post_steps = 12;
    // Schema migration
    // 
    // Select database objects to be transferred during activation or deactivation.
    PostgresObjectTransferSettings object_transfer_settings = 13;
}
message PostgresTarget {
    // Connection settings
    // 
    // Database connection settings
    PostgresConnection connection = 1;
    // Security groups
    repeated string security_groups = 7;
    // Database name
    string database = 2;
    // Username
    // 
    // User for database access.
    string user = 3;
    // Password
    // 
    // Password for database access.
    Secret password = 4;
    // Cleanup policy
    // 
    // Cleanup policy for activate, reactivate and reupload processes. Default is
    // DISABLED.
    CleanupPolicy cleanup_policy = 5;
    // Save transaction boundaries
    // 
    // PREVIEW FEATURE: Save original transaction boundaries - do not commit data till
    // full transaction is read from source DB
    bool save_tx_boundaries = 6;
}
