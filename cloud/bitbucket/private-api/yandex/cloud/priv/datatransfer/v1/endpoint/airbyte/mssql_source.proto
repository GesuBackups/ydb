syntax = "proto3";

package yandex.cloud.priv.datatransfer.v1.endpoint.airbyte;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datatransfer/v1/endpoint/airbyte;tm_server_airbyte_endpoint";

import "yandex/cloud/priv/sensitive.proto";

message MSSQLSource {
    enum MSSQLReplicationMethod {
        MSSQL_REPLICATION_METHOD_UNSPECIFIED = 0;
        // Standard
        STANDARD = 1;
        // CDC
        CDC = 2;
    }
    message SSLUnencrypted {
    }
    message SSLEncryptedTrusted {
    }
    message SSLEncryptedVerifyCert {
        // Host Name In Certificate
        // 
        // Specifies the host name of the server. The value of this property must match the
        // subject property of the certificate.
        string host_name_in_certificate = 1;
    }
    message SSLConfig {
        oneof ssl_method {
            // UNENCRYPTED
            SSLUnencrypted unencrypted = 1;
            // ENCRYPTED (trust cert)
            SSLEncryptedTrusted encrypted_trust_server_certificate = 2;
            // ENCRYPTED (verify cert)
            SSLEncryptedVerifyCert encrypted_verify_certificate = 3;
        }
    }
    // Host
    // 
    // The hostname of the database.
    string host = 1;
    // Port
    // 
    // Port of the database.
    int64 port = 2;
    // Database
    // 
    // The name of the database.
    string database = 3;
    // Username
    // 
    // The username which is used to access the database.
    string username = 4;
    // Password
    // 
    // Password associated with the username.
    string password = 5 [(sensitive) = true];
    // Replication Method
    // 
    // The replication method used for extracting data from the database. 
    // STANDARD replication requires no setup on the DB side but will not be able to
    // represent deletions incrementally. 
    // CDC uses {TBC} to detect inserts, updates, and deletes. This needs to be
    // configured on the source database itself.
    // 
    MSSQLReplicationMethod replication_method = 6;
    // SSL Method
    // 
    // The encryption method which is used when communicating with the database.
    SSLConfig ssl_method = 7;
}
