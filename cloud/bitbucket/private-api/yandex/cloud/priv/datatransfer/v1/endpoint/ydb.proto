syntax = "proto3";

package yandex.cloud.priv.datatransfer.v1.endpoint;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datatransfer/v1/endpoint;tm_server_endpoint";

import "yandex/cloud/priv/datatransfer/v1/endpoint/common.proto";

enum YdbColumnsFilterType {
    YDB_COLUMNS_FILTER_TYPE_UNSPECIFIED = 0;
    INCLUDE = 1;
    EXCLUDE = 2;
}
enum YdbCleanupPolicy {
    YDB_CLEANUP_POLICY_UNSPECIFIED = 0;
    // Disabled
    YDB_CLEANUP_POLICY_DISABLED = 1;
    // Drop
    YDB_CLEANUP_POLICY_DROP = 2;
}
message YdbPartitionPolicy {
    // Size unit
    PartType part_type = 3;
    // Table size
    // 
    // Table size in selected units
    int64 part_size = 2;
    // Tables count
    int64 keep_part_count = 1;
    // Partition by column
    // 
    // Column to split the table, the column must be of type datetime
    string time_column = 4;
}
message YdbColumnsFilter {
    // RegExp of table names to apply columns filter
    // 
    // users_table|logins_table
    string table_names_regexp = 1;
    // RegExp of column names to apply filter
    // 
    // password|email|phone
    string column_names_regexp = 2;
    // Filter type
    // 
    // Whether to include or exclude the table/column into the transfer
    YdbColumnsFilterType type = 3;
}
message YdbSource {
    // Database
    string database = 1;
    // YDB Ednpoint
    // 
    // Instance must be fully specified, with host and port.
    string instance = 2;
    // Service account ID
    string service_account_id = 6;
    // Token to access YDB database.
    Secret token = 4;
    // List of tables for replication
    // 
    // If none or empty list is presented, all tables are replicated. Can contain
    // regular expression.
    repeated string tables = 5;
    string subnet_id = 30;
    bool underlay = 31;
    repeated YdbColumnsFilter table_columns_filter = 32;
}
message YdbTarget {
    // Database
    string database = 1;
    // YDB Endpoint
    string instance = 2;
    // Service account ID
    string service_account_id = 11;
    // Count of shards to split traffic
    // 
    // If presented will add _shard_col for each row. Shard will be calculated as hash
    // from timestamp % shard_count
    int64 shard_count = 3;
    // Token to access YDB database
    Secret token = 4;
    // YQL Writer (REPLACE INTO)
    bool replace_upload = 5;
    // Table rotation
    YdbPartitionPolicy partition_policy = 6;
    string compaction_policy = 7;
    string storage_policy = 8;
    // Alt names
    repeated AltName alt_names = 9;
    // Sub directory for tables
    string path = 10;
    string subnet_id = 30;
    bool underlay = 31;
    // Cleanup policy
    // 
    // Cleanup policy for activate, reactivate and reupload processes. Default is drop.
    YdbCleanupPolicy cleanup_policy = 21;
}
