syntax = "proto3";

package yandex.cloud.priv.audittrails.v1.console;

import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/audittrails/v1/trail.proto";
import "yandex/cloud/priv/iam/v1/service_account.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/audittrails/v1/console;audittrails_console";
option java_outer_classname = "PATCS";

service TrailConsoleService {

  rpc ListStorageDestinations (ListStorageDestinationsRequest) returns (ListStorageDestinationsResponse)   {
    option deprecated = true;
  };

  rpc ListLoggingDestinations (ListLoggingDestinationsRequest) returns (ListLoggingDestinationsResponse) {
    option deprecated = true;
  };

  rpc GetFolderStats (GetFolderStatsRequest) returns (FolderStats);

  rpc ResolveResourcePathFilterRoots (TrailResolveResourcePathFilterRootsRequest) returns (TrailResolveResourcePathFilterRootsResponse) {
    option deprecated = true; //use ResolveResourcePathFilterRootsWithMissingRoles method
  };

  rpc ResolveResourcePathFilterRootsWithMissingRoles (ResolveResourcePathFilterRootsWithMissingRolesRequest) returns (ResolveResourcePathFilterRootsWithMissingRolesResponse);

  rpc ListServiceAccounts (ListServiceAccountsRequest) returns (ListServiceAccountsResponse);
}

message GetFolderStatsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message FolderStats {
  int64 trails_count = 1;
}

message ListStorageDestinationsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string service_account_id = 2 [(length) = "<=50"];
  int64 page_size = 3 [(value) = "0-1000"];
  string page_token = 4 [(length) = "<=100"];
  string filter = 5 [(length) = "<=1000"];
}

message ListStorageDestinationsResponse {
  repeated Bucket buckets = 1;
  string next_page_token = 2;
}

message ListLoggingDestinationsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string service_account_id = 2 [(length) = "<=50"];
  int64 page_size = 3 [(value) = "0-1000"];
  string page_token = 4 [(length) = "<=100"];
  string filter = 5 [(length) = "<=1000"];
}

message ListLoggingDestinationsResponse {
  repeated LogGroup groups = 1;
  string next_page_token = 2;
}

message Bucket {
  string id = 1;
}

message LogGroup {
  string id = 1;
  string name = 2;
}

message TrailResolveResourcePathFilterRootsRequest {
  option deprecated = true;
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string service_account_id = 2 [(length) = "<=50"];
}

message TrailResolveResourcePathFilterRootsResponse {
  option deprecated = true;
  repeated Trail.Resource roots = 1;
}

message ResolveResourcePathFilterRootsWithMissingRolesRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message ResolveResourcePathFilterRootsWithMissingRolesResponse {
  repeated ResourceWithRoles roots = 1;
}

message ResourceWithRoles {
  Trail.Resource resource = 1 [(required) = true];
  repeated string missing_roles = 2;
}

message ListServiceAccountsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  Trail.Resource filter_root = 2 [(required) = true];
  Trail.Destination destination = 3 [(required) = true];
  int64 page_size = 4 [(value) = "0-1000"];
  string page_token = 5 [(length) = "<=100"];
}

message ListServiceAccountsResponse {
  repeated FilteredServiceAccount service_accounts = 1;
  repeated MissingRoleForResource required_roles = 2; // roles for new service account.
  string next_page_token = 3;
}

message FilteredServiceAccount {
  yandex.cloud.priv.iam.v1.ServiceAccount service_account = 1 [(required) = true];
  repeated MissingRoleForResource missing_roles = 2;
}
message MissingRoleForResource {
  string role_id = 1 [(required) = true, (length) = "<=50"];
  Trail.Resource resource = 2 [(required) = true];
}
