syntax = "proto3";

package yandex.cloud.priv.loadbalancer.v1alpha;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/loadbalancer/v1alpha/target_group.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/loadbalancer/v1alpha;loadbalancer";
option java_outer_classname = "PTGS";

service TargetGroupService {
  rpc Get (GetTargetGroupRequest) returns (TargetGroup) {
    option (google.api.http) = { get: "/compute/v1alpha/targetGroups/{target_group_id}" };
  }

  rpc List (ListTargetGroupsRequest) returns (ListTargetGroupsResponse) {
    option (google.api.http) = { get: "/compute/v1alpha/targetGroups" };
  }

  rpc Create (CreateTargetGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1alpha/targetGroups" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateTargetGroupMetadata"
      response: "TargetGroup"
    };
  }

  rpc Update (UpdateTargetGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/compute/v1alpha/targetGroups/{target_group_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateTargetGroupMetadata"
      response: "TargetGroup"
    };
  }

  rpc Delete (DeleteTargetGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/compute/v1alpha/targetGroups/{target_group_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteTargetGroupMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc AddTargets (AddTargetsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1alpha/targetGroups/{target_group_id}/addTargets" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "AddTargetsMetadata"
      response: "TargetGroup"
    };
  }

  rpc RemoveTargets (RemoveTargetsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/compute/v1alpha/targetGroups/{target_group_id}/removeTargets" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "RemoveTargetsMetadata"
      response: "TargetGroup"
    };
  }

  rpc ListOperations (ListTargetGroupOperationsRequest) returns (ListTargetGroupOperationsResponse) {
    option (google.api.http) = { get: "/compute/v1alpha/targetGroups/{target_group_id}/operations" };
  }
}

message GetTargetGroupRequest {
  string target_group_id = 1 [(required) = true, (length) = "<=50"];
}

message ListTargetGroupsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
}

message ListTargetGroupsResponse {
  repeated TargetGroup target_groups = 1;
  string next_page_token = 2;
}

message CreateTargetGroupRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string name = 2 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
  string description = 3 [(length) = "<=256"];
  map<string, string> labels = 4 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  
  string region_id = 5 [(required) = true, (length) = "<=50"];
  // string zone_id = 6; // for INTERNAL

  repeated Target targets = 7;
}

message CreateTargetGroupMetadata {
  string target_group_id = 1;
}

message UpdateTargetGroupRequest {
  string target_group_id = 1 [(required) = true, (length) = "<=50"];
  google.protobuf.FieldMask update_mask = 2;

  string name = 3 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
  string description = 4 [(length) = "<=256"];
  map<string, string> labels = 5 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  repeated Target targets = 6;
}

message UpdateTargetGroupMetadata {
  string target_group_id = 1;
}

message DeleteTargetGroupRequest {
  string target_group_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteTargetGroupMetadata {
  string target_group_id = 1;
}

message AddTargetsRequest {
  string target_group_id = 1 [(required) = true, (length) = "<=50"];
  repeated Target targets = 2 [(size) = ">=1"];
}

message AddTargetsMetadata {
  string target_group_id = 1;
}

message RemoveTargetsRequest {
  string target_group_id = 1 [(required) = true, (length) = "<=50"];
  repeated Target targets = 2 [(size) = ">=1"];
}

message RemoveTargetsMetadata {
  string target_group_id = 1;
}

message ListTargetGroupOperationsRequest {
  string target_group_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListTargetGroupOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
