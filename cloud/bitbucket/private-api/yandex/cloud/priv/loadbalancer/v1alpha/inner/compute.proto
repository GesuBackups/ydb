syntax = "proto3";

package yandex.cloud.priv.loadbalancer.v1alpha.inner;

import "google/api/annotations.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/loadbalancer/v1alpha/target_group.proto";
import "yandex/cloud/priv/loadbalancer/v1alpha/network_load_balancer.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/loadbalancer/v1alpha/inner;loadbalancer";

// LoadBalancerComputeInternalService is load-balancer specific compute handlers.
service LoadBalancerComputeInternalService {
  rpc GetNetworkLoadBalancer(GetNetworkLoadBalancerRequest) returns (GetNetworkLoadBalancerResponse) {
    option (google.api.http) = {
      get: "/compute/v1alpha/networkLoadBalancers"
    };
  }

  rpc ConvertTargetsToHealthCheckTargets(ConvertTargetsToHealthCheckTargetsRequest) returns (ConvertTargetsToHealthCheckTargetsResponse) {
    option (google.api.http) = {
      post: "/compute/v1alpha/convertTargetsToHealthCheckTargets"
      body: "*"
    };
  }

  rpc AddContrailAclRule(AddContrailAclRuleRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/compute/v1alpha/addContrailAclRule"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "AddContrailAclRuleMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc RemoveContrailAclRule(RemoveContrailAclRuleRequest) returns (operation.Operation) {
    option (google.api.http) = {
      post: "/compute/v1alpha/removeContrailAclRule"
      body: "*"
    };
    option (yandex.cloud.api.operation) = {
      metadata: "RemoveContrailAclRuleMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetNetworkLoadBalancerRequest {
  string vip = 1;
}

message GetNetworkLoadBalancerResponse {}

message ConvertTargetsToHealthCheckTargetsRequest {
  repeated Target targets = 1;
}

message ConvertTargetsToHealthCheckTargetsResponse {}

message AddContrailAclRuleRequest {
  string folder_id = 1;
  repeated Target targets = 2;
  repeated Listener listeners = 3;
}

message RemoveContrailAclRuleRequest {
  string folder_id = 1;
  repeated Target targets = 2;
  repeated Listener listeners = 3;
}

message AddContrailAclRuleMetadata {}
message RemoveContrailAclRuleMetadata {}
