syntax = "proto3";

package yandex.cloud.priv.kten.v1alpha;

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/kten/v1alpha;kten";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/access/access.proto";
import "yandex/cloud/priv/kten/v1alpha/cluster.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

service ClusterService {
  rpc Create(CreateClusterRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateClusterMetadata"
      response: "Cluster"
    };
  }
  rpc Update(UpdateClusterRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateClusterMetadata"
      response: "Cluster"
    };
  }
  rpc Delete(DeleteClusterRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteClusterMetadata"
      response: "google.protobuf.Empty"
    };
  }
  rpc Get(GetClusterRequest) returns (Cluster);
  rpc List(ListClustersRequest) returns (ListClustersResponse);
  rpc ListAccessBindings(access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse);
  rpc SetAccessBindings(access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }
  rpc UpdateAccessBindings(access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message CreateClusterRequest {
  string name = 1;
  string folder_id = 2 [
    (length) = ">0",
    (required) = true
  ];
  string endpoint = 3 [
    (length) = ">0",
    (required) = true
  ];
  // pem encoded ca certificate
  // if changed need force new
  string certificate = 4;
  // allow create cluster with well-known id
  string id = 5 [
    (length) = "<=30",
    (required) = false
  ];
  // if true don't check endpoint availability
  bool disable_check = 6;
}

message UpdateClusterRequest {
  string cluster_id = 1 [
    (length) = "<=30",
    (required) = true
  ];
  string name = 2;
}

message GetClusterRequest {
  string cluster_id = 1 [
    (length) = "<=30",
    (required) = true
  ];
}

message ListClustersRequest {
  string folder_id = 1 [(length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
  string order_by = 5 [(length) = "<=100"];
}

message ListClustersResponse {
  repeated Cluster clusters = 1;
  string next_page_token = 2;
}

message DeleteClusterRequest {
  string cluster_id = 1 [
    (length) = "<=30",
    (required) = true
  ];
}

message DeleteClusterMetadata {
  string cluster_id = 1 [(length) = "<=30"];
}

message CreateClusterMetadata {
  string cluster_id = 1 [(length) = "<=30"];
}

message UpdateClusterMetadata {
  string cluster_id = 1 [(length) = "<=30"];
}
