syntax = "proto3";

package yandex.cloud.priv.k8s.v1.inner;

import "google/protobuf/empty.proto";

import "yandex/cloud/priv/k8s/v1/inner/common.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/k8s/v1/inner;k8s";
option java_outer_classname = "PMKICS";

service ClusterService {
  rpc Get(GetClusterRequest) returns (ClusterInfo);
  rpc List(ListClustersRequest) returns (ListClustersResponse);
  rpc SwitchController(SwitchControllerRequest) returns (google.protobuf.Empty);
  rpc Encrypt(EncryptClusterRequest) returns (google.protobuf.Empty);
  rpc ListObjects(ListClusterObjectsRequest) returns (ListClusterObjectsResponse);
}

message GetClusterRequest {
  string cluster_id = 1 [(required) = true];
}

message ListClustersRequest {
  repeated ClusterFilter filter = 1;

  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListClustersResponse {
  repeated ClusterInfo clusters = 1;
  string next_page_token = 2;
}

message ClusterFilter {
  oneof filter {
    PublicReleaseChannel release_channel = 1;
    ControllerColour controller_colour = 2;
  }
}

message SwitchControllerRequest {
  string cluster_id = 1 [(required) = true];
  ControllerColour controller_colour = 2 [(required) = true];
}

message EncryptClusterRequest {
  string cluster_id = 1 [(required) = true];
}

message ListClusterObjectsRequest {
  string cluster_id = 1 [(required) = true];
}

message ListClusterObjectsResponse {
  repeated ClusterObject objects = 1;
}

message ClusterObject {
  string id = 1;
  string type = 2;
  string cluster_id = 3;
  ControllerColour controller_colour = 4;
}
