syntax = "proto3";

package yandex.cloud.priv.iot.devices.v1;

import "google/protobuf/field_mask.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/sensitive.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/iot/devices/v1/broker.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/iot/devices/v1;devices";
option java_outer_classname = "PITBS";

service BrokerService {
  rpc Get (GetBrokerRequest) returns (Broker);

  rpc List (ListBrokersRequest) returns (ListBrokersResponse);

  rpc Create (CreateBrokerRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateBrokerMetadata"
      response: "Broker"
    };
  }

  rpc Update (UpdateBrokerRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateBrokerMetadata"
      response: "Broker"
    };
  }

  rpc Delete (DeleteBrokerRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteBrokerMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc ListCertificates (ListBrokerCertificatesRequest) returns (ListBrokerCertificatesResponse);

  rpc AddCertificate (AddBrokerCertificateRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "AddBrokerCertificateMetadata"
      response: "BrokerCertificate"
    };
  }

  rpc DeleteCertificate (DeleteBrokerCertificateRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteBrokerCertificateMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc ListPasswords (ListBrokerPasswordsRequest) returns (ListBrokerPasswordsResponse);

  rpc AddPassword (AddBrokerPasswordRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "AddBrokerPasswordMetadata"
      response: "BrokerPassword"
    };
  }

  rpc DeletePassword (DeleteBrokerPasswordRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteBrokerPasswordMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc ListOperations (ListBrokerOperationsRequest) returns (ListBrokerOperationsResponse);
}

message GetBrokerRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
}

message GetByNameBrokerRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string broker_name = 2 [(required) = true, (length) = "<=50", (pattern) = "[a-zA-Z0-9_-]*"];
}

message ListBrokersRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListBrokersResponse {
  repeated Broker brokers = 1;
  string next_page_token = 2;
}

message CreateBrokerRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string name = 2 [(required) = true, (length) = "<=50", (pattern) = "[a-zA-Z0-9_-]*"];
  string description = 3 [(length) = "<=256"];
  map<string, string> labels = 4 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  repeated Certificate certificates = 5;
  string password = 6 [(sensitive) = true];

  message Certificate {
    string certificate_data = 1 [(sensitive) = true];
  }
}

message CreateBrokerMetadata {
  string broker_id = 1;
}

message UpdateBrokerRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];

  google.protobuf.FieldMask update_mask = 2;

  string name = 3 [(length) = "<=50", (pattern) = "[a-zA-Z0-9_-]*"];

  string description = 4 [(length) = "<=256"];

  map<string, string> labels = 5 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
}

message UpdateBrokerMetadata {
  string broker_id = 1;
}

message DeleteBrokerRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteBrokerMetadata {
  string broker_id = 1;
}

message ListBrokerCertificatesRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
}

message ListBrokerCertificatesResponse {
  repeated BrokerCertificate certificates = 1;
}

message AddBrokerCertificateRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
  string certificate_data = 3 [(sensitive) = true];
}

message AddBrokerCertificateMetadata {
  string broker_id = 1;
  string fingerprint = 2;
}

message DeleteBrokerCertificateRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
  string fingerprint = 2 [(required) = true, (length) = "<=50"];
}

message DeleteBrokerCertificateMetadata {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
  string fingerprint = 2 [(required) = true, (length) = "<=50"];
}

message ListBrokerPasswordsRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
}

message ListBrokerPasswordsResponse {
  repeated BrokerPassword passwords = 1;
}

message AddBrokerPasswordRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
  string password = 2 [(length) = ">=14", (sensitive) = true];
}

message AddBrokerPasswordMetadata {
  string broker_id = 1;
  string password_id = 2;
}

message DeleteBrokerPasswordRequest {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
  string password_id = 2 [(required) = true, (length) = "<=50"];
}

message DeleteBrokerPasswordMetadata {
  string broker_id = 1 [(required) = true, (length) = "<=50"];
  string password_id = 2 [(required) = true, (length) = "<=50"];
}

message ListBrokerOperationsRequest {
  string broker_id = 1 [(required) = true];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
}

message ListBrokerOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
