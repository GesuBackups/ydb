syntax = "proto3";

package yandex.cloud.priv.marketplace.v2.partners;

import "google/api/annotations.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/marketplace/v2/partner.proto";
import "yandex/cloud/priv/marketplace/v2/partner_proposal.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v2/partners;marketplace_partners";
option java_outer_classname = "PMPRPLS";


service PartnerProposalService {
    rpc Get (GetPartnerProposalRequest) returns (PartnerProposal) {
        option (google.api.http) = { get: "/marketplace/v2/private/partners/{partner_id}/proposals/{proposal_id}" };
    }
    rpc List (ListPartnerProposalsRequest) returns (PartnerProposalsListResponse){
        option (google.api.http) = { get: "/marketplace/v2/private/partners/{partner_id}/proposals" };
    }

    rpc Create (PartnerProposalCreateRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/partners/{partner_id}/proposals" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProposalMetadata"
            response: "PartnerProposal"
        };
    }

    rpc Apply (PartnerProposalApplyRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/partners/{partner_id}/proposals/{proposal_id}:apply" };
        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProposalMetadata"
            response: "PartnerProposal"
        };
    }

    rpc Reject (PartnerProposalRejectRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/partners/{partner_id}/proposals/{proposal_id}:reject" };

        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProposalMetadata"
            response: "PartnerProposal"
        };
    }
    rpc Delete (PartnerProposalDeleteRequest) returns (operation.Operation) {
        option (google.api.http) = { delete: "/marketplace/v2/partners/partners/{partner_id}/proposals/{proposal_id}" };
        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProposalMetadata"
            response: "PartnerProposal" // Nope
        };
    }
}


message PartnerProposalCreateRequest {
    string partner_id = 1 [(required) = true, (length) = "<=50"];
    string new_version_id = 2 [(required) = true, (length) = "<=50"];
    string previous_version_id = 3 [(length) = "<=50"];
    bool auto_apply = 4;
}
