syntax = "proto3";

package yandex.cloud.priv.marketplace.v2.partners;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/marketplace/v2/i18n.proto";
import "yandex/cloud/priv/marketplace/v2/common.proto";
import "yandex/cloud/priv/marketplace/v2/product.proto";
import "yandex/cloud/priv/marketplace/v2/product_version.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v2/partners;marketplace_partners";
option java_outer_classname = "PMPVPS";


service ProductVersionService {
    rpc Get (GetProductVersionRequest) returns (ProductVersion) {
        option (google.api.http) = { get: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/versions/{version_id}"};
    }
    rpc List (ListProductVersionsRequest) returns (ProductVersionsListResponse){
        option (google.api.http) = { get: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/versions"};
    }
    rpc Create (CreateProductVersionRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/versions" body: "*"};

        option (yandex.cloud.api.operation) = {
        metadata: "CreateProductVersionMetadata"
        response: "ProductVersion"
    };
    }

    rpc Update (UpdateProductVersionRequest) returns (operation.Operation) {
        option (google.api.http) = { patch: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/versions/{version_id}" body: "*"};

        option (yandex.cloud.api.operation) = {
        metadata: "UpdateProductVersionMetadata"
        response: "ProductVersion"
    };
    }

}

message GetProductVersionRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];
    string version_id = 3 [(required) = true, (length) = "<=50"];
}

message ListProductVersionsRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];

    int64 page_size = 3 [(value) = "0-1000"];
    string page_token = 4 [(length) = "<=100"];
}

message ProductVersionsListResponse {
    string next_page_token = 1;
    repeated ProductVersion versions = 2;
}

message CreateProductVersionMetadata {
    string publisher_id = 1;
    string product_id = 2;
    string version_id = 3;
}

message UpdateProductVersionMetadata {
    string publisher_id = 1;
    string product_id = 2;
    string version_id = 3;
}

message ProductVersionMarketingInfoRequest {
    TextI18n name = 1;
    TextI18n description = 2;
    TextI18n short_description = 3;
    repeated LinkI18n links = 4;
    oneof logo_source {
        option (exactly_one) = true;

        // user bucket + object
        StorageObject storage_object = 5;

        // content
        bytes content = 6 [(length) = "<=52428800"];

        // previous version
        string version_id = 7;
    };
    TextI18n support = 8;
}

message ReferenceRequest {
    string product_id = 1;
    Product.Type product_type = 2;
    TextI18n title = 3;
    Product.ReferenceType reference_type = 4;
    Product.ReferenceNecessityType necessity_type = 5;
}

message SkuRequest {
    string id = 1;
    string check_formula = 2;
}

message PricingRequest {
    repeated SkuRequest skus = 1;
    Product.Pricing.PricingType type = 2;
}

message RestrictionsRequest {
    BillingAccountRequirements billing_account_requirements = 1;

    message BillingAccountRequirements {
        repeated Product.Restrictions.BillingAccountUsageType usage_state = 1;
    }
}

message ComputeImagePayloadRequest {
    string image_id = 1;
    string folder_id = 2;
    ResourceSpec resource_spec = 3;
    string form_id = 4;
    PackageInfo package_info = 5;

    message ResourceSpec {
        ResourceIntervalRestriction cpu = 1;
        ResourceIntervalRestriction cpu_fraction = 2;
        ResourceIntervalRestriction memory = 3;
        ResourceIntervalRestriction gpu = 4;
        ResourceIntervalRestriction disk_size = 5;
        ResourceIntervalRestriction network_interfaces = 6;
        repeated string service_account_roles = 7;
        repeated ComputeImagePayload.ComputePlatform compute_platforms = 9;
    }

    message ResourceIntervalRestriction {
        int64 min = 1;
        int64 max = 2;
        int64 recommended = 3;
    }

    message PackageInfo {
        OperationSystem os = 1;
        repeated PackageContentItem package_contents = 2;
    }

    message OperationSystem {
        ComputeImagePayload.OperationSystemFamily family = 1;
        string name = 2;
        string version = 3;
    }

    message PackageContentItem {
        string name = 1;
        string version = 2;
    }
}

message ComputeImageSourceRequest {
    string image_id = 1;
    string folder_id = 2;
}

message SaasPayloadRequest {

}

message SaasSourceRequest {

}


message DatalensPropertiesValueRequest {
    string value = 1;
    TextI18n title = 2;
}

message DatalensSelectorPropertiesRequest {
    repeated DatalensPropertiesValueRequest values = 1;
    string default_value = 2;
}

message DatalensScrollPropertiesRequest {
    double min = 1;
    double max = 2;
    double step = 3;
    double default_value = 4;
}

message DatalensVariableRequest {
    string name = 1;
    DatalensVariableKind kind = 2;
    TextI18n title = 3;
    oneof properties {
        DatalensSelectorPropertiesRequest selector = 10;
        DatalensScrollPropertiesRequest scroll = 11;
    }
}

message DatalensSubProductRequest {
    map<string, google.protobuf.Any> variables = 1;
    string sub_product_id = 2;
    string connector_name = 3;
    string template_name = 4;
}


message DatalensGeolayerPayloadRequest {
    repeated DatalensSubProductRequest sub_products = 1;
    repeated DatalensVariableRequest variables = 2;
    DatalensDeployType deploy_type = 3;
}

message DatalensDatasetPayloadRequest {
    repeated DatalensSubProductRequest sub_products = 1;
    repeated DatalensVariableRequest variables = 2;
    DatalensDeployType deploy_type = 3;
}

message DatalensConnectorPayloadRequest {
    repeated DatalensSubProductRequest sub_products = 1;
    repeated DatalensVariableRequest variables = 2;
    DatalensDeployType deploy_type = 3;
}

message DatalensTemplatePayloadRequest {
    repeated DatalensSubProductRequest sub_products = 1;
    repeated DatalensVariableRequest variables = 2;
    DatalensDeployType deploy_type = 3;
}

message DatalensGeolayerSourceRequest {
}

message DatalensDatasetSourceRequest {
}

message DatalensConnectorSourceRequest {
}

message DatalensTemplateSourceRequest {
}

message ProductVersionPayloadRequest {
    oneof type {
        option (exactly_one) = true;
        ComputeImagePayloadRequest compute_image = 1;
        SaasPayloadRequest saas = 2;
        DatalensGeolayerPayloadRequest datalens_geolayer = 3;
        DatalensDatasetPayloadRequest datalens_dataset = 4;
        DatalensConnectorPayloadRequest datalens_connector = 5;
        DatalensTemplatePayloadRequest datalens_template = 6;
    }
}

message ProductVersionSourceRequest {
    oneof type {
        option (exactly_one) = true;
        ComputeImageSourceRequest compute_image = 1;
        SaasSourceRequest saas = 2;
        DatalensGeolayerSourceRequest datalens_geolayer = 3;
        DatalensDatasetSourceRequest datalens_dataset = 4;
        DatalensConnectorSourceRequest datalens_connector = 5;
        DatalensTemplateSourceRequest datalens_template = 6;
    }
}


message CreateProductVersionRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];

    repeated ReferenceRequest related_products = 3;
    repeated Product.TermsOfService terms_of_service = 4;
    ProductVersionMarketingInfoRequest marketing_info = 5;
    RestrictionsRequest restrictions = 6;
    PricingRequest pricing = 7;
    ProductVersionPayloadRequest payload = 8;
    ProductVersionSourceRequest source = 9;
}

message UpdateProductVersionRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];
    string version_id = 3 [(required) = true, (length) = "<=50"];

    repeated ReferenceRequest related_products = 4;
    repeated Product.TermsOfService terms_of_service = 5;
    ProductVersionMarketingInfoRequest marketing_info = 6;
    RestrictionsRequest restrictions = 7;
    PricingRequest pricing = 8;
    ProductVersionPayloadRequest payload = 9;
    ProductVersionSourceRequest source = 10;
}
