syntax = "proto3";

package yandex.cloud.priv.marketplace.v2.inner;

import "google/api/annotations.proto";

import "yandex/cloud/priv/marketplace/v2/partner_product_proposal.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v2/inner;inner";
option java_outer_classname = "PMPRPPLIS";


service PartnerProductProposalService {
    rpc Get (GetPartnerProductProposalRequest) returns (PartnerProductProposal) {
        option (google.api.http) = { get: "/marketplace/v2/private/partners/{partner_id}/partnerProducts/{partner_product_id}/proposals/{proposal_id}" };
    }
    rpc List (ListPartnerProductProposalsRequest) returns (PartnerProductProposalsListResponse){
        option (google.api.http) = { get: "/marketplace/v2/private/partners/{partner_id}/partnerProducts/{partner_product_id}/proposals" };
    }
    rpc Approve (PartnerProductProposalApproveRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/private/partners/{partner_id}/partnerProducts/{partner_product_id}/proposals/{proposal_id}:approve" };

        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProductProposalMetadata"
            response: "PartnerProductProposal"
        };
    }
    rpc Reject (PartnerProductProposalRejectRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/private/partners/{partner_id}/partnerProducts/{partner_product_id}/proposals/{proposal_id}:reject" };

        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProductProposalMetadata"
            response: "PartnerProductProposal"
        };
    }
    rpc Apply (PartnerProductProposalApplyRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/private/partners/{partner_id}/partnerProducts/{partner_product_id}/proposals/{proposal_id}:apply" };

        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProductProposalMetadata"
            response: "PartnerProductProposal"
        };
    }
    rpc Delete (PartnerProductProposalDeleteRequest) returns (operation.Operation) {
        option (google.api.http) = { delete: "/marketplace/v2/private/partners/{partner_id}/partnerProducts/{partner_product_id}/proposals/{proposal_id}" };

        option (yandex.cloud.api.operation) = {
            metadata: "PartnerProductProposalMetadata"
            response: "PartnerProductProposal" // nope
        };
    }
}


message PartnerProductProposalMetadata {
    string partner_id = 1;
    string partner_product_id = 2;
    string proposal_id = 3;
}
