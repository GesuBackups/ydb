syntax = "proto3";

package yandex.cloud.priv.marketplace.v2.partners;

import "google/api/annotations.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/marketplace/v2/i18n.proto";
import "yandex/cloud/priv/marketplace/v2/sku_draft.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v2/partners;marketplace_partners";
option java_outer_classname = "PMSDS";

service SkuDraftService {
    rpc Get (GetSkuDraftRequest) returns (SkuDraft){
        option (google.api.http) = { get: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/skuDrafts/{sku_draft_id}" };
    }

    rpc List (ListSkuDraftsRequest) returns (SkuDraftsListResponse){
        option (google.api.http) = { get: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/skuDrafts" };
    }

    rpc Create (SkuDraftCreateRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/publishers/{publisher_id}/products/{product_id}/skuDrafts" body: "*"};

        option (yandex.cloud.api.operation) = {
            metadata: "CreateSkuDraftMetadata"
            response: "SkuDraft"
        };
    }

}


message GetSkuDraftRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];
    string sku_draft_id = 3 [(required) = true, (length) = "<=50"];
}

message ListSkuDraftsRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];

    int64 page_size = 3 [(value) = "0-1000"];
    string page_token = 4 [(length) = "<=100"];
}

message SkuDraftsListResponse {
    string next_page_token = 1;
    repeated SkuDraft sku_drafts = 2;
}

message CreateSkuDraftMetadata {
    string publisher_id = 1;
    string product_id = 2;
    string version_id = 3;
    string proposal_id = 4;
}

message PricingVersionDraftRequest {
    AggregationInfoRequest aggregation_info = 1;
    PricingExpressionRequest pricing_expression = 2;
}

message PricingExpressionRequest {
    // Decimal
    string quantum = 1 [(pattern) = "[0-9]+(\\.[0-9]+)?"];
    RateRequest rates = 2;
}

message RateRequest {
    int64 start_pricing_quantity = 1;
    // Decimal
    string unit_price = 2 [(pattern) = "[0-9]+(\\.[0-9]+)?"];
}

message AggregationInfoRequest {
    SkuDraft.AggregationInfo.AggregationLevel level = 1;
    SkuDraft.AggregationInfo.AggregationInterval interval = 2;
}

message SkuDraftCreateRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string product_id = 2 [(required) = true, (length) = "<=50"];
    TextI18n name = 3;
    SkuDraft.Unit unit = 4;
    repeated PricingVersionDraftRequest pricing_versions = 5;
}
