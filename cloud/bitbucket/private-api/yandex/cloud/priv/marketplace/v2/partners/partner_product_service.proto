syntax = "proto3";

package yandex.cloud.priv.marketplace.v2.partners;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/marketplace/v2/partner_product.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v2/partners;marketplace_partners";
option java_outer_classname = "PMPRPPS";

service PartnerProductService {
    rpc Get (GetPartnerProductRequest) returns (PartnerProduct) {
        option (google.api.http) = { get: "/marketplace/v2/partners/partners/{partner_id}/partnerProducts/{partner_product_id}" };
    }

    rpc List (ListPartnerProductsRequest) returns (PartnerProductsListResponse) {
        option (google.api.http) = { get: "/marketplace/v2/partners/partners/{partner_id}/partnerProducts" };
    }

    rpc Create (PartnerProductCreateRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/partners/{partner_id}/partnerProducts" body: "*" };

        option (yandex.cloud.api.operation) = {
            metadata: "CreatePartnerProductMetadata"
            response: "PartnerProduct"
        };
    }

    rpc PictureUpload (PictureUploadRequest) returns (FileResponse) {
        // expects multipart-formdata
        // with params: folder_id and avatar (filename/filestream)
        option (google.api.http) = { post: "/marketplace/v2/partners/partners/{partner_id}/partnerProducts/{partner_product_id}/pictures" body: "*" };
    }

}

message GetPartnerProductRequest {
    string partner_id = 1 [(required) = true, (length) = "<=50"];
    string partner_product_id = 2 [(required) = true, (length) = "<=50"];
}

message ListPartnerProductsRequest {
    string partner_id = 1 [(required) = true, (length) = "<=50"];
}

message PartnerProductsListResponse {
    string next_page_token = 1;
    repeated PartnerProduct partner_products = 2;
}

message CreatePartnerProductMetadata {
    string partner_id = 1;
    string partner_product_id = 2;
    string version_id = 3;
    string proposal_id = 4;
}

message PartnerProductCreateRequest {
    string partner_id = 1 [(required) = true, (length) = "<=50"];
    string name = 2 [(required) = true, (pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
}

message PictureUploadRequest {
    string partner_id = 1 [(required) = true, (length) = "<=50"];
    string partner_product_id = 2 [(required) = true, (length) = "<=50"];
    string filename = 3 [(required) = true];
    // And file data multipart encoded
}

message FileResponse {
    string id = 1;
    int64 created_at = 2;
    google.protobuf.Any meta = 3;
    string  url = 4;
}
