syntax = "proto3";

package yandex.cloud.priv.marketplace.v2.partners;

import "google/api/annotations.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/marketplace/v2/i18n.proto";
import "yandex/cloud/priv/marketplace/v2/common.proto";
import "yandex/cloud/priv/marketplace/v2/publisher_version.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v2/partners;marketplace_partners";
option java_outer_classname = "PMPBVPS";


service PublisherVersionService {
    rpc Get (GetPublisherVersionRequest) returns (PublisherVersion){
        option (google.api.http) = { get: "/marketplace/v2/partners/publishers/{publisher_id}/versions/{version_id}"};
    }
    rpc List (ListPublisherVersionsRequest) returns (PublisherVersionsListResponse){
        option (google.api.http) = { get: "/marketplace/v2/partners/publishers/{publisher_id}/versions"};
    }
    rpc Create (CreatePublisherVersionRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/marketplace/v2/partners/publishers/{publisher_id}/versions" body: "*"};

        option (yandex.cloud.api.operation) = {
            metadata: "CreatePublisherVersionMetadata"
            response: "PublisherVersion"
        };
    }

    rpc Update (UpdatePublisherVersionRequest) returns (operation.Operation) {
        option (google.api.http) = { patch: "/marketplace/v2/partners/publishers/{publisher_id}/versions/{version_id}" body: "*"};

        option (yandex.cloud.api.operation) = {
            metadata: "UpdatePublisherVersionMetadata"
            response: "PublisherVersion"
        };
    }
}

message GetPublisherVersionRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string version_id = 2 [(required) = true, (length) = "<=50"];
}

message ListPublisherVersionsRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];

    int64 page_size = 2 [(value) = "0-1000"];
    string page_token = 3 [(length) = "<=100"];
}

message PublisherVersionsListResponse {
    string next_page_token = 1;
    repeated PublisherVersion versions = 2;
}

message CreatePublisherVersionMetadata {
    string publisher_id = 1;
    string version_id = 2;
    string proposal_id = 3;
}

message UpdatePublisherVersionMetadata {
    string publisher_id = 1;
    string version_id = 2;
}

message PublisherVersionMarketingInfo {
    TextI18n name = 1;
    TextI18n description = 2;
    TextI18n short_description = 3;
    TextI18n url = 4;
    TextI18n address = 5;
    TextI18n phone_number = 6;
    LinkListI18n links = 7;
    oneof logo_source {
        option (exactly_one) = true;

        // user bucket + object
        StorageObject storage_object = 8;

        // content
        bytes content = 9 [(length) = "<=52428800"];

        // previous version
        string version_id = 10;
    };
}

message CreatePublisherVersionRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    PublisherVersionMarketingInfo marketing_info = 2;
}

message UpdatePublisherVersionRequest {
    string publisher_id = 1 [(required) = true, (length) = "<=50"];
    string version_id = 2 [(required) = true, (length) = "<=50"];
    PublisherVersionMarketingInfo marketing_info = 3;
}
