syntax = "proto3";

package yandex.cloud.priv.marketplace.v1alpha1;

import "google/api/annotations.proto";
import "yandex/cloud/priv/marketplace/v1alpha1/sku.proto";
import "yandex/cloud/priv/marketplace/v1alpha1/pricing_version.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/marketplace/v1alpha1/console;marketplace";

service ManageSkusService {
  rpc GetSku (SkuIDRequest) returns (Sku) {
    option (google.api.http) = {get: "/marketplace/v1alpha1/console/manage/skus/{sku_id}"};
  }
  rpc ListSkus (ListSkusRequest) returns (SkusList) {
    option (google.api.http) = {get: "/marketplace/v1alpha1/console/manage/skus"};
  }
  rpc CreateSku (SkuCreateRequest) returns (Sku) {
    option (google.api.http) = {post: "/marketplace/v1alpha1/console/manage/skus" body: "*"};
  }
  rpc UpdateSku (SkuUpdateRequest) returns (Sku) {
    option (google.api.http) = {patch: "/marketplace/v1alpha1/console/manage/skus/{sku_id}" body: "*"};
  }
}

message SkuIDRequest {
  string sku_id = 1;
}
message ListSkusRequest {
  string folder_id = 1;
  string page_token = 2;
  int64 page_size = 3;
}
message SkusList {
  string next_page_token = 1;
  repeated Sku skus = 2;
}
message SkuCreateRequest {
  string name = 1;
  string service_id = 2;
  string balance_product_id = 3;
  string metric_unit = 4;
  string usage_unit = 5;
  string pricing_unit = 6;
  repeated PricingVersion pricing_versions = 7;
  string formula = 8;
  string publisher_account_id = 9;
  string rate_formula = 10;
  string resolving_policy = 11;
}
message SkuUpdateRequest {
  string sku_id = 1;

  message AggregationInfo {
    string level = 1;
    string interval = 2;
  }
  message PricingExpression {
    message Rate {
      int64 start_pricing_quantity = 1;
      int64 unit_price = 2;
    }
    int64 quantum = 1;
    repeated Rate rates = 2;
  }
  // Pricing version
  string id = 2;
  int64 effective_time = 3;
  AggregationInfo aggregation_info = 4;
  PricingExpression pricing_expression = 5;

}
