syntax = "proto3";

package yandex.cloud.priv.mdb.mongodb.v1;

import "google/api/annotations.proto";
import "yandex/cloud/api/operation.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/sensitive.proto";
import "yandex/cloud/priv/mdb/mongodb/v1/user.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/mongodb/v1;mongodb";
option java_outer_classname = "PMUS";

// A set of methods for managing MongoDB users.
service UserService {
  // Returns the specified MongoDB user.
  rpc Get (GetUserRequest) returns (User) {
    option (google.api.http) = { get: "/mdb/mongodb/v1/clusters/{cluster_id}/users/{user_name}" };
  }

  // Retrieves a list of MongoDB users.
  rpc List (ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = { get: "/mdb/mongodb/v1/clusters/{cluster_id}/users" };
  }

  // Creates a new MongoDB user.
  rpc Create (CreateUserRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/mongodb/v1/clusters/{cluster_id}/users" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateUserMetadata"
      response: "User"
    };
  }

  // Modifies the specified MongoDB user.
  rpc Update (UpdateUserRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/mdb/mongodb/v1/clusters/{cluster_id}/users/{user_name}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateUserMetadata"
      response: "User"
    };
  }

  // Deletes the specified MongoDB user.
  rpc Delete (DeleteUserRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/mdb/mongodb/v1/clusters/{cluster_id}/users/{user_name}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteUserMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Grants permission to the specified MongoDB user.
  rpc GrantPermission (GrantUserPermissionRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/mongodb/v1/clusters/{cluster_id}/users/{user_name}:grantPermission" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "GrantUserPermissionMetadata"
      response: "User"
    };
  }

  // Revokes permission to the specified MongoDB user.
  rpc RevokePermission (RevokeUserPermissionRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/mongodb/v1/clusters/{cluster_id}/users/{user_name}:revokePermission" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "RevokeUserPermissionMetadata"
      response: "User"
    };
  }
}

message GetUserRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required.
  string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];
}

message ListUsersRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListUsers requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListUsers
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];
}

message ListUsersResponse {
  // Requested list of MongoDB clusters.
  repeated User users = 1;

  // This token allows you to get the next page of results for ListUsers requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListUsers request. Subsequent ListUsers
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message CreateUserRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // User properties.
  UserSpec user_spec = 2;
}

message CreateUserMetadata {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1;

  // Required. Name of the user.
  string user_name = 2;
}

message UpdateUserRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the user to be updated.
  string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

  google.protobuf.FieldMask update_mask = 3;

  string password = 4 [(length) = "8-128", (sensitive) = true];

  repeated Permission permissions = 5;
}

message UpdateUserMetadata {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1;

  // Required.
  string user_name = 2;
}

message DeleteUserRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the user to delete.
  string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];
}

message DeleteUserMetadata {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1;

  // Required. Name of the deleting user.
  string user_name = 2;
}

message GrantUserPermissionRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the user.
  string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

  Permission permission = 3 [(required) = true];
}

message GrantUserPermissionMetadata {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1;

  // Required. Name of the user.
  string user_name = 2;
}

message RevokeUserPermissionRequest {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the user.
  string user_name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_]*"];

  string database_name = 3 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];
}

message RevokeUserPermissionMetadata {
  // Required. ID of the MongoDB cluster.
  string cluster_id = 1;

  // Required. Name of the user.
  string user_name = 2;
}
