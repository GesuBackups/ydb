syntax = "proto3";

package yandex.cloud.priv.mdb.mongodb.v1.console;

import "google/protobuf/any.proto";
import "yandex/cloud/priv/mdb/mongodb/v1/cluster.proto";
import "yandex/cloud/priv/mdb/mongodb/v1/cluster_service.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/mongodb/v1/console;mongodb_console";
option java_outer_classname = "PMCO";

message MongodbClustersConfig {
  // Required
  NameValidator cluster_name = 1;

  // Required
  NameValidator db_name = 2;

  // Required
  NameValidator user_name = 3;

  // Required
  NameValidator password = 4;

  message HostCountLimits {
    // Required. Minimum number of hosts per cluster.
    int64 min_host_count = 1;
    // Required. Maximum number of hosts per cluster.
    int64 max_host_count = 2;

    message HostCountPerDiskType {
      // Required. Disk type ID
      string disk_type_id = 1;
      // Required. Minimum number of hosts per cluster. Overrides default value if
      // specified disk type is used.
      int64 min_host_count = 2;
    }

    repeated HostCountPerDiskType host_count_per_disk_type = 3;
  }

  // Required
  HostCountLimits host_count_limits = 5;

  message ResourcePreset {
    // Required. Preset ID
    string preset_id = 1;
    // Required. CPU limit for this preset
    int64 cpu_limit = 2;
    // Required. Memory limit for this preset
    int64 memory_limit = 3;

    message Zone {
      // Required. Zone location ID
      string zone_id = 1;

      message DiskType {
        // Required. Disk type ID
        string disk_type_id = 1;

        message DiskSizeRange {
          // Required. Minimum disk size in bytes
          int64 min = 1;
          // Required. Maximum disk size in bytes
          int64 max = 2;
        }

        message DiskSizes {
          // Required. List of disk sizes in bytes
          repeated int64 sizes = 1;
        }

        // Allowed disk sizes. Either in form of disk size range or list of disk sizes
        oneof DiskSize {
          DiskSizeRange disk_size_range = 2;
          DiskSizes disk_sizes = 3;
        }
      }

      // Required. Disk types for this preset
      repeated DiskType disk_types = 2;
    }

    // Required. Available zones
    repeated Zone zones = 4;
  }

  message HostType {
    // Required. Host type this message describes resources for
    Host.Type type = 1;

    // Required. Available resource presets
    repeated ResourcePreset resource_presets = 2;
  }

  // Required. Valid resource combos per host type
  repeated HostType host_types = 7;

  // Required. Available versions
  repeated string versions = 8;

  message FCV {
    // Required. Mongodb version
    string id = 1;

    // Required. Feature compatibility versions list for Mongodb version identified by id
    repeated string fcvs = 2;
  }

  // Required. Available feature compatibility versions list for all Mongodb versions
  repeated FCV available_fcvs = 9;
}

message NameValidator {
  // Required. Regex for valid name
  string regexp = 1;
  // Required. Minimum length in symbols
  int64 min = 2;
  // Required. Maximum length in symbols
  int64 max = 3;
  // List of banned values
  repeated string blacklist = 4;
}

message BillingMetric {
  // ID of the folder for metric
  string folder_id = 1;
  // Billing metric schema spec
  string schema = 2;
  // Billing tags
  map<string, google.protobuf.Any> tags = 3;
}

message BillingEstimateResponse {
  // List of billing metrics of estimation
  repeated BillingMetric metrics = 1;
}

message BillingEstimateCreateHostsRequest {
  message BillingHostSpecs {
    HostSpec host = 1;
    Resources resources = 2;
  }

  string folder_id = 1;
  repeated BillingHostSpecs billing_host_specs = 2;
}

message ClustersStats {
  // clusters count in folder
  int64 clusters_count = 1;
}
