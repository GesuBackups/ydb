syntax = "proto3";

package yandex.cloud.priv.mdb.kafka.v1.inner;

import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/kafka/v1/inner;kafka_inner";
option java_outer_classname = "KFITS";

service TopicService {
  rpc List (ListTopicsRequest) returns (ListTopicsResponse) {
  }

  rpc Update (UpdateTopicsRequest) returns (UpdateTopicsResponse) {
  }
}

message ListTopicsRequest {
  // ID of the Apache Kafka cluster to list topics in.
  // To get the cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListTopicsResponse {
  // False if there's task in progress or cluster is in ERROR state. In this case revision and topics fields
  // are not filled because their values may change. Topic sync agent should repeat List request until the value
  // of this field becomes equal True.
  bool update_allowed = 1;

  // Current revision of the cluster. Topic sync agent should pass this value along with the following Update request.
  int64 revision = 2;

  // List of JSON-encoded topics.
  repeated string topics = 3;

  // List of topic config properties known to Cloud API
  repeated string known_topic_config_properties = 4;
}

message UpdateTopicsRequest {
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The revision that was received with previous List request.
  int64 revision = 2;

  // List of JSON-encoded updated and created topics.
  repeated string changed_topics = 3;

  // List of names of topics that were deleted.
  repeated string deleted_topics = 4;
}

message UpdateTopicsResponse {
  // Update may not be accepted if revision is outdated (there's pillar of newer revision on server) or
  // there's task in progress or cluster is in ERROR state
  bool update_accepted = 1;
}
