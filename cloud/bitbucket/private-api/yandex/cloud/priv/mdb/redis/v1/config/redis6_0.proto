syntax = "proto3";

package yandex.cloud.priv.mdb.redis.v1.config;

import "google/protobuf/wrappers.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/sensitive.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/redis/v1/config;redis";

// Options and structure of `RedisConfig` reflects Redis configuration file
// parameters.
message RedisConfig6_0 {
  enum MaxmemoryPolicy {
    MAXMEMORY_POLICY_UNSPECIFIED = 0;
    VOLATILE_LRU = 1;
    ALLKEYS_LRU = 2;
    VOLATILE_LFU = 3;
    ALLKEYS_LFU = 4;
    VOLATILE_RANDOM = 5;
    ALLKEYS_RANDOM = 6;
    VOLATILE_TTL = 7;
    NOEVICTION = 8;
  }

  message ClientOutputBufferLimit {
    enum MemoryUnit {
      MEMORY_UNIT_UNSPECIFIED = 0;
      BYTES = 1;
      KILOBYTES = 2;
      MEGABYTES = 3;
      GIGABYTES = 4;
    }

    google.protobuf.Int64Value hard_limit = 1 [(value) = ">=0"];
    MemoryUnit hard_limit_unit = 2;
    google.protobuf.Int64Value soft_limit = 3 [(value) = ">=0"];
    MemoryUnit soft_limit_unit = 4;
    google.protobuf.Int64Value soft_seconds = 5 [(value) = ">=0"];
  }

  // Redis behavior when maxmemory is reached.
  MaxmemoryPolicy maxmemory_policy = 1;

  // Close the connection after a client is idle for N seconds.
  google.protobuf.Int64Value timeout = 2 [(value) = ">0"];

  // Required.
  string password = 3 [(length) = "8-128", (sensitive) = true];

  // Number of database buckets on a single redis-server process.
  google.protobuf.Int64Value databases = 4 [(value) = ">0"];

  // Threshold for logging slow requests to server in microseconds (log only slower than it).
  google.protobuf.Int64Value slowlog_log_slower_than = 5 [(value) = ">=0"];

  // Max slow requests number to log.
  google.protobuf.Int64Value slowlog_max_len = 6 [(value) = ">=0"];

  // String setting for pub\sub functionality; subset of KEg$lshzxeAtm.
  string notify_keyspace_events = 7 [(length) = "<=13", (sensitive) = true];

  // Redis connection output buffers limits for pubsub operations.
  ClientOutputBufferLimit client_output_buffer_limit_pubsub = 8;

  // Redis connection output buffers limits for clients.
  ClientOutputBufferLimit client_output_buffer_limit_normal = 9;
}

message RedisConfigSet6_0 {
  RedisConfig6_0 effective_config = 1;
  RedisConfig6_0 user_config = 2;
  RedisConfig6_0 default_config = 3;
}
