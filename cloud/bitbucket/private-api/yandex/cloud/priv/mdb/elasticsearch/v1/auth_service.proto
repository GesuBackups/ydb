syntax = "proto3";

package yandex.cloud.priv.mdb.elasticsearch.v1;

import "google/api/annotations.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/auth.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/elasticsearch/v1;elasticsearch";
option java_outer_classname = "PESAS";

// A set of methods for managing Elasticsearch Authentication resources.
service AuthService {

  rpc ListProviders (ListAuthProvidersRequest) returns (ListAuthProvidersResponse) {
    option (google.api.http) = {get: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers"};
  }

  rpc GetProvider (GetAuthProviderRequest) returns (AuthProvider) {
    option (google.api.http) = {get: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers/{name}"};
  }

  rpc AddProviders (AddAuthProvidersRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "AddAuthProvidersMetadata"
      response: "AuthProviders"
    };
  }

  // Replace auth providers list
  rpc UpdateProviders (UpdateAuthProvidersRequest) returns (operation.Operation) {
    option (google.api.http) = {put: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers" body: "*"};
    option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateAuthProvidersMetadata"
      response: "AuthProviders"
    };
  }

  rpc DeleteProviders (DeleteAuthProvidersRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteAuthProvidersMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateProvider (UpdateAuthProviderRequest) returns (operation.Operation) {
    option (google.api.http) = {put: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers/{name}" body: "*"};
    option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateAuthProvidersMetadata"
      response: "AuthProviders"
    };
  }

  rpc DeleteProvider (DeleteAuthProviderRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/mdb/elasticsearch/v1/clusters/{cluster_id}/auth/providers/{name}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteAuthProvidersMetadata"
      response: "google.protobuf.Empty"
    };
  }

}


message ListAuthProvidersRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListAuthProvidersResponse {
  // List of auth providers of the Elasticsearch cluster.
  repeated AuthProvider providers = 1;
}

message GetAuthProviderRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the provider to delete.
  string name = 2 [(required) = true, (length) = "<=50", (pattern) = "[a-z][a-z0-9_-]*"];
}

message AddAuthProvidersRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. List of providers to add.
  repeated AuthProvider providers = 2 [(size) = "<=10"];
}

message UpdateAuthProvidersRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. List of providers to set.
  repeated AuthProvider providers = 2 [(size) = "<=10"];
}

message DeleteAuthProvidersRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. List of providers to delete.
  repeated string provider_names = 2 [(size) = "<=10", (length) = "<=50", (pattern) = "[a-z][a-z0-9_-]*"];
}

message UpdateAuthProviderRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the provider to update.
  string name = 2 [(required) = true, (length) = "<=50", (pattern) = "[a-z][a-z0-9_-]*"];

  // Required. New provider defenition.
  AuthProvider provider = 3 [(required) = true];
}

message DeleteAuthProviderRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the provider to delete.
  string name = 2 [(required) = true, (length) = "<=50", (pattern) = "[a-z][a-z0-9_-]*"];
}

message AddAuthProvidersMetadata {
  // ID of the ElasticSearch cluster.
  string cluster_id = 1;

  // Names of the providers being added.
  repeated string names = 2;
}

message UpdateAuthProvidersMetadata {
  // ID of the ElasticSearch cluster.
  string cluster_id = 1;

  // Names of the providers being added.
  repeated string names = 2;
}

message DeleteAuthProvidersMetadata {
  // ID of the ElasticSearch cluster.
  string cluster_id = 1;

  // Names of the providers being removed.
  repeated string names = 2;
}
