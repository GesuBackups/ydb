syntax = "proto3";

package yandex.cloud.priv.mdb.elasticsearch.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/sensitive.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/cluster.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/config/elasticsearch.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/user.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/backup.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/maintenance.proto";
import "yandex/cloud/priv/mdb/elasticsearch/v1/extension.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/mdb/elasticsearch/v1;elasticsearch";
option java_outer_classname = "PESCS";

// A set of methods for managing ElasticSearch clusters.
service ClusterService {
    // Returns the specified ElasticSearch Cluster resource.
    rpc Get (GetClusterRequest) returns (Cluster) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters/{cluster_id}" };
    }

    // Retrieves the list of ElasticSearch clusters.
    rpc List (ListClustersRequest) returns (ListClustersResponse) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters" };
    }

    // Creates an ElasticSearch cluster.
    rpc Create (CreateClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters" body: "*" };
      option (yandex.cloud.api.operation) = {
        metadata: "CreateClusterMetadata"
        response: "Cluster"
      };
    }

    // Updates the specified ElasticSearch cluster.
    rpc Update (UpdateClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { patch: "/mdb/elasticsearch/v1/clusters/{cluster_id}" body: "*" };
      option (yandex.cloud.api.operation) = {
        metadata: "UpdateClusterMetadata"
        response: "Cluster"
      };
    }

    // Deletes the specified ElasticSearch cluster.
    rpc Delete (DeleteClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { delete: "/mdb/elasticsearch/v1/clusters/{cluster_id}" };
      option (yandex.cloud.api.operation) = {
        metadata: "DeleteClusterMetadata"
        response: "google.protobuf.Empty"
      };
    }

    // Create a backup for the specified ElasticSearch cluster.
    rpc Backup (BackupClusterRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}:backup" };
        option (yandex.cloud.api.operation) = {
          metadata: "BackupClusterMetadata"
          response: "Cluster"
        };
    }

    // Creates a new ElasticSearch cluster from the specified backup.
    rpc Restore (RestoreClusterRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters:restore" body: "*" };
        option (yandex.cloud.api.operation) = {
          metadata: "RestoreClusterMetadata"
          response: "Cluster"
        };
    }

    // Reschedule planned maintenance operation.
    rpc RescheduleMaintenance (RescheduleMaintenanceRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}:rescheduleMaintenance" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "RescheduleMaintenanceMetadata"
            response: "Cluster"
        };
    }

    // Returns the list of available backups for the specified Elasticsearch cluster.
    rpc ListBackups (ListClusterBackupsRequest) returns (ListClusterBackupsResponse) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters/{cluster_id}/backups" };
    }

    // Moves the specified ElasticSearch cluster to the specified folder.
    rpc Move (MoveClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}:move" body: "*" };
      option (yandex.cloud.api.operation) = {
        metadata: "MoveClusterMetadata"
        response: "Cluster"
      };
    }

    // Start the specified ElasticSearch cluster.
    rpc Start (StartClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}:start" };
      option (yandex.cloud.api.operation) = {
        metadata: "StartClusterMetadata"
        response: "Cluster"
      };
    }

    // Stop the specified ElasticSearch cluster.
    rpc Stop (StopClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}:stop" };
      option (yandex.cloud.api.operation) = {
        metadata: "StopClusterMetadata"
        response: "Cluster"
      };
    }

    // Retrieves logs for the specified ElasticSearch cluster.
    // See the [Logs](/yandex-mdb-guide/concepts/logs.html) section in the developers guide for detailed logs description.
    rpc ListLogs (ListClusterLogsRequest) returns (ListClusterLogsResponse) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters/{cluster_id}:logs" };
    }

    // Same as ListLogs but using server-side streaming. Also allows for 'tail -f' semantics.
    rpc StreamLogs (StreamClusterLogsRequest) returns (stream StreamLogRecord) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters/{cluster_id}:stream_logs" };
      option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
    }

    // Retrieves the list of Operation resources for the specified cluster.
    rpc ListOperations (ListClusterOperationsRequest) returns (ListClusterOperationsResponse) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters/{cluster_id}/operations" };
    }

    // Retrieves a list of hosts for the specified cluster.
    rpc ListHosts (ListClusterHostsRequest) returns (ListClusterHostsResponse) {
      option (google.api.http) = { get: "/mdb/elasticsearch/v1/clusters/{cluster_id}/hosts" };
    }

    // Creates new hosts.
    rpc AddHosts (AddClusterHostsRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}/hosts:batchCreate" body: "*" };
        option (yandex.cloud.api.operation) = {
          metadata: "AddClusterHostsMetadata"
          response: "google.protobuf.Empty"
        };
    }

    // Deletes specified hosts.
    rpc DeleteHosts (DeleteClusterHostsRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/mdb/elasticsearch/v1/clusters/{cluster_id}/hosts:batchDelete" body: "*"};
        option (yandex.cloud.api.operation) = {
          metadata: "DeleteClusterHostsMetadata"
          response: "google.protobuf.Empty"
        };
        option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
    }

}

message GetClusterRequest {
    // ID of the ElasticSearch cluster to return.
    // To get the cluster ID use a [ClusterService.List] request.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListClustersRequest {
    // ID of the folder to list ElasticSearch clusters in.
    // To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // The maximum number of results per page to return. If the number of available
    // results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
    // that can be used to get the next page of results in subsequent list requests.
    int64 page_size = 2 [(value) = "<=1000"];

    // Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
    // returned by a previous list request.
    string page_token = 3 [(length) = "<=100"];

    // A filter expression that filters resources listed in the response.
    // The expression must specify:
    // 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
    // 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
    // 3. The value. Must be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.
    string filter = 4 [(length) = "<=1000"];
}

message ListClustersResponse {
    // List of ElasticSearch clusters.
    repeated Cluster clusters = 1;

    // This token allows you to get the next page of results for list requests. If the number of results
    // is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
    // for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
    // list request will have its own [next_page_token] to continue paging through the results.
    string next_page_token = 2;
}

message CreateClusterRequest {
    // ID of the folder to create the ElasticSearch cluster in.
    string folder_id = 1 [(required) = true, (length) = "<=50"];

    // Name of the ElasticSearch cluster. The name must be unique within the folder.
    string name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

    // Description of the ElasticSearch cluster.
    string description = 3 [(length) = "<=256"];

    // Custom labels for the ElasticSearch cluster as `` key:value `` pairs. Maximum 64 per resource.
    // For example, "project": "mvp" or "source": "dictionary".
    map<string, string> labels = 4 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

    // Deployment environment of the ElasticSearch cluster.
    Cluster.Environment environment = 5;

    // Configuration and resources for hosts that should be created for the ElasticSearch cluster.
    ConfigSpec config_spec = 6 [(required) = true];

    repeated UserSpec user_specs = 8; // optional, depricated will be removed in future versions

    // Required. Configuration of ElasticSearch hosts.
    repeated HostSpec host_specs = 9 [(size) = ">0"];

    // ID of the network to create the cluster in.
    string network_id = 10 [(required) = true, (length) = "<=50"];

    // User security groups
    repeated string security_group_ids = 11;

    // ID of the service account used for access to Yandex Object Storage.
    string service_account_id = 12;

    // Deletion Protection inhibits deletion of the cluster
    bool deletion_protection = 13;

    // Window of maintenance operations
    MaintenanceWindow maintenance_window = 14;

    repeated ExtensionSpec extension_specs = 15; // optional
}

message CreateClusterMetadata {
    // ID of the ElasticSearch cluster that is being created.
    string cluster_id = 1;
}

message UpdateClusterRequest {
  // ID of the ElasticSearch Cluster resource to update.
  // To get the ElasticSearch cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Field mask that specifies which fields of the ElasticSearch cluster should be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New description of the ElasticSearch cluster.
  string description = 3 [(length) = "<=256"];

  // Custom labels for the ElasticSearch cluster as `` key:value `` pairs. Maximum 64 per resource.
  // For example, "project": "mvp" or "source": "dictionary".
  //
  // The new set of labels will completely replace the old ones. To add a label, request the current
  // set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
  map<string, string> labels = 4 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // New configuration and resources for hosts in the cluster.
  ConfigSpecUpdate config_spec = 5;

  string name = 6 [(length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

  // User security groups
  repeated string security_group_ids = 7;

  // ID of the service account used for access to Yandex Object Storage.
  string service_account_id = 8;

  // Deletion Protection inhibits deletion of the cluster
  bool deletion_protection = 9;

  // Window of maintenance operations
  MaintenanceWindow maintenance_window = 10;
}

message UpdateClusterMetadata {
  // ID of the ElasticSearch cluster resource that is being updated.
  string cluster_id = 1;
}

message DeleteClusterRequest {
  // ID of the ElasticSearch cluster to delete.
  // To get the ElasticSearch cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteClusterMetadata {
  // ID of the ElasticSearch cluster that is being deleted.
  string cluster_id = 1;
}

message ListClusterLogsRequest {
  // ID of the ElasticSearch cluster to request logs for.
  // To get the ElasticSearch cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Columns from the logs table to request.
  // If no columns are specified, entire log records are returned.
  repeated string column_filter = 2;

  // Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp from_time = 3;

  // End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp to_time = 4;

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterLogsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 5 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListClusterLogsResponse.next_page_token] returned by a previous list request.
  string page_token = 6 [(length) = "<=100"];

  // Always return `next_page_token`, even if current page is empty.
  bool always_next_page_token = 7;

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname] field.
  // 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
  // 3. The value. Must be 1-63 characters long and match the regular expression `^[a-z0-9.-]{1,61}$`.
  // Examples of a filter: `message.hostname='node1.db.cloud.yandex.net'`
  string filter = 8 [(length) = "<=1000"];

  // Type of the service to request logs about.
  ServiceType service_type = 9;

  enum ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0;
    ELASTICSEARCH = 1;
    KIBANA = 2;
  }

}

message LogRecord {
  // Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp timestamp = 1;

  // Contents of the log record.
  map<string, string> message = 2;
}

message ListClusterLogsResponse {
  // Requested log records.
  repeated LogRecord logs = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  // This value is interchangeable with `next_record_token` from StreamLogs method.
  string next_page_token = 2;
}

message StreamLogRecord {
  // One of the requested log records.
  LogRecord record = 1;

  // This token allows you to continue streaming logs starting from the exact
  // same record. To continue streaming, specify value of `next_record_token`
  // as value for `record_token` parameter in the next StreamLogs request.
  // This value is interchangeable with `next_page_token` from ListLogs method.
  string next_record_token = 2 [(sensitive) = false];
}

message StreamClusterLogsRequest {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Columns from logs table to get in the response.
  repeated string column_filter = 2;

  // Start timestamp for the logs request.
  google.protobuf.Timestamp from_time = 3;

  // End timestamp for the logs request.
  // If this field is not set, all existing logs will be sent and then the new ones as
  // they appear. In essence it has 'tail -f' semantics.
  google.protobuf.Timestamp to_time = 4;

  // Record token. Set `record_token` to the `next_record_token` returned by a previous StreamLogs
  // request to start streaming from next log record.
  string record_token = 5 [(length) = "<=100", (sensitive) = false];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently filtering can be applied to the [LogRecord.logs.hostname] field.
  // 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
  // 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
  // Examples of a filter: `message.hostname='node1.db.cloud.yandex.net'`
  string filter = 6 [(length) = "<=1000"];

  // Type of the service to request logs about.
  ServiceType service_type = 7;

  enum ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0;
    ELASTICSEARCH = 1;
    KIBANA = 2;
  }
}

message ListClusterOperationsRequest {
  // ID of the ElasticSearch cluster resource to list operations for.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterOperationsResponse {
  // List of Operation resources for the specified ElasticSearch cluster.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterHostsRequest {
  // ID of the ElasticSearch cluster.
  // To get the ElasticSearch cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterHostsResponse {
  // List of Host resources.
  repeated Host hosts = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message MoveClusterRequest {
  // ID of the ElasticSearch cluster to move.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
  // ID of the destination folder.
  string destination_folder_id = 2 [(required) = true, (length) = "<=50"];
}

message MoveClusterMetadata {
  // ID of the ElasticSearch cluster being moved.
  string cluster_id = 1;
  // ID of the source folder.
  string source_folder_id = 2;
  // ID of the destnation folder.
  string destination_folder_id = 3;
}

message StartClusterRequest {
  // Required. ID of the ElasticSearch cluster to start.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StartClusterMetadata {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1;
}

message StopClusterRequest {
  // Required. ID of the ElasticSearch cluster to stop.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StopClusterMetadata {
  // Required. ID of the ElasticSearch cluster.
  string cluster_id = 1;
}

message HostSpec {
    // ID of the availability zone.
    string zone_id = 1 [(length) = "<=50"];

    string subnet_id = 2 [(length) = "<=50"];

    bool assign_public_ip = 3;

    Host.Type type = 4 [(required) = true];

    string shard_name = 5 [(length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];
}

message ElasticsearchSpec {
    message DataNode {
        oneof config {
            config.ElasticsearchConfig7 elasticsearch_config_7 = 1 [json_name="elasticsearchConfig_7"];
        }
        // Resources allocated to data node hosts.
        Resources resources = 2;
    }

    message MasterNode {
        // Resources allocated to master node hosts.
        Resources resources = 1;
    }

    DataNode data_node = 1;
    MasterNode master_node = 2;

    // Cluster wide plugins
    repeated string plugins = 3 [(length) = "<=50"];
}

message ConfigSpec {
    // ElasticSearch version.
    string version = 1; // No formal validation, a list of supported versions should suffice.

    ElasticsearchSpec elasticsearch_spec = 2;

    // ElasticSearch edition.
    string edition = 3;

    // ElasticSearch admin password.
    string admin_password = 4 [(required) = true, (sensitive) = true];

    // Access policy for external services.
    Access access = 18;
}

message ConfigSpecUpdate {
    // ElasticSearch version.
    string version = 1; // No formal validation, a list of supported versions should suffice.

    ElasticsearchSpec elasticsearch_spec = 2;

    // ElasticSearch edition.
    string edition = 3;

    // ElasticSearch admin password.
    string admin_password = 4 [(sensitive) = true];

    // Access policy for external services.
    Access access = 18;
}

message BackupClusterRequest {
    // Required. ID of the ElasticSearch cluster to back up.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message BackupClusterMetadata {
    // ID of the ElasticSearch cluster.
    string cluster_id = 1;
}

message RestoreClusterRequest {
    // Required. ID of the backup to restore from.
    string backup_id = 1 [(required) = true];

    // Name of the ElasticSearch cluster. The name must be unique within the folder.
    string name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

    // Description of the ElasticSearch cluster.
    string description = 3 [(length) = "<=256"];

    // Custom labels for the ElasticSearch cluster as `` key:value `` pairs. Maximum 64 per resource.
    // For example, "project": "mvp" or "source": "dictionary".
    map<string, string> labels = 4 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

    // Deployment environment of the ElasticSearch cluster.
    Cluster.Environment environment = 5;

    // Configuration and resources for hosts that should be created for the ElasticSearch cluster.
    ConfigSpec config_spec = 6 [(required) = true];

    // Required. Configuration of ElasticSearch hosts.
    repeated HostSpec host_specs = 9 [(size) = ">0"];

    // ID of the network to create the cluster in.
    string network_id = 10 [(required) = true, (length) = "<=50"];

    // User security groups
    repeated string security_group_ids = 11;

    // ID of the service account used for access to Yandex Object Storage.
    string service_account_id = 12;

    // Deletion Protection inhibits deletion of the cluster
    bool deletion_protection = 13;

    // ID of the folder to create the ElasticSearch cluster in.
    string folder_id = 14 [(required) = true, (length) = "<=50"];

    // Window of maintenance operations
    MaintenanceWindow maintenance_window = 15;

    repeated ExtensionSpec extension_specs = 16; // optional  
}

message RestoreClusterMetadata {
    // Required. ID of the new ElasticSearch cluster.
    string cluster_id = 1;

    // Required. ID of the backup used for recovery.
    string backup_id = 2;
}

message RescheduleMaintenanceRequest {
    // Required. ID of the Elasticsearch cluster to maintenance reschedule.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    enum RescheduleType {
        RESCHEDULE_TYPE_UNSPECIFIED = 0;
        IMMEDIATE = 1;
        NEXT_AVAILABLE_WINDOW = 2;
        SPECIFIC_TIME = 3;
    }
    // Required. The type of reschedule request.
    RescheduleType reschedule_type = 2 [(required) = true];

    // The time for SPECIFIC_TIME reschedule. Limited by two weeks since first time scheduled.
    google.protobuf.Timestamp delayed_until = 3;
}

message RescheduleMaintenanceMetadata {
    // Required. ID of the Elasticsearch cluster.
    string cluster_id = 1;

    // Required. New time of the planned maintenance. Can be in the past for rescheduled to "IMMEDIATE".
    google.protobuf.Timestamp delayed_until = 4;
}

message AddClusterHostsRequest {
    // Required. ID of the ElasticSearch cluster.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Required.
    repeated HostSpec host_specs = 2 [(size) = ">0"];
}

message AddClusterHostsMetadata {
    // Required. ID of the ElasticSearch cluster.
    string cluster_id = 1;

    // Required. The name of adding host.
    repeated string host_names = 2;
}

message DeleteClusterHostsRequest {
    // Required. ID of the ElasticSearch cluster.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // Required. Name of the host to delete.
    repeated string host_names = 2 [(size) = ">0", (length) = "<=253"];
}

message DeleteClusterHostsMetadata {
    // Required. ID of the ElasticSearch cluster.
    string cluster_id = 1;

    // Required. The name of deleting host.
    repeated string host_names = 2;
}

message ListClusterBackupsRequest {
  // Required. ID of the Elasticsearch cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListClusterBackups requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListClusterBackups
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterBackupsResponse {
  // Requested list of backups.
  repeated Backup backups = 1;

  // This token allows you to get the next page of results for ListClusterBackups requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListClusterBackups request. Subsequent ListClusterBackups
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}
