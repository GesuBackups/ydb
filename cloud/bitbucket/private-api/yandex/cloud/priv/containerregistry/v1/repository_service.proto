syntax = "proto3";

package yandex.cloud.priv.containerregistry.v1;

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/access/access.proto";
import "yandex/cloud/priv/containerregistry/v1/repository.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/containerregistry/v1;containerregistry";
option java_outer_classname = "PIRS";

service RepositoryService {

    rpc Get (GetRepositoryRequest) returns (Repository);

    rpc GetByName (GetRepositoryByNameRequest) returns (Repository);

    rpc List (ListRepositoriesRequest) returns (ListRepositoriesResponse);

    rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse);

    rpc Upsert (UpsertRepositoryRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
          metadata: "UpsertRepositoryMetadata"
          response: "Repository"
        };
    };

    rpc Delete (DeleteRepositoryRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
          metadata: "DeleteRepositoryMetadata"
          response: "google.protobuf.Empty"
        };
    }

    rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "access.SetAccessBindingsMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "access.UpdateAccessBindingsMetadata"
            response: "google.protobuf.Empty"
        };
    }
}


message GetRepositoryRequest {
    string repository_id = 1 [(required) = true, (length) = "<=50"];
}

message GetRepositoryByNameRequest {
    string repository_name = 1 [(required) = true, (pattern) = "[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))*"];
}

message ListRepositoriesRequest {
    string registry_id = 1 [(length) = "<=50"];
    string folder_id = 6 [(length) = "<=50"];

    int64 page_size = 2 [(value) = "0-1000"];
    string page_token = 3 [(length) = "<=100"];
    string filter = 4 [(length) = "<=1000"];
    string order_by = 5 [(length) = "<=100"];
}

message ListRepositoriesResponse {
    repeated Repository repositories = 1;
    string next_page_token = 2;
}

message UpsertRepositoryRequest {
    string name = 1 [(pattern) = "[a-z0-9]+(?:[._-][a-z0-9]+)*(/([a-z0-9]+(?:[._-][a-z0-9]+)*))*"];
}

message UpsertRepositoryMetadata {
    string repository_id = 1;
}

message DeleteRepositoryRequest {
    string repository_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteRepositoryMetadata {
    string repository_id = 1;
}
