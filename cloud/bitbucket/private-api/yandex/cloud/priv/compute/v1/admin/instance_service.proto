syntax = "proto3";

package yandex.cloud.priv.compute.v1.admin;

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/compute/v1/validation.proto";
import "yandex/cloud/priv/compute/v1/instance.proto";
import "yandex/cloud/priv/operation/operation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/compute/v1/admin;admin";

service InstanceService {
  // List all instances for specified availability zone
  rpc List(ListInstancesRequest) returns (ListInstancesResponse) ;

  // Update hypervisor for specified instance
  rpc UpdateHypervisor (UpdateInstanceHypervisorRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateInstanceHypervisorMetadata"
      response: "yandex.cloud.priv.compute.v1.Instance"
    };
  }
}

message ListInstancesRequest {
  string zone_id = 1 [(valid) = "zone_id", (required) = true];

  int64 page_size = 2 [(valid) = "page_size"];
  string page_token = 3 [(valid) = "page_token"];
}

message ListInstancesResponse {
  repeated yandex.cloud.priv.compute.v1.Instance instances = 1;
  string next_page_token = 2;
}

message UpdateInstanceHypervisorRequest {
  enum HypervisorComponent {
    option (cloud.api.tools.enumeration).lint_skip.unspecified_value = true;
    QEMU = 0;
    NBS_PLUGIN = 1;
  }
  enum DiskBackend {
    DISK_BACKEND_UNSPECIFIED = 0;
    VHOST_VIRTIO = 1;
    NBS_PLUGIN_UNIX_SOCKET = 2;

  }
  string instance_id = 1 [(valid) = "resource_id", (required) = true];
  HypervisorComponent hypervisor_component = 2;
  string min_version = 3;
  bool force = 4;
  DiskBackend disk_backend = 5;
}

message UpdateInstanceHypervisorMetadata {
  string instance_id = 1;
}
