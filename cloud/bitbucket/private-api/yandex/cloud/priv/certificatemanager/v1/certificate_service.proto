syntax = "proto3";

package yandex.cloud.priv.certificatemanager.v1;

import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/sensitive.proto";
import "yandex/cloud/priv/certificatemanager/v1/certificate.proto";
import "yandex/cloud/priv/reference/reference.proto";
import "yandex/cloud/priv/access/access.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/certificatemanager/v1;certificatemanager";
option java_outer_classname = "PCS";

service CertificateService {

  rpc Get (GetCertificateRequest) returns (Certificate);

  rpc List (ListCertificatesRequest) returns (ListCertificatesResponse);

  rpc ListVersions (ListVersionsRequest) returns (ListVersionsResponse);

  rpc Create (CreateCertificateRequest) returns (operation.Operation) {
      option (yandex.cloud.api.operation) = {
      metadata: "CreateCertificateMetadata"
      response: "Certificate"
    };
  }

  rpc Update (UpdateCertificateRequest) returns (operation.Operation) {
      option (yandex.cloud.api.operation) = {
      metadata: "UpdateCertificateMetadata"
      response: "Certificate"
    };
  }

  rpc Delete (DeleteCertificateRequest) returns (operation.Operation) {
      option (yandex.cloud.api.operation) = {
      metadata: "DeleteCertificateMetadata"
      response: "Certificate"
    };
  }

  rpc RequestNew (RequestNewCertificateRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "RequestNewCertificateMetadata"
      response: "Certificate"
    };
  }

  rpc Renew (RenewCertificateRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "RenewCertificateMetadata"
      response: "Certificate"
    };
  }

  rpc ListReferences (ListCertificateReferencesRequest) returns (ListCertificateReferencesResponse);

  rpc UpdateReferences (UpdateCertificateReferencesRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateCertificateReferencesMetadata"
      response: "UpdateCertificateReferencesResponse"
    };
  }

  rpc ListOperations (ListCertificateOperationsRequest) returns (ListCertificateOperationsResponse);

  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse);

  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

enum CertificateView {
  option (cloud.api.tools.enumeration).lint_skip.unspecified_value = true;

  BASIC = 0;
  FULL = 1;
}

message GetCertificateRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
  CertificateView view = 2;
}

message ListCertificatesRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "<=1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4;
  string order_by = 5;
  CertificateView view = 6;
}

message ListCertificatesResponse {
  repeated Certificate certificates = 1;
  string next_page_token = 2;
}

message ListVersionsRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "<=1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4;
  string order_by = 5;
}

message ListVersionsResponse {
  repeated Version versions = 1;
  string next_page_token = 2;
}

message CreateCertificateRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string name = 2 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  map<string, string> labels = 3 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  string certificate = 4 [(length) = "<=32768", (sensitive) = true];
  string chain = 5 [(length) = "<=2097152"];
  string private_key = 6 [(required) = true, (length) = "1-524288", (sensitive) = true];
  string kms_key_id = 7 [(length) = "<=50"];
  string description = 8 [(length) = "<=1024"];
  bool deletion_protection = 9;
  repeated reference.Reference references = 100;
}

message RequestNewCertificateRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  string name = 2 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  map<string, string> labels = 3 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  string kms_key_id = 4 [(length) = "<=50"];
  repeated string domains = 5;
  ChallengeType challenge_type = 6;
  CertificateProvider provider = 7;
  string description = 8 [(length) = "<=1024"];
  bool deletion_protection = 9;
  repeated reference.Reference references = 100;
}

message UpdateCertificateRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
  google.protobuf.FieldMask update_mask = 2;
  string name = 3 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  map<string, string> labels = 4 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  string certificate = 5 [(length) = "<=32768", (sensitive) = true];
  string chain = 6 [(length) = "<=2097152"];
  string private_key = 7 [(length) = "<=524288", (sensitive) = true];
  string kms_key_id = 8 [(length) = "<=50"];
  string description = 9 [(length) = "<=1024"];
  bool deletion_protection = 10;
}

message DeleteCertificateRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
}

message RenewCertificateRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
}

message CreateCertificateMetadata {
  string certificate_id = 1;
}

message UpdateCertificateMetadata {
  string certificate_id = 1;
}

message DeleteCertificateMetadata {
  string certificate_id = 1;
}

message RequestNewCertificateMetadata {
  string certificate_id = 1;
}

message RenewCertificateMetadata {
  string certificate_id = 1;
}

message ListCertificateReferencesRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];

  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListCertificateReferencesResponse {
  repeated reference.Reference references = 1;
  string next_page_token = 2;
}

message UpdateCertificateReferencesRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
  repeated reference.Reference reference_additions = 2;
  repeated reference.Reference reference_deletions = 3;
}

message UpdateCertificateReferencesResponse {
}


message UpdateCertificateReferencesMetadata {
}

message ListCertificateOperationsRequest {
  string certificate_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "<=1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListCertificateOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
