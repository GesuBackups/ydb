syntax = "proto3";

package yandex.cloud.priv.vdi.v1.console;

import "yandex/cloud/priv/sensitive.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/vdi/v1/console/desktop.proto";
import "yandex/cloud/priv/vdi/v1/console/user.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/vdi/v1/console;vdi_console";
option java_outer_classname = "PCDS";

service DesktopService {

    rpc Get (GetDesktopRequest) returns (Desktop);

    rpc GetRdpFile (GetRdpFileRequest) returns (RdpFileResponse);

    rpc List (ListDesktopsRequest) returns (ListDesktopsResponse);

    rpc ListOperations (ListDesktopOperationsRequest) returns (ListDesktopOperationsResponse);

    rpc Create (CreateDesktopRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "CreateDesktopMetadata"
            response: "Desktop"
        };
    };

    rpc Delete (DeleteDesktopRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteDesktopMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc GetTmpPassword (GetTmpPasswordRequest) returns (TmpPasswordResponse) {
        option deprecated = true;
    }

    rpc ResetTmpPassword (ResetTmpPasswordRequest) returns (operation.Operation) {
        option deprecated = true;
        option (yandex.cloud.api.operation) = {
            metadata: "ResetTmpPasswordMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);

    rpc Restart(RestartRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteDesktopMetadata"
            response: "google.protobuf.Empty"
        };
    }
}

message GetDesktopRequest {
    string desktop_id = 1 [(required) = true, (length) = "<=50"];
}

message GetRdpFileRequest {
    string desktop_id = 1 [(required) = true, (length) = "<=50"];
    User user = 2 [(required) = false];
}

message RdpFileResponse {
    map<string, string> headers = 1;
    string content = 2;
}

message ListDesktopsRequest {
    // Will go to the v2:
//    string folder_id = 2 [(required) = true, (length) = "<=50"];
    oneof from {
        option (exactly_one) = true;
        string desktop_group_id = 1 [(required) = true, (length) = "<=50"];
        string folder_id = 2 [(required) = true, (length) = "<=50"];
    }

    int64 page_size = 21 [(value) = "0-1000"];
    string page_token = 22 [(length) = "<=100"];
    string filter = 23 [(length) = "<=1000"];
    string order_by = 24 [(length) = "<=100"];
}

message ListDesktopsResponse {
    repeated Desktop desktops = 1;

    string next_page_token = 22;
}

message ListDesktopOperationsRequest {
    // Will go to the v2:
//    string desktop_id = 1 [(required) = true, (length) = "<=50"];
    oneof from {
        option (exactly_one) = true;
        string desktop_id = 1 [(required) = true, (length) = "<=50"];
    }

    int64 page_size = 21 [(value) = "0-1000"];
    string page_token = 22 [(length) = "<=100"];
    string filter = 23 [(length) = "<=1000"];
}

message ListDesktopOperationsResponse {
    repeated operation.Operation operations = 1;

    string next_page_token = 22;
}

message CreateDesktopRequest {
    string desktop_group_id = 3 [(required) = true, (length) = "<=50"];
    string subnet_id = 4 [(required) = false, (length) = "<=50"];
    repeated User users = 23 [(size) = ">0"];
}

message CreateDesktopMetadata {
    string desktop_id = 1;
}

message DeleteDesktopRequest {
    string desktop_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteDesktopMetadata {
    string desktop_id = 1;
}

message GetTmpPasswordRequest {
    option deprecated = true;

    string desktop_id = 1 [(required) = true, (length) = "<=50"];
    User user = 2 [(required) = false];
}

message TmpPasswordResponse {
    option deprecated = true;

    User user = 1;
    string password = 2 [(sensitive) = true, (sensitive_type) = SENSITIVE_REMOVE];
}

message ResetTmpPasswordRequest {
    option deprecated = true;

    string desktop_id = 1 [(required) = true, (length) = "<=50"];
    User user = 2 [(required) = false];
}

message ResetTmpPasswordMetadata {
    option deprecated = true;
    string desktop_id = 1;
    User user = 2;
}

message ResetPasswordRequest {
    string desktop_id = 1 [(required) = true, (length) = "<=50"];
    User user = 2 [(required) = true];
}

message ResetPasswordResponse {
    string password = 1 [(sensitive) = true, (sensitive_type) = SENSITIVE_REMOVE];
}

message RestartRequest {
    string desktop_id = 1 [(required) = true, (length) = "<=50"];
}
