syntax = "proto3";

package yandex.cloud.priv.iam.v1.mfa.console;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/priv/sensitive.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/iam/v1/mfa/totp_profile.proto";
import "yandex/cloud/priv/iam/v1/mfa/hardware/totp_profile.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/iam/v1/mfa/console;mfa_console";
option java_outer_classname = "PCTPS";

// A set of methods for managing hardware and software time-based one time passwords (TOTP).
// The user credentials should be passed in the authorization header.
service TotpProfileService {

  // Verifies user-supplied TOTP value. See https://tools.ietf.org/html/rfc6238#section-5.2 for the reference.
  rpc Verify (VerifyTotpRequest) returns (VerifyTotpResponse) {}

  // Retrieves the list of TOTP-profiles and required MFA-policies for authenticated user
  rpc List (google.protobuf.Empty) returns (ListTotpResponse) {}
}

message VerifyTotpRequest {
  int64 code = 1 [(sensitive) = true, (sensitive_type) = SENSITIVE_REMOVE, (value) = ">0"];
  string totp_profile_id = 2  [(required) = true, (length) = "<=50"];
}

message VerifyTotpResponse {
  VerificationResult result = 1;
  // HTTP-header Set-Cookie for End-User with required per-service cookies, e.g. yc_session.
  // See also yandex/cloud/priv/oauth/v1/session_service.proto specification.
  repeated string set_cookie_header = 2 [(sensitive) = true];
  google.protobuf.Timestamp retry_at = 3;
}

message ListTotpResponse {
  repeated TotpProfileType organization_policy = 1;
  TotpProfile software_profile = 2;
  repeated hardware.TotpProfile hardware_profiles = 3;
}

// Type TOTP profile
enum TotpProfileType {
  TOTP_PROFILE_TYPE_UNSPECIFIED = 0;
  HARDWARE = 1;
  SOFTWARE = 2;
}
