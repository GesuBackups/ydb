syntax = "proto3";

package yandex.cloud.priv.datasphere.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/datasphere/v1/project.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/datasphere/v1;datasphere";
option java_outer_classname = "DSPS";

service ProjectService {
    rpc Create (CreateProjectRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/datasphere/v1/projects" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "CreateProjectMetadata"
            response: "Project"
        };
    }

    rpc Update (UpdateProjectRequest) returns (operation.Operation) {
        option (google.api.http) = { patch: "/datasphere/v1/projects/{project_id}" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateProjectMetadata"
            response: "Project"
        };
    }

    rpc Delete (DeleteProjectRequest) returns (operation.Operation) {
        option (google.api.http) = { delete: "/datasphere/v1/projects/{project_id}" };
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteProjectMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc Open (OpenProjectRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/datasphere/v1/projects/{project_id}:open" };
        option (yandex.cloud.api.operation) = {
            metadata: "OpenProjectMetadata"
            response: "OpenProjectResponse"
        };
    }

    rpc Get (GetProjectRequest) returns (Project) {
        option (google.api.http) = { get: "/datasphere/v1/projects/{project_id}" };
    }

    rpc List (ListProjectsRequest) returns (ListProjectsResponse) {
        option (google.api.http) = { get: "/datasphere/v1/projects" };
    }

    rpc GetUnitBalance (GetUnitBalanceRequest) returns (GetUnitBalanceResponse) {
        option (google.api.http) = { get: "/datasphere/v1/projects/{project_id}:unitBalance" };
    }

    rpc SetUnitBalance (SetUnitBalanceRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = { post: "/datasphere/v1/projects/{project_id}:unitBalance" body: "*" };
    }

    rpc Execute (ProjectExecutionRequest) returns (operation.Operation) {
        option (google.api.http) = { post: "/datasphere/v1/projects/{project_id}:execute" body: "*" };
        option (yandex.cloud.api.operation) = {
            metadata: "ProjectExecutionMetadata"
            response: "ProjectExecutionResponse"
        };
    }

    rpc GetCellOutputs (CellOutputsRequest) returns (CellOutputsResponse) {
        option (google.api.http) = { get: "/datasphere/v1/projects/{project_id}:cellOutputs" };
    }

    rpc GetStateVariables (GetStateVariablesRequest) returns (GetStateVariablesResponse) {
        option (google.api.http) = { get: "/datasphere/v1/projects/{project_id}:stateVariables" };
    }

    rpc GetNotebookMetadata (GetNotebookMetadataRequest) returns (GetNotebookMetadataResponse) {
        option (google.api.http) = { get: "/datasphere/v1/projects/{project_id}:notebookMetadata" };
    }
}

message CreateProjectRequest {
    string folder_id = 1 [(required) = true, (length) = "<=50"];
    string name = 2 [(length) = "<=63", (pattern) = "[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
    string description = 3 [(length) = "<=256"];
    Project.Settings settings = 4;
    Project.Limits limits = 5;
}

message CreateProjectMetadata {
    string project_id = 1;
}

message UpdateProjectRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
    google.protobuf.FieldMask update_mask = 2;

    string name = 3 [(length) = "<=63", (pattern) = "[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
    string description = 4 [(length) = "<=256"];
    Project.Settings settings = 5;
    Project.Limits limits = 6;
}

message UpdateProjectMetadata {
    string project_id = 1;
}

message DeleteProjectRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
}

message DeleteProjectMetadata {
    string project_id = 1;
}

message OpenProjectRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
}

message OpenProjectMetadata {
    string project_id = 1;
}

message OpenProjectResponse {
    string project_url = 1;
    string session_token = 2;
}

message GetProjectRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
}

message ListProjectsRequest {
    string folder_id = 1 [(required) = true, (length) = "<=50"];
    int64 page_size = 2 [(value) = "0-1000"];
    string page_token = 3 [(length) = "<=100"];
}

message ListProjectsResponse {
    repeated Project projects = 1;
    string next_page_token = 2;
}

message GetUnitBalanceRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
}

message GetUnitBalanceResponse {
    google.protobuf.Int64Value unit_balance = 1;
}

message SetUnitBalanceRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
    google.protobuf.Int64Value unit_balance = 2;
}

message ProjectExecutionRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
    oneof target {
        option (exactly_one) = true;

        string notebook_id = 2 [(length) = "<=200"];
        string cell_id = 3 [(length) = "<=200"];
    }
    google.protobuf.Struct input_variables = 4;
    repeated string output_variable_names = 5;
}

message ProjectExecutionMetadata {
    string project_id = 1;
    oneof target {
        option (exactly_one) = true;

        string notebook_id = 2 [(length) = "<=200"];
        string cell_id = 3 [(length) = "<=200"];
    }
}

message ProjectExecutionResponse {
    string checkpoint_id = 1;
    google.protobuf.Struct output_variables = 2;
}

message CellOutputsRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
    string cell_id = 2 [(required) = true, (length) = "<=200"];
    string checkpoint_id = 3;
    google.protobuf.Timestamp start_at = 4;
}

message CellOutputsResponse {
    repeated string outputs = 1;
}

message GetStateVariablesRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
    string notebook_id = 2 [(required) = true, (length) = "<=200"];
    repeated string variable_names = 3;
    string checkpoint_id = 4;
}

message GetStateVariablesResponse {
    google.protobuf.Struct variables = 1;
}

message GetNotebookMetadataRequest {
    string project_id = 1 [(required) = true, (length) = "<=200"];
    string notebook_path = 2 [(required) = true];
}

message GetNotebookMetadataResponse {
    string notebook_id = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp modified_at = 3;
    int64 content_length = 4;
    repeated string cell_ids = 5;
}
