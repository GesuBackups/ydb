syntax = "proto3";

package yandex.cloud.priv.cdn.v1.console;

import "google/protobuf/empty.proto";

import "yandex/cloud/priv/billing/v1/light_metric.proto";
import "yandex/cloud/priv/cdn/v1/console/raw_logs.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cdn/v1/console;cdn_console";

service RawLogsService {
    rpc Activate(ActivateRawLogsRequest) returns (ActivateRawLogsResponse);
    rpc Deactivate(DeactivateRawLogsRequest) returns (google.protobuf.Empty);

    rpc Get(GetRawLogsRequest) returns (GetRawLogsResponse);
    rpc Update(UpdateRawLogsRequest) returns (UpdateRawLogsResponse);

    rpc SimulateBillingMetrics(ActivateRawLogsRequest) returns (billing.v1.ConsoleLightMetricsListResponse);
}

message ActivateRawLogsRequest {
    string resource_id = 1 [(required) = true, (length) = "<=50"];
    RawLogsSettings settings = 2;
}

message ActivateRawLogsResponse {
    RawLogsStatus status = 1;
    RawLogsSettings settings = 2;
}

message GetRawLogsRequest {
    string resource_id = 1 [(required) = true, (length) = "<=50"];
}

message GetRawLogsResponse {
    RawLogsStatus status = 1;
    RawLogsSettings settings = 2;
}

message UpdateRawLogsRequest {
    string resource_id = 1 [(required) = true, (length) = "<=50"];
    RawLogsSettings settings = 2;
}

message UpdateRawLogsResponse {
    RawLogsStatus status = 1;
    RawLogsSettings settings = 2;
}

message DeactivateRawLogsRequest {
    string resource_id = 1 [(required) = true, (length) = "<=50"];
}
