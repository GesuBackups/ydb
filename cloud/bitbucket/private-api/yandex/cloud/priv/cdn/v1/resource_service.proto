syntax = "proto3";

package yandex.cloud.priv.cdn.v1;

import "google/protobuf/wrappers.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/cdn/v1/origin.proto";
import "yandex/cloud/priv/cdn/v1/resource.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cdn/v1;cdn";
option java_outer_classname = "PRSS";

//
// Provider's resources management service.
//
service ResourceService {
  // Get client's CDN resource by resource id.
  rpc Get(GetResourceRequest) returns (Resource);

  // List all client's CDN resources.
  rpc List(ListResourcesRequest) returns (ListResourcesResponse);

  // Create client's CDN resource.
  rpc Create(CreateResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "CreateResourceMetadata"
      response: "Resource"
    };
  }

  // Update of client's CDN resource. (PATCH behavior)
  rpc Update(UpdateResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateResourceMetadata"
      response: "Resource"
    };
  }

  // Delete client's CDN resource.
  rpc Delete(DeleteResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteResourceMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Get Provider's CNAME (edge endpoint) binded to specified folder id.
  // Return UNIMPLEMENTED error, if provider doesn't support CNAME request.
  rpc GetProviderCName(GetProviderCNameRequest) returns (GetProviderCNameResponse);
}

message GetResourceRequest {
  // Requested resourc
  string resource_id = 1 [(required) = true, (length) = "<=50"];
}

message ListResourcesRequest {
  // Folder ID to request listing for.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListResourcesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results,
  // set [page_token] to the [ListResourcesResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListResourcesResponse {
  repeated Resource resources = 1;

  // [next_page_token] token allows you to get the next page of results for list requests.
  // If the number of results is larger than [ListResourcesRequest.page_size], use
  // the [next_page_token] as the value for the [ListResourcesRequest.page_token] query parameter
  // in the next list request. Each subsequent list request will have its own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateResourceRequest {
  message Origin {
    oneof origin_variant {
      // ID of pre-created origin group.
      int64 origin_group_id = 1;
      // Create new Origins group with single source, it's id will be
      // returned in result.
      string origin_source = 2;
      ResourceOriginParams origin_source_params = 3;
    }
  }

  // Folder ID to bind with new resource.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // CDN endpoint CNAME, must be unique among clients's resources.
  string cname = 2 [(required) = true];

  // Specify the origins to be used for CDN resources requests.
  Origin origin = 3 [(required) = true];

  // List of additional CNAMEs.
  SecondaryHostnames secondary_hostnames = 4;

  // Specify the protocol schema to be used in communication with origin .
  OriginProtocol origin_protocol = 5;

  // Flag to create Resource either in active or disabled state.
  // In active state Origins payload could be transmitted from CDN CNAME requests.
  // Default value: true
  google.protobuf.BoolValue active = 6;

  // Resource settings and options to tune CDN edge behavior. Most is unset.
  ResourceOptions options = 7;

  // SSL Certificate options.
  SSLTargetCertificate ssl_certificate = 8;
}

message ResourceOriginParams {
  string source = 1;
  OriginMeta meta = 2;
}

message CreateResourceMetadata {
  // ID of created resource.
  string resource_id = 1 [(required) = true, (length) = "<=50"];
}

message UpdateResourceRequest {
  string resource_id = 1 [(required) = true, (length) = "<=50"];

  google.protobuf.Int64Value origin_group_id = 2;

  SecondaryHostnames secondary_hostnames = 3;

  ResourceOptions options = 4;

  OriginProtocol origin_protocol = 5;

  google.protobuf.BoolValue active = 6;

  SSLTargetCertificate ssl_certificate = 7;
}

message UpdateResourceMetadata {
  // ID of updated resource.
  string resource_id = 1 [(required) = true, (length) = "<=50"];
}


message DeleteResourceRequest {
  // ID of resource to delete.
  string resource_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteResourceMetadata {
  // ID of deleted resource.
  string resource_id = 1;
}

message GetProviderCNameRequest {
  // Folder ID to get provider's CNAME.
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message GetProviderCNameResponse {
  // Provider's CNAME.
  string cname = 1;
  // Owner folder id.
  string folder_id = 2;
}
