syntax = "proto3";

package yandex.cloud.priv.cdn.v1.console;

import "google/protobuf/wrappers.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/priv/cdn/v1/console/origins_group.proto";
import "yandex/cloud/priv/cdn/v1/console/resource.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cdn/v1/console;cdn_console";

//
// Resource management service.
//
service ResourceService {
  // Get client's CDN resource by resource id.
  rpc Get(GetResourceRequest) returns (Resource);

  // List all client's CDN resources.
  rpc List(ListResourcesRequest) returns (ListResourcesResponse);

  // Create client's CDN resource.
  rpc Create(CreateResourceRequest) returns (Resource);

  // Update of client's CDN resource. (PATCH behaviour)
  rpc Update(UpdateResourceRequest) returns (Resource);

  // Delete client's CDN resource.
  rpc Delete(DeleteResourceRequest) returns (operation.Operation) {
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteResourceMetadata"
      response: "google.protobuf.Empty"
    };
  }

  //  Get client GCore CNAME.
  rpc GetClientGCoreCName(GetGCoreCNameRequest) returns (GetGCoreCNameResponse);
}

message GetResourceRequest {
  string resource_id = 2 [(required) = true, (length) = "<=50"];
}

message ListResourcesRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message CreateResourceRequest {
  message Origin {
    oneof origin_variant {
      int64 origin_group_id = 1;
      string origin_source = 2;
      ResourceOriginParams origin_source_params = 3;
    }
  }

  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // CDN endpoint CNAME, must be unique among clients's resources.
  string cname = 2 [(required) = true];

  Origin origin = 3 [(required) = true];

  repeated string secondary_hostnames = 4;

  OriginProtocol origin_protocol = 5;

  // default value: true
  google.protobuf.BoolValue active = 6;

  ResourceOptions options = 7;

  SSLTargetCert ssl_cert = 8;
}

message ResourceOriginParams {
  string source = 1;
  OriginType type = 2;
  OriginMeta meta = 3;
}

message UpdateResourceRequest {
  message SecondaryHostnames {
    repeated string values = 1;
  }

  string resource_id = 1 [(required) = true, (length) = "<=50"];

  google.protobuf.Int64Value origin_group_id = 2;

  SecondaryHostnames secondary_hostnames = 3;

  ResourceOptions options = 4;

  OriginProtocol origin_protocol = 5;

  google.protobuf.BoolValue active = 6;

  SSLTargetCert ssl_cert = 7;
}

message SSLTargetCert {
  SSLCertType type = 1;
  SSLCertData data = 2;
}

message DeleteResourceRequest {
  string resource_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteResourceMetadata {
  string resource_id = 1;
}

message GetGCoreCNameRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message ListResourcesResponse {
  repeated Resource resources = 1;
}

message GetGCoreCNameResponse {
  string cname = 1;
  string folder_id = 2;
}
