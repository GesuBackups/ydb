syntax = "proto3";

package yandex.cloud.priv.cdn.v1;

import "google/protobuf/timestamp.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/cdn/v1;cdn";
option java_outer_classname = "PRS";

// List of secondary (alternative) CNAMEs.
message SecondaryHostnames {
    repeated string values = 1;
}

//
// Resource - representation of providers resource.
//
message Resource {
    // Resource id.
    string id = 1;
    // Folder id.
    string folder_id = 2;
    // CDN endpoint CNAME, must be unique among resources.
    string cname = 3;

    // Creation timestamp.
    google.protobuf.Timestamp created_at = 4;
    // Update timestamp.
    google.protobuf.Timestamp updated_at = 5;

    // Resource state.
    bool active = 6;

    ResourceOptions options = 7;
    repeated string secondary_hostnames = 8;

    int64 origin_group_id = 9;
    string origin_group_name = 10;

    OriginProtocol origin_protocol = 11;

    SSLCertificate ssl_certificate = 12;
}

// This option defines the protocol that will be used by CDN servers to request
// content from an origin source. If not specified, we will use HTTP to connect
// to an origin server.
//
// Possible values are:
//
//     HTTPS - CDN servers will connect to your origin via HTTPS.
//     HTTP  - CDN servers will connect to your origin via HTTP.
//     MATCH - Connection protocol will be chosen automatically (content on the
//             origin source should be available for the CDN both through HTTP and HTTPS).
enum OriginProtocol {
    ORIGIN_PROTOCOL_UNSPECIFIED = 0;
    HTTP = 1;
    HTTPS = 2;
    MATCH = 3;
}

// RewriteFlag defines flag for the Rewrite option.
// Possible values are:
//   last - stops processing of the current set of ngx_http_rewrite_module directives and
//          starts a search for a new location matching changed URI.
//   break - stops processing of the current set of the Rewrite option.
//   redirect - returns a temporary redirect with the 302 code; It is used when a replacement string does not start
//              with "http://", "https://", or "$scheme".
//   permanent - returns a permanent redirect with the 301 code.
enum RewriteFlag {
    REWRITE_FLAG_UNSPECIFIED = 0;
    LAST = 1;
    BREAK = 2;
    REDIRECT = 3;
    PERMANENT = 4;
}

// ResourceOptions major set of various Resource options. 
message ResourceOptions {
    message BoolOption {
        bool enabled = 1;
        bool value = 2;
    }

    message StringOption {
        bool enabled = 1;
        string value = 2;
    }

    message Int64Option {
        bool enabled = 1;
        int64 value = 2;
    }

    message StringsListOption {
        bool enabled = 1;
        repeated string value = 2;
    }

    message StringsMapOption {
        bool enabled = 1;
        map<string,string> value = 2;
    }

    message CachingTimes {
        int64 simple_value = 1;
        map<string,int64> custom_values = 2;
    }

    message EdgeCacheSettings {
        bool enabled = 1;
        oneof values_variant {
            CachingTimes value = 2;
            int64 default_value = 3;
        }
    }

    message StringVariableMapOption {
        message OneofString {
            oneof string_option {
                StringOption value = 1;
                StringsListOption values = 2;
            }
        }

        bool enabled = 1;
        map<string,OneofString> value = 2;
    }

    message QueryParamsOptions {
        oneof query_params_variant {
            BoolOption ignore_query_string = 1;
            StringsListOption query_params_whitelist = 2;
            StringsListOption query_params_blacklist = 3;
        }
    }

    message RedirectOptions {
        oneof redirect_variant {
            BoolOption redirect_http_to_https = 1;
            BoolOption redirect_https_to_http = 2;
        }
    }

    message HostOptions {
        oneof host_variant {
            StringOption host = 1;
            BoolOption forward_host_header = 2;
        }
    }

    message CompressionOptions {
        oneof compression_variant {
            BoolOption fetch_compressed = 1;
            BoolOption gzip_on = 2;
            StringsListOption brotli_compression = 3;
        }
    }

    message RewriteOption {
        bool enabled = 1;
        string body = 2;
        RewriteFlag flag = 3;
    }

    BoolOption disable_cache = 1;

    EdgeCacheSettings edge_cache_settings = 2;
    Int64Option browser_cache_settings = 3;

    StringsListOption cache_http_headers = 4;

    QueryParamsOptions query_params_options = 5;

    BoolOption slice = 6;

    CompressionOptions compression_options = 7;

    RedirectOptions redirect_options = 8;
    HostOptions host_options = 9;

    StringsMapOption static_headers = 10;
    StringsListOption cors = 11;
    StringsListOption stale = 12;
    StringsListOption allowed_http_methods = 13;

    BoolOption proxy_cache_methods_set = 14;
    BoolOption disable_proxy_force_ranges = 15;

    StringsMapOption static_request_headers = 16;
    StringOption custom_server_name = 17;

    BoolOption ignore_cookie = 18;

    RewriteOption rewrite = 19;
}

message SSLTargetCertificate {
    SSLCertificateType type = 1;
    SSLCertificateData data = 2;
}

message SSLCertificate {
    SSLCertificateType type = 1;
    SSLCertificateStatus status = 2;
    SSLCertificateData data = 3;
}

enum SSLCertificateType {
    SSL_CERTIFICATE_TYPE_UNSPECIFIED = 0;
    DONT_USE = 1;
    LETS_ENCRYPT_GCORE = 2;
    CM = 3;
}

enum SSLCertificateStatus {
    SSL_CERTIFICATE_STATUS_UNSPECIFIED = 0;
    READY = 1;
    CREATING = 2;
}

message SSLCertificateData {
    oneof ssl_certificate_data_variant {
        SSLCertificateCMData cm = 1;
    }
}

message SSLCertificateCMData {
    string id = 1;
}
