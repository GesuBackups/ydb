syntax = "proto3";

package yandex.cloud.priv.platform.alb.v1.console;

import "yandex/cloud/priv/platform/alb/v1/backend_group.proto";
import "yandex/cloud/priv/platform/alb/v1/http_router.proto";
import "yandex/cloud/priv/platform/alb/v1/target_group.proto";
import "yandex/cloud/priv/platform/alb/v1/load_balancer.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/platform/alb/v1/console;alb_console";
option java_outer_classname = "PALCS";

service ConsoleService {
  rpc GetFolderStats (GetFolderStatsRequest) returns (FolderStats);
  rpc BulkGetLoadBalancerObjects(BulkGetLoadBalancerObjectsRequest) returns (BulkGetLoadBalancerObjectsResponse);
}

message GetFolderStatsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message FolderStats {
  int64 load_balancers_count = 1;
  int64 http_routers_count = 2;
  int64 backend_groups_count = 3;
  int64 target_groups_count = 4;
}

message BulkGetLoadBalancerObjectsRequest {
  string load_balancer_id = 1 [(required) = true];

  // supported types: ["target_groups", "backend_groups", "http_routers", "target_statuses"]
  repeated string types = 2;
}

message TargetGroupStatus {
  string target_group_id = 1;
  string backend_group_id = 2;
  repeated TargetState target_states = 3;
}

message BulkGetLoadBalancerObjectsResponse {
  repeated TargetGroup target_groups = 1;
  repeated BackendGroup backend_groups = 2;
  repeated HttpRouter http_routers = 3;
  repeated TargetGroupStatus target_statuses = 4;
}
