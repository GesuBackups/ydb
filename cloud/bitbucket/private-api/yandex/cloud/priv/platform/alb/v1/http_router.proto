syntax = "proto3";

package yandex.cloud.priv.platform.alb.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/platform/alb/v1/payload.proto";
import "yandex/cloud/priv/platform/alb/v1/rate_limit.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/platform/alb/v1;alb";
option java_outer_classname = "PALHR";

message HttpRouter {
  // UID generated by ALB.
  string id = 1;

  // Name.
  string name = 2;

  // Comment.
  string description = 3;

  // For auth checks.
  string folder_id = 4;

  // More comments.
  map<string, string> labels = 5;

  // List of rules to match the :authority (Host) header.
  // Only one virtual host with no authority (default match) can be specified.
  repeated VirtualHost virtual_hosts = 6;

  reserved 7, 8; // was https_redirect, https_redirect_port

  // Forbids Delete() calls.
  bool deletion_protection = 9;

  google.protobuf.Timestamp created_at = 10;

  // Contains list of load balancer IDs that refer to this HTTP router.
  repeated string load_balancer_ids = 11;

  RouteOptions route_options = 12;

  string cloud_id = 13;

  // Last time when the HTTP router was modified.
  google.protobuf.Timestamp modified_at = 14;

  // UA or SA that created the HTTP router.
  string created_by = 15;

  // Next field number is 16.
}

message RouteOptions {
  // Apply the following modifications to the request headers.
  repeated HeaderModification modify_request_headers = 1;

  // Apply the following modifications to the response headers.
  repeated HeaderModification modify_response_headers = 2;

  // Note, that if there is no error handler on a route with match /foo,
  // and there is an error handler on a route with prefix match /*,
  // that error handler will apply to the other route.
  // See CLOUD-77681 for details.
  repeated ErrorHandler error_handler = 3 [(size) = "<=1"];
}

message ErrorHandler {
  reserved 1; // Reserved for filter.

  // Override response status.
  int64 status_code = 2;

  // Override response body. Available placeholders:
  // {{error}} - error message e.g. "upstream connect error or disconnect".
  // {{request_id}} - request id.
  // {{trace_id}} - jaeger trace id.
  // {{start_time}} - request start time.
  //
  // NB: the '%' character is not allowed (see CLOUD-96626).
  //
  // Default is "{{error}}\nrequest-id: {{request_id}}\ntrace-id: {{trace_id}}\n".
  //
  // In gRPC this will become the grpc-message header.
  oneof source {
    option (exactly_one) = true;

    Payload text_body = 3;
  }

  // Override content-type header.
  // Default is "text/plain".
  string content_type = 6;

  // Add headers to response.
  // Supports same placeholders as listed above.
  // Default is [{name: "x-server-trace-id", append: "{{trace_id}}"}]
  repeated HeaderModification response_headers = 7;
}

// This is similar to the proposal for Envoy API v3, see
// https://github.com/envoyproxy/envoy/issues/8947#issuecomment-551973469
message HeaderModification {
  // Name of the header.
  string name = 1 [(required) = true];

  // Header values support the following formatters:
  // https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#custom-request-response-headers
  oneof operation {
    // Append string to the header value.
    string append = 2;
    // New value for a header.
    string replace = 3;
    // Remove the header.
    bool remove = 4;
    // New name for a header.
    string rename = 5;
  }
}

message VirtualHost {
  string name = 1 [(required) = true];

  // A list of domains (host/authority header) that will be matched to this
  // virtual host. Wildcard hosts are supported in the form of '*.foo.com' or
  // '*-bar.foo.com'.
  // If not specified, all domains will be matched.
  repeated string authority = 2;

  // Deprecated. Do not use.
  repeated int64 ports = 3;

  // Routes are matched *in-order*. Be careful when adding them to the end.
  // For instance, having http '/' match first makes all other routes unused.
  repeated Route routes = 4;

  // Deprecated, use route_options.modify_request_headers.
  repeated HeaderModification modify_request_headers = 5;

  // Deprecated, use route_options.modify_response_headers.
  repeated HeaderModification modify_response_headers = 6;

  RouteOptions route_options = 7;

  repeated RateLimit rate_limits = 8;
}

// See the doc here
// https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on
enum HttpRetryMode {
  option (cloud.api.tools.enumeration).lint_skip.unspecified_value = true;

  CONNECT_FAILURE = 0;
  GATEWAY_ERROR = 1;
  RESET = 2;
  RETRY_5XX = 3;
  RETRIABLE_4XX = 4;
  REFUSED_STREAM = 5;

  // TODO(iceman): Support this when Envoy 1.12 will be released.
  // RETRIABLE_HEADERS = 6;
}

enum GrpcRetryMode {
  option (cloud.api.tools.enumeration).lint_skip.unspecified_value = true;

  INTERNAL = 0;
  CANCELLED = 1;
  UNAVAILABLE = 2;
  RESOURCE_EXHAUSTED = 3;
  DEADLINE_EXCEEDED = 4;
  GRPC_CONNECT_FAILURE = 5;
}

message HttpRetryPolicy {
  // If not set, retries will not activated.
  int64 num_retries = 1;

  // Specifies the interval between retries.
  google.protobuf.Duration interval = 2;

  // Specifies the conditions under which retry takes place.
  repeated HttpRetryMode retry_on = 3 [(size) = ">0"];
}

message GrpcRetryPolicy {
  // If not set, retries will not activated.
  int64 num_retries = 1;

  // Specifies the interval between retries.
  google.protobuf.Duration interval = 2;

  // Specifies the conditions under which retry takes place.
  repeated GrpcRetryMode retry_on = 3 [(size) = ">0"];
}

message Route {
  string name = 1 [(required) = true];
  oneof route {
    option (exactly_one) = true;
    HttpRoute http = 2;
    GrpcRoute grpc = 3;
  }
  bool disable_external_authorization = 4;
  RouteOptions route_options = 5;
  // TODO: validate (HttpRoute|GrpcRoute).action,
  // because rate limits only apply to HttpRouteAction and GrpcRouteAction,
  // not to redirect or direct response.
  repeated RateLimit rate_limits = 6;
}

message HttpRoute {
  // Checks "/" prefix by default.
  HttpRouteMatch match = 1;

  oneof action {
    option (exactly_one) = true;
    HttpRouteAction route = 2;
    RedirectAction redirect = 3;
    DirectResponseAction direct_response = 4;
  }
}

message GrpcRoute {
  // Checks "/" prefix by default.
  GrpcRouteMatch match = 1;

  oneof action {
    option (exactly_one) = true;
    GrpcRouteAction route = 2;
    GrpcStatusResponseAction status_response = 3;
  }
}

message HttpRouteMatch {
  repeated string http_method = 1;

  // If not set, '/' is assumed.
  StringMatch path = 2;
}

message GrpcRouteMatch {
  // If not set, all services/methods are assumed.
  StringMatch fqmn = 1;
}

message StringMatch {
  oneof match {
    option (exactly_one) = true;
    string exact_match = 1;
    string prefix_match = 2;
    // TODO: regex match??
  }
}

message RedirectAction {
  // Replaces scheme.
  // Will strip the 80 or 443 port, if source scheme is `http` or `https` respectively.
  string replace_scheme = 1;

  // Replaces hostname.
  string replace_host = 2;

  // Replaces port.
  int64 replace_port = 3;

  oneof path {
    // Replace path.
    string replace_path = 4;

    // Replace only matched prefix.
    // Example:
    //    match:    { prefix_match: "/some" }
    //    redirect: { replace_prefix: "/other" }
    // will redirect "/something" to "/otherthing"
    string replace_prefix = 5;
  }

  // Remove query part.
  bool remove_query = 6;

  enum RedirectResponseCode {
    option (cloud.api.tools.enumeration).lint_skip.unspecified_value = true;

    // Moved Permanently HTTP Status Code - 301.
    MOVED_PERMANENTLY = 0;

    // Found HTTP Status Code - 302.
    FOUND = 1;

    // See Other HTTP Status Code - 303.
    SEE_OTHER = 2;

    // Temporary Redirect HTTP Status Code - 307.
    TEMPORARY_REDIRECT = 3;

    // Permanent Redirect HTTP Status Code - 308.
    PERMANENT_REDIRECT = 4;
  }

  // The HTTP status code to use in the redirect response.
  RedirectResponseCode response_code = 7;
}

message DirectResponseAction {
  // HTTP response status.
  int64 status = 1 [(value) = "100-599"];
  // Optional response body.
  Payload body = 2;
}

message GrpcStatusResponseAction {
  enum Status {
    option (cloud.api.tools.enumeration).lint_skip.unspecified_value = true;

    OK = 0;
    INVALID_ARGUMENT = 1;
    NOT_FOUND = 2;
    PERMISSION_DENIED = 3;
    UNAUTHENTICATED = 4;
    UNIMPLEMENTED = 5;
    INTERNAL = 6;
    UNAVAILABLE = 7;
  }

  Status status = 1;
}

message HttpRouteAction {
  string backend_group_id = 1 [(required) = true];

  // If not set, default is 60 seconds.
  google.protobuf.Duration timeout = 2;

  // Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout.
  google.protobuf.Duration idle_timeout = 3;

  oneof host_rewrite_specifier {
    string host_rewrite = 4;
    bool auto_host_rewrite = 5;
  }

  // If not empty, matched path prefix will be replaced by this value.
  string prefix_rewrite = 6;

  // Indicates the retry policy for this route.
  HttpRetryPolicy retry_policy = 7;

  // Deprecated, use upgrade_types instead.
  // Will be removed soon.
  // Allows websocket upgrades.
  bool support_websockets = 8;

  // If set, only specified upgrade types will be allowed.
  // If support_websockets is set, resulting upgrades will be merged together.
  // It is safe to add "websocket" type to upgrade_types list.
  repeated string upgrade_types = 9;
}

message GrpcRouteAction {
  string backend_group_id = 1 [(required) = true];

  // Lower timeout may be specified by the client (using grpc-timeout header).
  // If not set, default is 60 seconds.
  google.protobuf.Duration max_timeout = 2;

  // Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout.
  google.protobuf.Duration idle_timeout = 3;

  oneof host_rewrite_specifier {
    string host_rewrite = 4;
    bool auto_host_rewrite = 5;
  }

  // Indicates the retry policy for this route.
  GrpcRetryPolicy retry_policy = 6;
}
