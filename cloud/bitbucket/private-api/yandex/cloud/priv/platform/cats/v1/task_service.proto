syntax = "proto3";

package yandex.cloud.priv.platform.cats.v1;

import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

import "yandex/cloud/priv/platform/cats/v1/identifier.proto";
import "yandex/cloud/priv/platform/cats/v1/task.proto";
import "yandex/cloud/priv/platform/cats/v1/trace.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/platform/cats/v1;cats";
option java_outer_classname = "PCATSTS";

// TaskService is the main client-facing interface. The users of CATS system
// use it to initiate, watch or cancel tasks.
service TaskService {
  rpc Get(GetTaskRequest) returns (Task);
  rpc Watch(WatchTaskRequest) returns (stream WatchTaskResponse);
  rpc Ensure(EnsureTaskRequest) returns (Task);
  rpc Cancel(CancelTaskRequest) returns (Task);
  rpc Consume(ConsumeTaskRequest) returns (Task);
}

message GetTaskRequest {
  Identifier task_id = 1;
}

message EnsureTaskRequest {
  TaskMeta metadata = 1;
  TaskMeta parent_metadata = 2;

  string description = 3;
  map<string, string> labels = 4;

  google.protobuf.Any params = 5;

  TraceContext trace_context = 6;

  // Extenstion-related
  PreemptionPolicy preemption_policy = 7;
  DelayOptions delay_options = 8;
  SchedulerHints scheduler_hints = 9;
  ExecutionOptions execution_options = 10;

  google.protobuf.Duration retention_period = 11;

  repeated CancelSelector cancel_selectors = 12;
}

message CancelTaskRequest {
  Identifier task_id = 1;
  Identifier canceler_id = 2;
}

message WatchTaskRequest {
  Identifier task_id = 1;
}

message WatchTaskResponse {
  Task task = 1;
  // TODO: optimize fields.
}

message ConsumeTaskRequest {
  Identifier task_id = 1;
}

message RestartTaskRequest {
  Identifier task_id = 1;
}
