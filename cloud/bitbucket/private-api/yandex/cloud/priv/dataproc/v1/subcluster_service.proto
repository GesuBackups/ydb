syntax = "proto3";

package yandex.cloud.priv.dataproc.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/dataproc/v1/common.proto";
import "yandex/cloud/priv/dataproc/v1/subcluster.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/api/operation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/dataproc/v1;dataproc";
option java_outer_classname = "PHSS";

// A set of methods for managing Hadoop clusters.
service SubclusterService {
  // Returns the specified Hadoop subcluster.
  rpc Get (GetSubclusterRequest) returns (Subcluster) {
    option (google.api.http) = { get: "/mdb/hadoop/v1/clusters/{cluster_id}/subclusters/{subcluster_id}" };
  }

  // Retrieves a list of Hadoop subcluster.
  rpc List (ListSubclustersRequest) returns (ListSubclustersResponse) {
    option (google.api.http) = { get: "/mdb/hadoop/v1/clusters/{cluster_id}/subclusters" };
  }

  // Creates a Hadoop subcluster.
  rpc Create (CreateSubclusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/hadoop/v1/clusters/{cluster_id}/subclusters" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateSubclusterMetadata"
      response: "Subcluster"
    };
  }

  // Updates configuration of the specified Hadoop subcluster.
  rpc Update (UpdateSubclusterRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/mdb/hadoop/v1/clusters/{cluster_id}/subclusters/{subcluster_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateSubclusterMetadata"
      response: "Subcluster"
    };
  }

  // Deletes the specified Hadoop subcluster.
  rpc Delete (DeleteSubclusterRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/mdb/hadoop/v1/clusters/{cluster_id}/subclusters/{subcluster_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteSubclusterMetadata"
      response: "google.protobuf.Empty"
    };
  }
}

message GetSubclusterRequest {
  // ID of the Hadoop cluster to get subcluster from.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. ID of the Hadoop subcluster to return.
  string subcluster_id = 2 [(length) = "<=50"];
}

message ListSubclustersRequest {
  // Required. ID of the cluster to list Hadoop subclusters of.
  string cluster_id = 1 [(length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListSubclusters requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListSubclusters
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];

  // String that describes a display filter.
  string filter = 4 [(length) = "<=1000"];
}

message ListSubclustersResponse {
  // Requested list of Hadoop subclusters.
  repeated Subcluster subclusters = 1;

  // This token allows you to get the next page of results for ListSubclusters requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListClusters request. Subsequent ListClusters
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message CreateSubclusterRequest {
  // Required. ID of the cluster to create Hadoop subcluster in.
  string cluster_id = 1 [(length) = "<=50"];

  // Required. Name of the Hadoop subcluster. The name must be unique within the cluster.
  // The name must be 1-63 characters long and match the regular expression `^[a-z]([-a-z0-9]{,61}[a-z0-9])?$`.
  // The name can't be changed after the Hadoop subcluster is created.
  string name = 2 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];

  // Role of hosts in subcluster
  Role role = 3;

  // Recource configuration for hosts in subcluster
  Resources resources = 4;

  string subnet_id = 5 [(length) = "<=50"];

  // Number of hosts in subcluster
  int64 hosts_count = 6 [(value) = ">=1"];

  // Configuration for instance group based subclusters
  AutoscalingConfig autoscaling_config = 7;
}

message CreateSubclusterMetadata {
  // Required. ID of the Hadoop cluster for creating subcluster.
  string cluster_id = 1 [(length) = "<=50"];

  // Required. ID of the creating Hadoop subcluster.
  string subcluster_id = 2[(length) = "<=50"];
}

message UpdateSubclusterRequest {
  // ID of the Hadoop cluster to update subcluster to.
  // To get the Hadoop cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. ID of the Hadoop subcluster.
  string subcluster_id = 2 [(length) = "<=50"];

  google.protobuf.FieldMask update_mask = 3;

  Resources resources = 4;

  string name = 5 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];

  // Number of hosts in subcluster
  int64 hosts_count = 6 [(value) = ">=1"];

  // Assign public ip addresses for all hosts in subcluter.
  bool assign_public_ip = 7;

  // Timeout to gracefully decommission nodes. In seconds. Default value: 0
  int64 decommission_timeout = 8 [(value) = "0-86400"];

  // Configuration for instance group based subclusters
  AutoscalingConfig autoscaling_config = 9;
}

message UpdateSubclusterMetadata {
  // Required. ID of the Hadoop cluster.
  string cluster_id = 1;

  // Required. ID of the Hadoop subcluster to update.
  string subcluster_id = 2 [(length) = "<=50"];
}

message DeleteSubclusterRequest {
  // ID of the Hadoop cluster to delete subcluster from.
  // To get the Hadoop cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. ID of the Hadoop subcluster to delete.
  string subcluster_id = 2 [(length) = "<=50"];

  // Timeout to gracefully decommission nodes. In seconds. Default value: 0
  int64 decommission_timeout = 3 [(value) = "0-86400"];
}

message DeleteSubclusterMetadata {
  // Required. ID of the Hadoop cluster.
  string cluster_id = 1;

  // Required. ID of the deleting Hadoop subcluster.
  string subcluster_id = 2 [(length) = "<=50"];
}
