syntax = "proto3";

package yandex.cloud.priv.dataproc.v1;

import "google/api/annotations.proto";
import "yandex/cloud/priv/dataproc/v1/job.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";
import "yandex/cloud/api/operation.proto";


option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/dataproc/v1;dataproc";
option java_outer_classname = "PHJS";

// A set of methods for managing jobs for Dataproc cluster.
service JobService {
  // Retrieves a list of jobs for Dataproc cluster.
  rpc List (ListJobsRequest) returns (ListJobsResponse) {
    option (google.api.http) = { get: "/mdb/hadoop/v1/clusters/{cluster_id}/jobs" };
  }

  // Creates a job for Dataproc cluster.
  rpc Create (CreateJobRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/hadoop/v1/clusters/{cluster_id}/jobs" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateJobMetadata"
      response: "Job"
    };
  }

  // Returns the specified Dataproc job.
  rpc Get (GetJobRequest) returns (Job) {
    option (google.api.http) = { get: "/mdb/hadoop/v1/clusters/{cluster_id}/jobs/{job_id}" };
  }

  // Returns a log for Dataproc job.
  rpc ListLog (ListJobLogRequest) returns (ListJobLogResponse) {
    option (google.api.http) = { get: "/mdb/hadoop/v1/clusters/{cluster_id}/jobs/{job_id}:logs" };
  }

  // Updates Dataproc job status.
  rpc UpdateStatus (UpdateJobStatusRequest) returns (UpdateJobStatusResponse) {
    option (google.api.http) = { patch: "/mdb/hadoop/v1/clusters/{cluster_id}/jobs/{job_id}:updateStatus" body: "*" };
  }

  // Private method for listing all jobs on dataproc-manager.
  // Retrieves a list of jobs for all clusters.
  rpc GetInternalList (InternalListJobsRequest) returns (ListJobsResponse) {
    option (google.api.http) = { get: "/mdb/hadoop/v1/jobs" };
  }

  // Cancels the specified Dataproc job.
  rpc Cancel (CancelJobRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/mdb/hadoop/v1/clusters/{cluster_id}/jobs/{job_id}:cancel" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateJobMetadata"
      response: "Job"
    };
  }
}

message GetJobRequest {
  // Required. ID of the Dataproc cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. ID of the Dataproc job to return.
  string job_id = 2 [(required) = true, (length) = "<=50"];
}

message ListJobsRequest {
  // Required. ID of the cluster to list Dataproc jobs of.
  string cluster_id = 1 [(length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListJobs requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListJobs
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];

  // String that describes a display filter.
  string filter = 4 [(length) = "<=1000"];
}

message ListJobsResponse {
  // Requested list of Dataproc jobs.
  repeated Job jobs = 1;

  // This token allows you to get the next page of results for ListJobs requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListClusters request. Subsequent ListClusters
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message CreateJobRequest {
  // Required. ID of the cluster to create Dataproc job in.
  string cluster_id = 1 [(length) = "<=50"];

  // Optional. Name of the job.
  string name = 2 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];

  oneof job_spec {
    MapreduceJob mapreduce_job = 3;
    SparkJob spark_job = 4;
    PysparkJob pyspark_job = 5;
    HiveJob hive_job = 6;
  }
}

message CreateJobMetadata {
  // ID of the Dataproc cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // ID of the Dataproc job.
  string job_id = 2 [(length) = "<=50"];
}

message UpdateJobStatusRequest {
  // Required. ID of the Dataproc cluster.
  string cluster_id = 1 [(length) = "<=50"];

  // Required. ID of the Dataproc job to update.
  string job_id = 2 [(length) = "<=50"];

  // Required. New status of the job.
  Job.Status status = 3;

  // Attributes of YARN application.
  ApplicationInfo application_info = 4;
}

message UpdateJobStatusResponse {
  // ID of the Dataproc cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // ID of the Dataproc job.
  string job_id = 2 [(length) = "<=50"];

  // New status of the job.
  Job.Status status = 3;
}

message CancelJobRequest {
  // Required. ID of the Dataproc cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. ID of the Dataproc job to cancel.
  string job_id = 2 [(required) = true, (length) = "<=50"];
}

message InternalListJobsRequest {
  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListJobs requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 1 [(value) = "<=1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListJobs
  // request to get the next page of results.
  string page_token = 2 [(length) = "<=100"];

  // String that describes a display filter.
  string filter = 3 [(length) = "<=1000"];
}

message ListJobLogRequest {
  // Required. ID of the Dataproc cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. ID of the Dataproc job to return.
  string job_id = 2 [(required) = true, (length) = "<=50"];

  // The maximum length of job output per papge that should be returned.
  // If the number of available output is larger tha `page_size`, the service returns
  // a `next_page_token` that can be used to get the next page of job output in subsequent ListLog requests.
  // Acceptable values are 0 to 1048576. Default value: 1048576.
  int64 page_size = 3 [(value) = "<=1048576"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListLog
  // request to get the next page of results.
  string page_token = 4 [(length) = "<=1000"];

}

message ListJobLogResponse {
  // Requested part of Data Proc Job log.
  string content = 1;

  // This token allows you to get the next page of results for ListLog requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListLog request. Subsequent ListLog
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}
