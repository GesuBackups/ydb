syntax = "proto3";

package yandex.cloud.priv.resourcemanager.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/api/tools/options.proto";
import "yandex/cloud/priv/resourcemanager/v1/folder.proto";
import "yandex/cloud/priv/access/access.proto";
import "yandex/cloud/priv/operation/operation.proto";
import "yandex/cloud/priv/validation.proto";

option go_package = "a.yandex-team.ru/cloud/bitbucket/private-api/yandex/cloud/priv/resourcemanager/v1;resourcemanager";
option java_outer_classname = "PFS";

service FolderService {

  rpc Get (GetFolderRequest) returns (Folder) {
    option (google.api.http) = { get: "/yrm/v1/folders/{folder_id}" };
  }

  rpc List (ListFoldersRequest) returns (ListFoldersResponse) {
    option (google.api.http) = { get: "/yrm/v1/folders" };
  }

  rpc Resolve (ResolveFoldersRequest) returns (ResolveFoldersResponse);

  rpc Create (CreateFolderRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/yrm/v1/folders" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateFolderMetadata"
      response: "Folder"
    };
  }

  rpc Update (UpdateFolderRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/yrm/v1/folders/{folder_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateFolderMetadata"
      response: "Folder"
    };
  }

  rpc Delete (DeleteFolderRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/yrm/v1/folders/{folder_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteFolderMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc ListOperations (ListFolderOperationsRequest) returns (ListFolderOperationsResponse) {
    option (google.api.http) = { get: "/yrm/v1/folders/{folder_id}/operations" };
  }

  //access

  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse) {
    option (google.api.http) = { get: "/yrm/v1/folders/{resource_id}:listAccessBindings" };
  }

  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/yrm/v1/folders/{resource_id}:setAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/yrm/v1/folders/{resource_id}:updateAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
    option (yandex.cloud.api.tools.method).lint_skip.http_verb = true;
  }
}

message GetFolderRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
}

message ListFoldersRequest {
  string cloud_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
}

message ListFoldersResponse {
  repeated Folder folders = 1;
  string next_page_token = 2;
}

message ResolveFoldersRequest {
  repeated string folder_ids = 1 [(size) = "1-1000", (length) = "1-50"];
  google.protobuf.FieldMask response_mask = 2;
  bool resolve_existing_only = 3;
}

message ResolveFoldersResponse {
  repeated ResolvedFolder resolved_folders = 1;
}

message CreateFolderRequest {
  string cloud_id = 1 [(required) = true, (length) = "<=50"];
  string name = 2 [(required) = true, (pattern) = "[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 3 [(length) = "<=256"];
  map<string, string> labels = 4 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  string id = 5 [(length) = "<=50"];
}

message CreateFolderMetadata {
  string folder_id = 1;
}

message UpdateFolderRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  google.protobuf.FieldMask update_mask = 2;

  string name = 3 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 4 [(length) = "<=256"];
  map<string, string> labels = 5 [(priv.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
}

message UpdateFolderMetadata {
  string folder_id = 1;
}

message DeleteFolderRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The timestamp after which the process of deleting the folder should begin.
  // Until this timestamp, the folder goes into the [Folder.Status.PENDING_DELETION] state and all resources in this
  // folder are stopped. In this state, it is possible to cancel the delete operation without any loss.
  // After this timestamp, the status of the folder will become [Folder.Status.DELETING] and the process of deleting
  // all the resources  of the folder will be started. If [delete_after] is not specified it will be
  // (now + 24 hours). To initiate an immediate deletion [delete_after] must be <= now.
  google.protobuf.Timestamp delete_after = 2;
}

message DeleteFolderMetadata {
  string folder_id = 1;
  google.protobuf.Timestamp delete_after = 2;
}

message ListFolderOperationsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=50"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
}

message ListFolderOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}
